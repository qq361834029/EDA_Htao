<?php $GLOBALS['_beginTime'] = microtime(TRUE); defined('OPT_PASS_1') or define('OPT_PASS_1',1); defined('OPT_PASS_2') or define('OPT_PASS_2',2); defined('OPT_PASS_3') or define('OPT_PASS_3',4); defined('OPT_PASS_4') or define('OPT_PASS_4',8); defined('OPT_PASS_5') or define('OPT_PASS_5',16); defined('OPT_PASS_6') or define('OPT_PASS_6',32); defined('OPT_PASS_7') or define('OPT_PASS_7',64); defined('OPT_PASS_8') or define('OPT_PASS_8',128); defined('OPT_PASS_9') or define('OPT_PASS_9',256); defined('OPT_PASS_10') or define('OPT_PASS_10',512); defined('OPT_ALL') or define('OPT_ALL',-1); defined('OPTIMIZER_VERSION') or define('OPTIMIZER_VERSION','3.3.3'); defined('APP_DEBUG') or define('APP_DEBUG',false); defined('PAGE_TRACE') or define('PAGE_TRACE',false); defined('APP_PATH') or define('APP_PATH','./'); defined('FRAMENAME') or define('FRAMENAME','YttPHP'); defined('MEMORY_LIMIT_ON') or define('MEMORY_LIMIT_ON',true); defined('RUNTIME_PATH') or define('RUNTIME_PATH','./Runtime/'); defined('RUNTIME_FILE') or define('RUNTIME_FILE','./Runtime/~runtime.php'); defined('CONFIG_FILE') or define('CONFIG_FILE','./Runtime/~config.php'); defined('UPLOADS_PATH') or define('UPLOADS_PATH','./Runtime/Uploads/'); defined('THINK_PATH') or define('THINK_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/'); defined('THINK_VERSION') or define('THINK_VERSION','3.0'); defined('THINK_RELEASE') or define('THINK_RELEASE','20120323'); defined('MAGIC_QUOTES_GPC') or define('MAGIC_QUOTES_GPC',false); defined('IS_CGI') or define('IS_CGI',0); defined('IS_WIN') or define('IS_WIN',0); defined('IS_CLI') or define('IS_CLI',0); defined('APP_NAME') or define('APP_NAME','warehousing'); defined('_PHP_FILE_') or define('_PHP_FILE_','/wsl/EDA_HTao/warehousing/index.php'); defined('__APP_ROOT__') or define('__APP_ROOT__','/wsl/EDA_HTao/warehousing'); defined('__ROOT__') or define('__ROOT__','/wsl/EDA_HTao'); defined('PUBLIC_PATH') or define('PUBLIC_PATH','/wsl/EDA_HTao/YttPHP/Public/'); defined('APP_PUBLIC_PATH') or define('APP_PUBLIC_PATH','./Public/'); defined('APP_FONTS_PATH') or define('APP_FONTS_PATH','./Public/Fonts/'); defined('APP_EXCEL_PATH') or define('APP_EXCEL_PATH','./Public/Excel'); defined('URL_COMMON') or define('URL_COMMON',0); defined('URL_PATHINFO') or define('URL_PATHINFO',1); defined('URL_REWRITE') or define('URL_REWRITE',2); defined('URL_COMPAT') or define('URL_COMPAT',3); defined('CORE_PATH') or define('CORE_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/'); defined('EXTEND_PATH') or define('EXTEND_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Extend/'); defined('MODE_PATH') or define('MODE_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Extend/Mode/'); defined('ENGINE_PATH') or define('ENGINE_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Extend/Engine/'); defined('VENDOR_PATH') or define('VENDOR_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Extend/Vendor/'); defined('LIBRARY_PATH') or define('LIBRARY_PATH','/home/wsl/EDA_HTao/YttPHP/FrameWork/Extend/Library/'); defined('COMMON_PATH') or define('COMMON_PATH','./Common/'); defined('LIB_PATH') or define('LIB_PATH','./Lib/'); defined('CONF_PATH') or define('CONF_PATH','./Conf/'); defined('LANG_PATH') or define('LANG_PATH','./Runtime/Lang/'); defined('TMPL_PATH') or define('TMPL_PATH','./Tpl/'); defined('TMPL_PATH2') or define('TMPL_PATH2','/home/wsl/EDA_HTao/YttPHP/FrameWork/Tpl/'); defined('HTML_PATH') or define('HTML_PATH','./Html/'); defined('LOG_PATH') or define('LOG_PATH','./Runtime/Logs/'); defined('TEMP_PATH') or define('TEMP_PATH','./Runtime/Temp/'); defined('DATA_PATH') or define('DATA_PATH','./Runtime/Data/'); defined('CACHE_PATH') or define('CACHE_PATH','./Runtime/Cache/'); defined('BARCODE_PATH') or define('BARCODE_PATH','./Runtime/Barcode/'); defined('EXCEL_PATH') or define('EXCEL_PATH','/wsl/EDA_HTao/warehousing/Runtime/Data/Excel'); defined('WAY_BILL_PATH') or define('WAY_BILL_PATH','./Runtime/Data/WayBill/'); set_include_path(get_include_path() . PATH_SEPARATOR . VENDOR_PATH); function G($start,$end='',$dec=4) { static $_info = array(); if(is_float($end)) { $_info[$start] = $end; }elseif(!empty($end)){ if(!isset($_info[$end])) $_info[$end] = microtime(TRUE); return number_format(($_info[$end]-$_info[$start]),$dec); }else{ $_info[$start] = microtime(TRUE); } } function N($key, $step=0) { static $_num = array(); if (!isset($_num[$key])) { $_num[$key] = 0; } if (empty($step)) return $_num[$key]; else $_num[$key] = $_num[$key] + (int) $step; } function windowClose(){ echo '<script type="text/javascript">
		window.opener=null;
		window.open(\'\', \'_self\', \'\');
		window.close();
		</script>'; exit; } function parse_name($name, $type=0) { if ($type) { return ucfirst(preg_replace("/_([a-zA-Z])/e", "strtoupper('\\1')", $name)); } else { return strtolower(trim(preg_replace("/[A-Z]/", "_\\0", $name), "_")); } } function require_cache($filename) { static $_importFiles = array(); if (!isset($_importFiles[$filename])) { if (file_exists_case($filename)) { require $filename; $_importFiles[$filename] = true; } else { $_importFiles[$filename] = false; } } return $_importFiles[$filename]; } function file_exists_case($filename) { if (is_file($filename)) { if (IS_WIN && C('APP_FILE_CASE')) { if (basename(realpath($filename)) != basename($filename)) return false; } return true; } return false; } function import($class, $baseUrl = '', $ext='.class.php') { static $_file = array(); $class = str_replace(array('.', '#'), array('/', '.'), $class); if ('' === $baseUrl && false === strpos($class, '/')) { return alias_import($class); } if (isset($_file[$class . $baseUrl])) return true; else $_file[$class . $baseUrl] = true; $class_strut = explode('/', $class); if (empty($baseUrl)) { if ('@' == $class_strut[0] || APP_NAME == $class_strut[0]) { $baseUrl = dirname(LIB_PATH); $class = substr_replace($class, basename(LIB_PATH).'/', 0, strlen($class_strut[0]) + 1); }elseif ('think' == strtolower($class_strut[0])){ $baseUrl = CORE_PATH; $class = substr($class,6); }elseif (in_array(strtolower($class_strut[0]), array('org', 'com'))) { $baseUrl = LIBRARY_PATH; }else { $class = substr_replace($class, '', 0, strlen($class_strut[0]) + 1); $baseUrl = APP_PATH . '../' . $class_strut[0] . '/'.basename(LIB_PATH).'/'; } } if (substr($baseUrl, -1) != '/') $baseUrl .= '/'; $classfile = $baseUrl . $class . $ext; if (!class_exists(basename($class),false)) { return require_cache($classfile); } } function load($name, $baseUrl='', $ext='.php') { $name = str_replace(array('.', '#'), array('/', '.'), $name); if (empty($baseUrl)) { if (0 === strpos($name, '@/')) { $baseUrl = COMMON_PATH; $name = substr($name, 2); } else { $baseUrl = EXTEND_PATH . 'Function/'; } } if (substr($baseUrl, -1) != '/') $baseUrl .= '/'; require_cache($baseUrl . $name . $ext); } function vendor($class, $baseUrl = '', $ext='.php') { if (empty($baseUrl)) $baseUrl = VENDOR_PATH; return import($class, $baseUrl, $ext); } function alias_import($alias, $classfile='') { static $_alias = array(); if (is_string($alias)) { if(isset($_alias[$alias])) { return require_cache($_alias[$alias]); }elseif ('' !== $classfile) { $_alias[$alias] = $classfile; return; } }elseif (is_array($alias)) { $_alias = array_merge($_alias,$alias); return; } return false; } function D($name='') { if(empty($name)) return new Model; static $_model = array(); if(isset($_model[$name])) return $_model[$name]; if(strpos($name,':///')) { $name = str_replace(':///','/Model/',$name); }else{ $name = C('DEFAULT_APP').'/Model/'.$name; } import($name.'Model'); $class = basename($name.'Model'); if(class_exists($class,true)) { $model = new $class(); }else { $class = basename($name.'PublicModel'); if(class_exists($class,true)) { $model = new $class(); }else { $model = new Model(basename($name)); } } $_model[$name] = $model; return $model; } function T($name='') { if(empty($name)) return false; static $_model = array(); if(isset($_model[$name])) return $_model[$name]; if(strpos($name,':///')) { $name = str_replace(':///','/Model/',$name); }else{ $name = C('DEFAULT_APP').'/Model/'.$name; } import($name.'Status'); $class = basename($name.'Status'); if(class_exists($class,true)) { $model = new $class(); }else { $class = basename($name.'PublicStatus'); if(class_exists($class,true)) { $model = new $class(); } } $_model[$name] = $model; return $model; } function M($name='', $tablePrefix='',$connection='') { static $_model = array(); if(strpos($name,':')) { list($class,$name) = explode(':',$name); }else{ $class = 'Model'; } if (!isset($_model[$name . '_' . $class])) $_model[$name . '_' . $class] = new $class($name,$tablePrefix,$connection); return $_model[$name . '_' . $class]; } function A($name) { static $_action = array(); if(isset($_action[$name])) return $_action[$name]; if(strpos($name,':///')) { $name = str_replace(':///','/Action/',$name); }else{ $name = '@/Action/'.$name; } import($name.'Action'); $class = basename($name.'Action'); if(class_exists($class,false)) { $action = new $class(); $_action[$name] = $action; return $action; }else { $class = basename($name.'PublicAction'); if(class_exists($class,true)) { $action = new $class(); $_action[$name] = $action; return $action; } return false; } } function R($url,$vars=array()) { $info = pathinfo($url); $action = $info['basename']; $module = $info['dirname']; $class = A($module); if($class) return call_user_func_array(array(&$class,$action),$vars); else return false; } function L($name=null, $value=null) { static $_lang = array(); if (empty($name)) return $_lang; if (is_string($name)) { $name = strtolower($name); if (is_null($value)) return isset($_lang[$name]) ? $_lang[$name] : $name; $_lang[$name] = $value; return; } if (is_array($name)) $_lang = array_merge($_lang, array_change_key_case($name, CASE_LOWER)); return; } function addLang($module){ if (strpos($module,',')) {$module = explode(',',$module);} if (is_array($module)) { foreach ($module as $value){ if (is_file(THINK_PATH.'Lang/'.LANG_SET.'/'.strtolower($value).'.php')){ L(include THINK_PATH.'Lang/'.LANG_SET.'/'.strtolower($value).'.php'); } if (is_file(LANG_PATH.LANG_SET.'/'.strtolower($value).'.php')) L(include LANG_PATH.LANG_SET.'/'.strtolower($value).'.php'); } }else { if (is_file(THINK_PATH.'Lang/'.LANG_SET.'/'.strtolower($module).'.php')){ L(include THINK_PATH.'Lang/'.LANG_SET.'/'.strtolower($module).'.php'); } if (is_file(LANG_PATH.LANG_SET.'/'.strtolower($module).'.php')) L(include LANG_PATH.LANG_SET.'/'.strtolower($module).'.php'); } } function C($name=null, $value=null) { static $_config = array(); if (empty($name)) return $_config; if (is_string($name)) { if (!strpos($name, '.')) { $name = strtolower($name); if (is_null($value)) return isset($_config[$name]) ? $_config[$name] : null; $_config[$name] = $value; return; } $name = explode('.', $name); $name[0] = strtolower($name[0]); if (is_null($value)) return isset($_config[$name[0]][$name[1]]) ? $_config[$name[0]][$name[1]] : null; $_config[$name[0]][$name[1]] = $value; return; } if (is_array($name)){ return $_config = array_merge($_config, array_change_key_case($name)); } return null; } function tag($tag, &$params=NULL) { $extends = C('extends.' . $tag); $tags = C('tags.' . $tag); if (!empty($tags)) { if(empty($tags['_overlay']) && !empty($extends)) { $tags = array_unique(array_merge($extends,$tags)); }elseif(isset($tags['_overlay'])){ unset($tags['_overlay']); } }elseif(!empty($extends)) { $tags = $extends; } if($tags) { if (strpos($tag,'&') || strpos($tag,'^')) { $brf_method = true; } if(APP_DEBUG) { G($tag.'Start'); Log::record('Tag[ '.$tag.' ] --START--',Log::INFO); } foreach ($tags as $key=>$name) { if(!is_int($key)) { $name = $key; } B($name, $params,$brf_method); } if(APP_DEBUG) { Log::record('Tag[ '.$tag.' ] --END-- [ RunTime:'.G($tag.'Start',$tag.'End',6).'s ]',Log::INFO); } }else{ return false; } } function add_tag_behavior($tag,$behavior,$path='') { $array = C('tags.'.$tag); if(!$array) { $array = array(); } if($path) { $array[$behavior] = $path; }else{ $array[] = $behavior; } C('tags.'.$tag,$array); } function filter($name, &$content) { $class = $name . 'Filter'; require_cache(LIB_PATH . 'Filter/' . $class . '.class.php'); $filter = new $class(); $content = $filter->run($content); } function B($name, &$params=NULL,$brf_method=false) { G('behaviorStart'); $class = $name.'Behavior'; if(class_exists($class,true)) { $behavior = new $class(); }else { $class = $name.'PublicBehavior'; $behavior = new $class(); } if ($brf_method===true) { $behavior->brf($params); }else { $behavior->run($params); } if(APP_DEBUG) { G('behaviorEnd'); Log::record('Run '.$name.' Behavior [ RunTime:'.G('behaviorStart','behaviorEnd',6).'s ]',Log::INFO); } } function W($name, $data=array(), $return=false) { $class = $name . 'Widget'; require_cache(LIB_PATH . 'Widget/' . $class . '.class.php'); if (!class_exists($class)) throw_exception(L('_CLASS_NOT_EXIST_') . ':' . $class); $widget = Think::instance($class); $content = $widget->render($data); if ($return) return $content; else echo $content; } function strip_whitespace($content) { $stripStr = ''; $tokens = token_get_all($content); $last_space = false; for ($i = 0, $j = count($tokens); $i < $j; $i++) { if (is_string($tokens[$i])) { $last_space = false; $stripStr .= $tokens[$i]; } else { switch ($tokens[$i][0]) { case T_COMMENT: case T_DOC_COMMENT: break; case T_WHITESPACE: if (!$last_space) { $stripStr .= ' '; $last_space = true; } break; case T_START_HEREDOC: $stripStr .= "<<<THINK\n"; break; case T_END_HEREDOC: $stripStr .= "THINK;\n"; for($k = $i+1; $k < $j; $k++) { if(is_string($tokens[$k]) && $tokens[$k] == ';') { $i = $k; break; } else if($tokens[$k][0] == T_CLOSE_TAG) { break; } } break; default: $last_space = false; $stripStr .= $tokens[$i][1]; } } } return $stripStr; } class Think { private static $_instance = array(); static public function start() { set_error_handler(array('Think','appError')); set_exception_handler(array('Think','appException')); spl_autoload_register(array('Think', 'autoload')); ini_set('memory_limit','512M'); App::run(); return ; } public static function autoload($class) { if(alias_import($class)) return ; if(substr($class,-8)=='Behavior') { if(require_cache(CORE_PATH.'Behavior/'.$class.'.class.php') || require_cache(EXTEND_PATH.'Behavior/'.$class.'.class.php') || require_cache(LIB_PATH.'Behavior/'.$class.'.class.php') || (defined('MODE_NAME') && require_cache(MODE_PATH.ucwords(MODE_NAME).'/Behavior/'.$class.'.class.php'))) { return ; } }elseif(substr($class,-5)=='Model'){ if((defined('GROUP_NAME') && require_cache(LIB_PATH.'Model/'.GROUP_NAME.'/'.$class.'.class.php')) || require_cache(LIB_PATH.'Model/'.$class.'.class.php') || require_cache(EXTEND_PATH.'Model/'.$class.'.class.php') ) { return ; } }elseif(substr($class,-6)=='Action'){ if((defined('GROUP_NAME') && require_cache(LIB_PATH.'Action/'.GROUP_NAME.'/'.$class.'.class.php')) || require_cache(LIB_PATH.'Action/'.$class.'.class.php') || require_cache(EXTEND_PATH.'Action/'.$class.'.class.php') ) { return ; } }elseif(substr($class,-6)=='Status'){ if((defined('GROUP_NAME') && require_cache(LIB_PATH.'Status/'.GROUP_NAME.'/'.$class.'.class.php')) || require_cache(LIB_PATH.'Status/'.$class.'.class.php') || require_cache(EXTEND_PATH.'Status/'.$class.'.class.php') ) { return ; } }elseif(substr($class,-9)=='Interface'){ if((defined('GROUP_NAME') && require_cache(LIB_PATH.'Interface/'.GROUP_NAME.'/'.$class.'.class.php')) || require_cache(LIB_PATH.'Interface/'.$class.'.class.php') || require_cache(EXTEND_PATH.'Interface/'.$class.'.class.php') ) { return ; } } $paths = explode(',',C('APP_AUTOLOAD_PATH')); foreach ($paths as $path){ if(import($path.'.'.$class)) return ; } } static public function instance($class,$method='') { $identify = $class.$method; if(!isset(self::$_instance[$identify])) { if(class_exists($class)){ $o = new $class(); if(!empty($method) && method_exists($o,$method)) self::$_instance[$identify] = call_user_func_array(array(&$o, $method)); else self::$_instance[$identify] = $o; } else halt(L('_CLASS_NOT_EXIST_').':'.$class); } return self::$_instance[$identify]; } static public function appException($e) { halt($e->__toString()); } static public function appError($errno, $errstr, $errfile, $errline) { switch ($errno) { case E_ERROR: case E_USER_ERROR: $errorStr = "[$errno] $errstr ".basename($errfile)." 第 $errline 行."; if(C('LOG_RECORD')) Log::write($errorStr,Log::ERR); halt($errorStr); break; case E_STRICT: case E_USER_WARNING: case E_USER_NOTICE: default: $errorStr = "[$errno] $errstr ".basename($errfile)." 第 $errline 行."; Log::record($errorStr,Log::NOTICE); break; } } public function __set($name ,$value) { if(property_exists($this,$name)) $this->$name = $value; } public function __get($name) { return isset($this->$name)?$this->$name:null; } } class ThinkException extends Exception { private $type; private $extra; public function __construct($message,$code=0,$extra=false) { parent::__construct($message,$code); $this->type = get_class($this); $this->extra = $extra; } public function __toString() { $trace = $this->getTrace(); if($this->extra) array_shift($trace); $this->class = $trace[0]['class']; $this->function = $trace[0]['function']; $this->file = $trace[0]['file']; $this->line = $trace[0]['line']; $file = file($this->file); $traceInfo=''; $time = date('y-m-d H:i:m'); foreach($trace as $t) { $traceInfo .= '['.$time.'] '.$t['file'].' ('.$t['line'].') '; $traceInfo .= $t['class'].$t['type'].$t['function'].'('; $traceInfo .= implode(', ', $t['args']); $traceInfo .=")\n"; } $error['message'] = $this->message; $error['type'] = $this->type; $error['detail'] = L('_MODULE_').'['.MODULE_NAME.'] '.L('_ACTION_').'['.ACTION_NAME.']'."\n"; $error['detail'] .= ($this->line-2).': '.$file[$this->line-3]; $error['detail'] .= ($this->line-1).': '.$file[$this->line-2]; $error['detail'] .= '<font color="#FF6600" >'.($this->line).': <strong>'.$file[$this->line-1].'</strong></font>'; $error['detail'] .= ($this->line+1).': '.$file[$this->line]; $error['detail'] .= ($this->line+2).': '.$file[$this->line+1]; $error['class'] = $this->class; $error['function'] = $this->function; $error['file'] = $this->file; $error['line'] = $this->line; $error['trace'] = $traceInfo; if(C('LOG_EXCEPTION_RECORD')) { Log::Write('('.$this->type.') '.$this->message); } return $error ; } } class JsonException extends Exception { private $type; private $extra; public function __construct($message,$code=0,$extra=false) { is_array($message) && $message = implode('</br>',$message); parent::__construct($message,$code); $this->type = get_class($this); $this->extra = $extra; } public function __toString() { header('Content-Type:text/html; charset=utf-8'); if ($_POST['referer']=='js') { $result = array(); $result['status'] = 0; if(isset($_POST['error_message'])){ $result['msg'] = $_POST['error_message'].'<br/><br/>'.$this->message.'<br/><br/>'; }else{ $result['info'] = $this->message; } $result['data'] = C('throw_json_data'); exit(json_encode($result)); }elseif (C('THROW_JSON_TO_STRING') === true) { exit($this->message); }else { exit('<div class="prompt_div">'.$this->message.'</div>'); } } } abstract class Behavior { protected $options = array(); public function __construct() { if(!empty($this->options)) { foreach ($this->options as $name=>$val){ if(NULL !== C($name)) { $this->options[$name] = C($name); }else{ C($name,$val); } } array_change_key_case($this->options); } } public function __get($name){ return $this->options[strtolower($name)]; } abstract public function run(&$params); public function brf($params){ $method = !empty($params['method_name']) ? $params['method_name'] : getTrueAction(); if (method_exists($this,$method)) { return $this->$method($params); } } } abstract class Status { protected $options = array(); protected $td; public function __construct(){ $this->db = Db::getInstance(); } public function __call($method,$params){ exit('状态类方法：“'.$method.'”不存在！'); } public function __get($name){ return $this->options[strtolower($name)]; } public function run($params,$method) { empty($method) && $method = MODULE_NAME; $this->$method($params); } public function setState($params) { $module_name = isset($params['state_module_name']) && !empty($params['state_module_name']) ? $params['state_module_name'] : MODULE_NAME; $object_type = array_search($module_name,C('STATE_OBJECT_TYPE')); $update_field_name = array_search($module_name,C('STATE_OBJECT_FIELD')); $comments = trim($params['state_log_comments']); $object_ids = !is_array($params['id']) ? explode(',', trim($params['id'])) : $params['id']; if (count($object_ids) > 0 && isset($params[$update_field_name])) { $state = $params[$update_field_name]; $create_time = date("Y-m-d H:i:s"); $user_id = getUser('id'); $modelStateLog = M('state_log'); $insertAll = array(); $where = array( 'object_id' => array('in', $object_ids), 'object_type' => $object_type ); $child_sql = $modelStateLog->where($where)->order('id desc')->field('object_id, state_id')->buildSql(); $last_state_sql = 'select object_id, state_id from ' . $child_sql . ' tmp group by object_id'; $last_state = M()->query($last_state_sql); $last_state_id = array(); foreach ($last_state as $val) { $last_state_id[$val['object_id']] = $val['state_id']; } foreach ($object_ids as $object_id) { $state_id = is_array($state) ? $state[$object_id] : $state; if ($state_id <= 0) { throw_json('单据状态异常，请联系客服人员！'); } if ($object_id > 0 && $state_id != $last_state_id[$object_id]) { $insertAll[] = array( 'object_type' => $object_type, 'object_id' => $object_id, 'state_id' => $state_id, 'user_id' => $user_id > 0 ? $user_id : 1, 'create_time' => $create_time, 'comments' => $comments, ); } } if (count($insertAll) > 0) { $modelStateLog->addAll($insertAll); unset($insertAll); } } } } class CheckLangBehavior extends Behavior { protected $options = array( 'LANG_SWITCH_ON' => true, 'LANG_AUTO_DETECT' => true, 'LANG_LIST' => 'cn,de,it,es,pl,en,fr', 'VAR_LANGUAGE' => 'l', ); public function run(&$params){ $this->checkLanguage(); } private function checkLanguage() { if (!C('LANG_SWITCH_ON')){ return; } $langSet = C('DEFAULT_LANG'); if (C('LANG_AUTO_DETECT')){ if(isset($_GET[C('VAR_LANGUAGE')])){ $langSet = $_GET[C('VAR_LANGUAGE')]; cookie('think_language',$langSet,3600); }elseif(cookie('think_language')){ $langSet = cookie('think_language'); }elseif(isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])){ preg_match('/^([a-z\-]+)/i', $_SERVER['HTTP_ACCEPT_LANGUAGE'], $matches); $langSet = $matches[1]; cookie('think_language',$langSet,3600); } if(false === stripos(C('LANG_LIST'),$langSet)) { $langSet = C('DEFAULT_LANG'); } } define('LANG_SET',strtolower($langSet)); if (is_file(LANG_PATH.LANG_SET.'/common.php')) L(include LANG_PATH.LANG_SET.'/common.php'); $group = ''; if (is_file(LANG_PATH.LANG_SET.'/'.$group.strtolower(MODULE_NAME).'.php')) L(include LANG_PATH.LANG_SET.'/'.$group.strtolower(MODULE_NAME).'.php'); C(include(THINK_PATH.'Conf/extendDd.php')); if(is_file(APP_PATH.'Conf/extendDd.php')){ C(include APP_PATH.'Conf/extendDd.php'); } } } !defined('THINK_PATH') && exit(); class ReadHtmlCacheBehavior extends Behavior { protected $options = array( 'HTML_CACHE_ON'=>false, 'HTML_CACHE_TIME'=>60, 'HTML_CACHE_RULES'=>array(), 'HTML_FILE_SUFFIX'=>'.html', ); public function run(&$params){ if(C('HTML_CACHE_ON')) { $cacheTime = $this->requireHtmlCache(); if( false !== $cacheTime && $this->checkHTMLCache(HTML_FILE_NAME,$cacheTime)) { readfile(HTML_FILE_NAME); exit(); } } } static private function requireHtmlCache() { $htmls = C('HTML_CACHE_RULES'); if(!empty($htmls)) { $htmls = array_change_key_case($htmls); $moduleName = strtolower(MODULE_NAME); $actionName = strtolower(ACTION_NAME); if(isset($htmls[$moduleName.':'.$actionName])) { $html = $htmls[$moduleName.':'.$actionName]; }elseif(isset($htmls[$moduleName.':'])){ $html = $htmls[$moduleName.':']; }elseif(isset($htmls[$actionName])){ $html = $htmls[$actionName]; }elseif(isset($htmls['*'])){ $html = $htmls['*']; }elseif(isset($htmls['empty:index']) && !class_exists(MODULE_NAME.'Action')){ $html = $htmls['empty:index']; }elseif(isset($htmls[$moduleName.':_empty']) && $this->isEmptyAction(MODULE_NAME,ACTION_NAME)){ $html = $htmls[$moduleName.':_empty']; } if(!empty($html)) { $rule = $html[0]; $rule = preg_replace('/{\$(_\w+)\.(\w+)\|(\w+)}/e',"\\3(\$\\1['\\2'])",$rule); $rule = preg_replace('/{\$(_\w+)\.(\w+)}/e',"\$\\1['\\2']",$rule); $rule = preg_replace('/{(\w+)\|(\w+)}/e',"\\2(\$_GET['\\1'])",$rule); $rule = preg_replace('/{(\w+)}/e',"\$_GET['\\1']",$rule); $rule = str_ireplace( array('{:app}','{:module}','{:action}','{:group}'), array(APP_NAME,MODULE_NAME,ACTION_NAME,defined('GROUP_NAME')?GROUP_NAME:''), $rule); $rule = preg_replace('/{|(\w+)}/e',"\\1()",$rule); if(!empty($html[2])) $rule = $html[2]($rule); $cacheTime = isset($html[1])?$html[1]:C('HTML_CACHE_TIME'); define('HTML_FILE_NAME',HTML_PATH . $rule.C('HTML_FILE_SUFFIX')); return $cacheTime; } } return false; } static public function checkHTMLCache($cacheFile='',$cacheTime='') { if(!is_file($cacheFile)){ return false; }elseif (filemtime(C('TEMPLATE_NAME')) > filemtime($cacheFile)) { return false; }elseif(!is_numeric($cacheTime) && function_exists($cacheTime)){ return $cacheTime($cacheFile); }elseif ($cacheTime != 0 && time() > filemtime($cacheFile)+$cacheTime) { return false; } return true; } static private function isEmptyAction($module,$action) { $className = $module.'Action'; $class=new $className; return !method_exists($class,$action); } } !defined('THINK_PATH') && exit(); class CheckRouteBehavior extends Behavior { protected $options = array( 'URL_ROUTER_ON' => false, 'URL_ROUTE_RULES' => array(), ); public function run(&$return){ $regx = trim($_SERVER['PATH_INFO'],'/'); if(empty($regx)) return $return = true; if(!C('URL_ROUTER_ON')) return $return = false; $routes = C('URL_ROUTE_RULES'); if(!empty($routes)) { $depr = C('URL_PATHINFO_DEPR'); $regx = str_replace($depr,'/',$regx); foreach ($routes as $rule=>$route){ if(0===strpos($rule,'/') && preg_match($rule,$regx,$matches)) { return $return = $this->parseRegex($matches,$route,$regx); }else{ $len1= substr_count($regx,'/'); $len2 = substr_count($rule,'/'); if($len1>=$len2) { if('$' == substr($rule,-1,1)) { if($len1 != $len2) { continue; }else{ $rule = substr($rule,0,-1); } } $match = $this->checkUrlMatch($regx,$rule); if($match) return $return = $this->parseRule($rule,$route,$regx); } } } } $return = false; } private function checkUrlMatch($regx,$rule) { $m1 = explode('/',$regx); $m2 = explode('/',$rule); $match = true; foreach ($m2 as $key=>$val){ if(':' == substr($val,0,1)) { if(strpos($val,'\\')) { $type = substr($val,-1); if('d'==$type && !is_numeric($m1[$key])) { $match = false; break; } }elseif(strpos($val,'^')){ $array = explode('|',substr(strstr($val,'^'),1)); if(in_array($m1[$key],$array)) { $match = false; break; } } }elseif(0 !== strcasecmp($val,$m1[$key])){ $match = false; break; } } return $match; } private function parseUrl($url) { $var = array(); if(false !== strpos($url,'?')) { $info = parse_url($url); $path = explode('/',$info['path']); parse_str($info['query'],$var); }elseif(strpos($url,'/')){ $path = explode('/',$url); }else{ parse_str($url,$var); } if(isset($path)) { $var[C('VAR_ACTION')] = array_pop($path); if(!empty($path)) { $var[C('VAR_MODULE')] = array_pop($path); } if(!empty($path)) { $var[C('VAR_GROUP')] = array_pop($path); } } return $var; } private function parseRule($rule,$route,$regx) { $url = is_array($route)?$route[0]:$route; $paths = explode('/',$regx); $matches = array(); $rule = explode('/',$rule); foreach ($rule as $item){ if(0===strpos($item,':')) { if($pos = strpos($item,'^') ) { $var = substr($item,1,$pos-1); }elseif(strpos($item,'\\')){ $var = substr($item,1,-2); }else{ $var = substr($item,1); } $matches[$var] = array_shift($paths); }else{ array_shift($paths); } } if(0=== strpos($url,'/') || 0===strpos($url,'http')) { if(strpos($url,':')) { $values = array_values($matches); $url = preg_replace('/:(\d+)/e','$values[\\1-1]',$url); } header("Location: $url", true,(is_array($route) && isset($route[1]))?$route[1]:301); exit; }else{ $var = $this->parseUrl($url); $values = array_values($matches); foreach ($var as $key=>$val){ if(0===strpos($val,':')) { $var[$key] = $values[substr($val,1)-1]; } } $var = array_merge($matches,$var); if($paths) { preg_replace('@(\w+)\/([^\/]+)@e', '$var[strtolower(\'\\1\')]=strip_tags(\'\\2\');', implode('/',$paths)); } if(is_array($route) && isset($route[1])) { parse_str($route[1],$params); $var = array_merge($var,$params); } $_GET = array_merge($var,$_GET); } return true; } private function parseRegex($matches,$route,$regx) { $url = is_array($route)?$route[0]:$route; $url = preg_replace('/:(\d+)/e','$matches[\\1]',$url); if(0=== strpos($url,'/') || 0===strpos($url,'http')) { header("Location: $url", true,(is_array($route) && isset($route[1]))?$route[1]:301); exit; }else{ $var = $this->parseUrl($url); $regx = substr_replace($regx,'',0,strlen($matches[0])); if($regx) { preg_replace('@(\w+)\/([^,\/]+)@e', '$var[strtolower(\'\\1\')]=strip_tags(\'\\2\');', $regx); } if(is_array($route) && isset($route[1])) { parse_str($route[1],$params); $var = array_merge($var,$params); } $_GET = array_merge($var,$_GET); } return true; } } class LogBehavior extends Behavior { public function run(&$params){ $no_log_module = array( 'BankRemittance', 'BankLog', 'OtherExpenses', 'OtherRevenue', 'ClientIni', 'FactoryIni', 'BankIni', 'LogisticsIni', 'ClientOtherArrearages', 'ClientFunds', 'ClientCheckAccount', 'FactoryOtherArrearages', 'FactoryCheckAccount', 'FactoryFunds', 'LogisticsOtherArrearages', 'LogisticsCheckAccount', 'LogisticsFunds', ); if (in_array(MODULE_NAME,$no_log_module)) { return false; } $log_actions = array( 'insert', 'update', 'delete', 'resetPasswd', 'setEnable', 'setFinishDetailState', 'backShelves', ); if (in_array(ACTION_NAME,$log_actions)) { $model = D(MODULE_NAME); $model->insertLog($params['id']); } } } !defined('THINK_PATH') && exit(); class LocationTemplateBehavior extends Behavior { public function run(&$templateFile){ if(!file_exists_case($templateFile)) $templateFile = $this->parseTemplateFile($templateFile); } private function parseTemplateFile($templateFile) { if(''==$templateFile) { $templateFile = C('TEMPLATE_NAME'); }elseif(false === strpos($templateFile,C('TMPL_TEMPLATE_SUFFIX'))){ $path = explode(':',$templateFile); $action = array_pop($path); $module = !empty($path)?array_pop($path):MODULE_NAME; if(!empty($path)) { $path = dirname(THEME_PATH).'/'.array_pop($path).'/'; }else{ $path = THEME_PATH; } $depr = defined('GROUP_NAME')?C('TMPL_FILE_DEPR'):'/'; $templateFile = $path.$module.$depr.$action.C('TMPL_TEMPLATE_SUFFIX'); } $templateFile = str_replace('///','/',$templateFile); return $templateFile; } } !defined('THINK_PATH') && exit(); class ParseTemplateBehavior extends Behavior { protected $options = array( 'TMPL_ENGINE_TYPE' => 'Smarty', 'TMPL_CACHFILE_SUFFIX' => '.tpl', 'TMPL_DENY_FUNC_LIST' => 'echo,exit', 'TMPL_DENY_PHP' =>false, 'TMPL_L_DELIM' => '{', 'TMPL_R_DELIM' => '}', 'TMPL_VAR_IDENTIFY' => 'array', 'TMPL_STRIP_SPACE' => true, 'TMPL_CACHE_ON' => true, 'TMPL_CACHE_TIME' => 0, 'TMPL_LAYOUT_ITEM' => '{__CONTENT__}', 'LAYOUT_ON' => false, 'LAYOUT_NAME' => 'layout', 'TAGLIB_BEGIN' => '<', 'TAGLIB_END' => '>', 'TAGLIB_LOAD' => true, 'TAGLIB_BUILD_IN' => 'cx', 'TAGLIB_PRE_LOAD' => '', ); public function run(&$_data){ $engine = strtolower(C('TMPL_ENGINE_TYPE')); if('think'==$engine){ if($this->checkCache($_data['file'])) { extract($_data['var'], EXTR_OVERWRITE); include C('CACHE_PATH').md5($_data['file']).C('TMPL_CACHFILE_SUFFIX'); }else{ $tpl = Think::instance('ThinkTemplate'); $tpl->fetch($_data['file'],$_data['var']); } }else{ $class = 'Template'.ucwords($engine); if(is_file(CORE_PATH.'Driver/Template/'.$class.'.class.php')) { $path = CORE_PATH; }else{ $path = EXTEND_PATH; } if(require_cache($path.'Driver/Template/'.$class.'.class.php')) { $tpl = new $class; $tpl->fetch($_data['file'],$_data['var']); echo $_data['var']['page']; }else { throw_exception(L('_NOT_SUPPERT_').': ' . $class); } } } protected function checkCache($tmplTemplateFile) { if (!C('TMPL_CACHE_ON')) return false; $tmplCacheFile = C('CACHE_PATH').md5($tmplTemplateFile).C('TMPL_CACHFILE_SUFFIX'); if(!is_file($tmplCacheFile)){ return false; }elseif (filemtime($tmplTemplateFile) > filemtime($tmplCacheFile)) { return false; }elseif (C('TMPL_CACHE_TIME') != 0 && time() > filemtime($tmplCacheFile)+C('TMPL_CACHE_TIME')) { return false; } if(C('LAYOUT_ON')) { $layoutFile = THEME_PATH.C('LAYOUT_NAME').C('TMPL_TEMPLATE_SUFFIX'); if(filemtime($layoutFile) > filemtime($tmplCacheFile)) { return false; } } return true; } } !defined('THINK_PATH') && exit(); class ContentReplaceBehavior extends Behavior { protected $options = array( 'TMPL_PARSE_STRING'=>array(), ); public function run(&$content){ $content = $this->templateContentReplace($content); } protected function templateContentReplace($content) { $var_page = $_REQUEST[C('VAR_PAGE')]?$_REQUEST[C('VAR_PAGE')]:1; switch (MODULE_NAME){ case 'AmazonSeller': if(LANG_SET=='de'){ $width = '125px'; }else{ $width = '78px'; } break; default : $width = '78px'; break; } $search_start = '<div class="search_box">
							<table width="100%" border="0" cellspacing="0" cellpadding="0">
							  <tr>
								<td>
								<div class="search_left">'; $search_end = '</div>
								</td>
								<td id="search_button_bg" background="'.PUBLIC_PATH.'Images/Default/search_button_bg.gif" bgcolor="#DBEAFF" style="width:'.$width.'" align="center">
								<input type="hidden" name="search_form" value="1">
								<input type="hidden" name="'.C('VAR_PAGE').'" id="'.C('VAR_PAGE').'" value="'.$var_page.'">
								<button class="mout_search" value="1" onmouseout="this.className=\'mout_search\'" onmouseover="this.className=\'mover_search\'" name="ac_search" id="ac_search" type="submit">'.L('search').'</button>
								</td>
							  </tr>
							</table>
						</div>'; $time = time(); $scroll_bar_start = '<div id="scroll'.$time.'">'; $scroll_bar_end = '</div> 
                            <script type="text/javascript">
                                (function($){
                                    $dom.ready(function(){
                                        $("#scroll'.$time.'").mCustomScrollbar({
                                            axis:"x",
                                            advanced:{ autoExpandHorizontalScroll:true}
                                        });
                                    });
                                })(jQuery);
                            </script>'; $replace = array( '__TMPL__' => APP_TMPL_PATH, '__ROOT__' => __ROOT__, '__APP_ROOT__' => __APP_ROOT__, '__APP__' => __APP__, '__GROUP__' => defined('GROUP_NAME')?__GROUP__:__APP__, '__ACTION__' => __ACTION__, '__SELF__' => __SELF__, '__URL__' => __URL__, '../Public' => __APP_ROOT__.'/Public', '__PUBLIC__' => rtrim(PUBLIC_PATH, '/'), '__SEARCH_START__' => $search_start, '__SEARCH_END__' => $search_end, '__SCROLL_BAR_START__' => $scroll_bar_start, '__SCROLL_BAR_END__' => $scroll_bar_end, '__*__' => '<span class="font_red">*</span>', ); if(is_array(C('TMPL_PARSE_STRING')) ) $replace = array_merge($replace,C('TMPL_PARSE_STRING')); $content = str_replace(array_keys($replace),array_values($replace),$content); return $content; } } class TokenBuildBehavior extends Behavior { protected $options = array( 'TOKEN_ON' => false, 'TOKEN_NAME' => '__hash__', 'TOKEN_TYPE' => 'md5', 'TOKEN_RESET' => true, ); public function run(&$content){ if(C('TOKEN_ON')) { list($tokenName,$tokenKey,$tokenValue)=$this->getToken(); $input_token = '<input type="hidden" name="'.$tokenName.'" value="'.$tokenKey.'_'.$tokenValue.'" />'; $meta_token = '<meta name="'.$tokenName.'" content="'.$tokenKey.'_'.$tokenValue.'" />'; if(strpos($content,'{__TOKEN__}')) { $content = str_replace('{__TOKEN__}',$input_token,$content); }elseif(preg_match('/<\/form(\s*)>/is',$content,$match)) { $content = str_replace($match[0],$input_token.$match[0],$content); } $content = str_ireplace('</head>',$meta_token.'</head>',$content); }else{ $content = str_replace('{__TOKEN__}','',$content); } } private function getToken(){ $tokenName = C('TOKEN_NAME'); $tokenType = C('TOKEN_TYPE'); if(!isset($_SESSION[$tokenName])) { $_SESSION[$tokenName] = array(); } $tokenKey = md5($_SERVER['REQUEST_URI']); if(isset($_SESSION[$tokenName][$tokenKey])) { $tokenValue = $_SESSION[$tokenName][$tokenKey]; }else{ $tokenValue = $tokenType(microtime(TRUE)); $_SESSION[$tokenName][$tokenKey] = $tokenValue; if(IS_AJAX && C('TOKEN_RESET')) header($tokenName.': '.$tokenKey.'_'.$tokenValue); } return array($tokenName,$tokenKey,$tokenValue); } } !defined('THINK_PATH') && exit(); class WriteHtmlCacheBehavior extends Behavior { public function run(&$content){ if(C('HTML_CACHE_ON') && defined('HTML_FILE_NAME')) { if(!is_dir(dirname(HTML_FILE_NAME))) mkdir(dirname(HTML_FILE_NAME),0777,true); if( false === file_put_contents( HTML_FILE_NAME , $content )) throw_exception(L('_CACHE_WRITE_ERROR_').':'.HTML_FILE_NAME); } } } !defined('THINK_PATH') && exit(); class ShowRuntimeBehavior extends Behavior { protected $options = array( 'SHOW_RUN_TIME' => false, 'SHOW_ADV_TIME' => false, 'SHOW_DB_TIMES' => false, 'SHOW_CACHE_TIMES' => false, 'SHOW_USE_MEM' => false, 'SHOW_LOAD_FILE' => false, 'SHOW_FUN_TIMES' => false , ); public function run(&$content){ if(C('SHOW_RUN_TIME')){ if(false !== strpos($content,'{__NORUNTIME__}')) { $content = str_replace('{__NORUNTIME__}','',$content); }else{ $runtime = $this->showTime(); if(strpos($content,'{__RUNTIME__}')) $content = str_replace('{__RUNTIME__}',$runtime,$content); else $content .= $runtime; } }else{ $content = str_replace(array('{__NORUNTIME__}','{__RUNTIME__}'),'',$content); } } private function showTime() { G('beginTime',$GLOBALS['_beginTime']); G('viewEndTime'); $showTime = 'Process: '.G('beginTime','viewEndTime').'s '; if(C('SHOW_ADV_TIME')) { $showTime .= '( Load:'.G('beginTime','loadTime').'s Init:'.G('loadTime','initTime').'s Exec:'.G('initTime','viewStartTime').'s Template:'.G('viewStartTime','viewEndTime').'s )'; } if(C('SHOW_DB_TIMES') && class_exists('Db',false) ) { $showTime .= ' | DB :'.N('db_query').' queries '.N('db_write').' writes '; } if(C('SHOW_CACHE_TIMES') && class_exists('Cache',false)) { $showTime .= ' | Cache :'.N('cache_read').' gets '.N('cache_write').' writes '; } if(MEMORY_LIMIT_ON && C('SHOW_USE_MEM')) { $showTime .= ' | UseMem:'. number_format((memory_get_usage() - $GLOBALS['_startUseMems'])/1024).' kb'; } if(C('SHOW_LOAD_FILE')) { $showTime .= ' | LoadFile:'.count(get_included_files()); } if(C('SHOW_FUN_TIMES')) { $fun = get_defined_functions(); $showTime .= ' | CallFun:'.count($fun['user']).','.count($fun['internal']); } return $showTime; } } !defined('THINK_PATH') && exit(); class ShowPageTraceBehavior extends Behavior { protected $options = array( 'SHOW_PAGE_TRACE' => false, ); public function run(&$params){ if(C('SHOW_PAGE_TRACE')) { echo $this->showTrace(); } } private function showTrace() { $log = Log::$log; $files = get_included_files(); $trace = array( '请求信息'=> date('Y-m-d H:i:s',$_SERVER['REQUEST_TIME']).' '.$_SERVER['SERVER_PROTOCOL'].' '.$_SERVER['REQUEST_METHOD'].' : '.__SELF__, '运行信息'=> $this->showTime(), '会话信息' => 'SESSION_ID:'.session_id(), '日志信息'=> count($log)?count($log).'条日志<br/>'.implode('<br/>',$log):'无日志记录', ); $traceFile = CONF_PATH.'trace.php'; if(is_file($traceFile)) { $trace = array_merge(include $traceFile,$trace); } trace($trace); ob_start(); include C('TMPL_TRACE_FILE')?C('TMPL_TRACE_FILE'):THINK_PATH.'Tpl/Public/page_trace.tpl'; return ob_get_clean(); } private function showTime() { G('beginTime',$GLOBALS['_beginTime']); G('viewEndTime'); $showTime = 'Process: '.G('beginTime','viewEndTime').'s '; $showTime .= '( Load:'.G('beginTime','loadTime').'s Init:'.G('loadTime','initTime').'s Exec:'.G('initTime','viewStartTime').'s Template:'.G('viewStartTime','viewEndTime').'s )'; if(class_exists('Db',false) ) { $showTime .= ' | DB :'.N('db_query').' queries '.N('db_write').' writes '; } if( class_exists('Cache',false)) { $showTime .= ' | Cache :'.N('cache_read').' gets '.N('cache_write').' writes '; } if(MEMORY_LIMIT_ON ) { $showTime .= ' | UseMem:'. number_format((memory_get_usage() - $GLOBALS['_startUseMems'])/1024).' kb'; } $showTime .= ' | LoadFile:'.count(get_included_files()); $fun = get_defined_functions(); $showTime .= ' | CallFun:'.count($fun['user']).','.count($fun['internal']); return $showTime; } }alias_import(array ( 'Model' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/Model.class.php', 'Db' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/Db.class.php', 'Log' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/Log.class.php', 'ThinkTemplate' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Template/ThinkTemplate.class.php', 'TagLib' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Template/TagLib.class.php', 'Cache' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/Cache.class.php', 'Widget' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/Widget.class.php', 'TagLibCx' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Driver/TagLib/TagLibCx.class.php', 'RelationModel' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/RelationModel.class.php', 'ViewModel' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/ViewModel.class.php', 'AdvModel' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Lib/Core/AdvModel.class.php', )); function halt($error) { $e = array(); if (APP_DEBUG) { if (!is_array($error)) { $trace = debug_backtrace(); $e['message'] = $error; $e['file'] = $trace[0]['file']; $e['class'] = $trace[0]['class']; $e['function'] = $trace[0]['function']; $e['line'] = $trace[0]['line']; $traceInfo = ''; $time = date('y-m-d H:i:m'); foreach ($trace as $t) { $traceInfo .= '[' . $time . '] ' . $t['file'] . ' (' . $t['line'] . ') '; $traceInfo .= $t['class'] . $t['type'] . $t['function'] . '('; $traceInfo .= implode(', ', $t['args']); $traceInfo .=')<br/>'; } $e['trace'] = $traceInfo; } else { $e = $error; } include C('TMPL_EXCEPTION_FILE'); } else { $error_page = C('ERROR_PAGE'); if (!empty($error_page)) { redirect($error_page); } else { if (C('SHOW_ERROR_MSG')) $e['message'] = is_array($error) ? $error['message'] : $error; else $e['message'] = C('ERROR_MESSAGE'); include C('TMPL_EXCEPTION_FILE'); } } exit; } function throw_exception($msg, $type='ThinkException', $code=0) { if (class_exists($type, false)){ throw new $type($msg, $code, true); }else{ halt($msg); } } function throw_json($msg, $code=0) { throw_exception($msg,'JsonException',$code); } function dump($var, $echo=true, $label=null, $strict=true) { $label = ($label === null) ? '' : rtrim($label) . ' '; if (!$strict) { if (ini_get('html_errors')) { $output = print_r($var, true); $output = '<pre>' . $label . htmlspecialchars($output, ENT_QUOTES) . '</pre>'; } else { $output = $label . print_r($var, true); } } else { ob_start(); var_dump($var); $output = ob_get_clean(); if (!extension_loaded('xdebug')) { $output = preg_replace("/\]\=\>\n(\s+)/m", '] => ', $output); $output = '<pre>' . $label . htmlspecialchars($output, ENT_QUOTES) . '</pre>'; } } if ($echo) { echo($output); return null; }else return $output; } function _404($msg='',$url='') { APP_DEBUG && throw_exception($msg); if($msg && C('LOG_EXCEPTION_RECORD')) Log::write($msg); if(empty($url) && C('URL_404_REDIRECT')) { $url = C('URL_404_REDIRECT'); } if($url) { redirect($url); }else{ send_http_status(404); exit; } } function debug_start($label='') { $GLOBALS[$label]['_beginTime'] = microtime(TRUE); if (MEMORY_LIMIT_ON) $GLOBALS[$label]['_beginMem'] = memory_get_usage(); } function debug_end($label='') { $GLOBALS[$label]['_endTime'] = microtime(TRUE); echo '<div style="text-align:center;width:100%">Process ' . $label . ': Times ' . number_format($GLOBALS[$label]['_endTime'] - $GLOBALS[$label]['_beginTime'], 6) . 's '; if (MEMORY_LIMIT_ON) { $GLOBALS[$label]['_endMem'] = memory_get_usage(); echo ' Memories ' . number_format(($GLOBALS[$label]['_endMem'] - $GLOBALS[$label]['_beginMem']) / 1024) . ' k'; } echo '</div>'; } function trace($title='',$value='') { if(!C('SHOW_PAGE_TRACE')) return; static $_trace = array(); if(is_array($title)) { $_trace = array_merge($_trace,$title); }elseif('' !== $value){ $_trace[$title] = $value; }elseif('' !== $title){ return $_trace[$title]; }else{ return $_trace; } } function layout($layout) { if(false !== $layout) { C('LAYOUT_ON',true); if(is_string($layout)) { C('LAYOUT_NAME',$layout); } }else{ C('LAYOUT_ON',false); } } function U($url='',$vars='',$suffix=true,$redirect=false,$domain=false, $root = false) { if(empty($url)) return ; $info = parse_url($url); $url = !empty($info['path'])?$info['path']:ACTION_NAME; if(false !== strpos($url,'@')) { list($url,$host) = explode('@',$info['path'], 2); } if(isset($host)) { $domain = $host.(strpos($host,'.')?'':strstr($_SERVER['HTTP_HOST'],'.')); }elseif($domain===true){ $domain = $_SERVER['HTTP_HOST']; if(C('APP_SUB_DOMAIN_DEPLOY') ) { $domain = $domain=='localhost'?'localhost':'www'.strstr($_SERVER['HTTP_HOST'],'.'); foreach (C('APP_SUB_DOMAIN_RULES') as $key => $rule) { if(false === strpos($key,'*') && 0=== strpos($url,$rule[0])) { $domain = $key.strstr($domain,'.'); $url = substr_replace($url,'',0,strlen($rule[0])); break; } } } } if(is_string($vars)) { parse_str($vars,$vars); }elseif(!is_array($vars)){ $vars = array(); } if(isset($info['query'])) { parse_str($info['query'],$params); $vars = array_merge($params,$vars); } $depr = C('URL_PATHINFO_DEPR'); if($url) { if(0=== strpos($url,'/')) { $route = true; $url = substr($url,1); if('/' != $depr) { $url = str_replace('/',$depr,$url); } }else{ if('/' != $depr) { $url = str_replace('/',$depr,$url); } $url = trim($url,$depr); $path = explode($depr,$url); $var = array(); $var[C('VAR_ACTION')] = !empty($path)?array_pop($path):ACTION_NAME; $var[C('VAR_MODULE')] = !empty($path)?array_pop($path):MODULE_NAME; if(C('URL_CASE_INSENSITIVE')) { $var[C('VAR_MODULE')] = parse_name($var[C('VAR_MODULE')]); } if(!C('APP_SUB_DOMAIN_DEPLOY') && C('APP_GROUP_LIST')) { if(!empty($path)) { $group = array_pop($path); $var[C('VAR_GROUP')] = $group; }else{ if(GROUP_NAME != C('DEFAULT_GROUP')) { $var[C('VAR_GROUP')] = GROUP_NAME; } } if(C('URL_CASE_INSENSITIVE') && isset($var[C('VAR_GROUP')])) { $var[C('VAR_GROUP')] = strtolower($var[C('VAR_GROUP')]); } } } } $_app_url = $root === true ? __APP_ROOT__ : __APP__; if(C('URL_MODEL') == 0) { $url = $_app_url.'?'.http_build_query(array_reverse($var)); if(!empty($vars)) { $vars = http_build_query($vars); $url .= '&'.$vars; } }else{ if(isset($route)) { $url = $_app_url.'/'.rtrim($url,$depr); }else{ $url = $_app_url.'/'.implode($depr,array_reverse($var)); } if(!empty($vars)) { $vars = http_build_query($vars); $url .= $depr.str_replace(array('=','&'),$depr,$vars); } if($suffix) { $suffix = $suffix===true?C('URL_HTML_SUFFIX'):$suffix; if(0 < strpos($suffix, '|')){ $suffix = strstr($suffix, '|', true); } if($suffix && $url[1]){ $url .= '.'.ltrim($suffix,'.'); } } } if($domain) { $url = (is_ssl()?'https://':'http://').$domain.$url; } $url = str_replace('//', '/', $url); if($redirect) redirect($url); else return $url; } function passport_encrypt($txt, $key) { srand((double)microtime() * 1000000); $encrypt_key = md5(rand(0, 32000)); $ctr = 0; $tmp = ''; for($i = 0;$i < strlen($txt); $i++) { $ctr = $ctr == strlen($encrypt_key) ? 0 : $ctr; $tmp .= $encrypt_key[$ctr].($txt[$i] ^ $encrypt_key[$ctr++]); } return base64_encode(passport_key($tmp, $key)); } function passport_decrypt($txt, $key) { $txt = passport_key(base64_decode($txt), $key); $tmp = ''; for($i = 0;$i < strlen($txt); $i++) { $md5 = $txt[$i]; $tmp .= $txt[++$i] ^ $md5; } return $tmp; } function passport_key($txt, $encrypt_key) { $encrypt_key = md5($encrypt_key); $ctr = 0; $tmp = ''; for($i = 0; $i < strlen($txt); $i++) { $ctr = $ctr == strlen($encrypt_key) ? 0 : $ctr; $tmp .= $txt[$i] ^ $encrypt_key[$ctr++]; } return $tmp; } function is_ssl() { if(isset($_SERVER['HTTPS']) && ('1' == $_SERVER['HTTPS'] || 'on' == strtolower($_SERVER['HTTPS']))){ return true; }elseif(isset($_SERVER['SERVER_PORT']) && ('443' == $_SERVER['SERVER_PORT'] )) { return true; } return false; } function redirect($url, $time=0, $msg='') { $url = str_replace(array("\n", "\r"), '', $url); if (empty($msg)) $msg = "系统将在{$time}秒之后自动跳转到{$url}！"; if (!headers_sent()) { header('Content-Type:text/html; charset=utf-8'); if (0 === $time) { header('Location: ' . $url); } else { header("refresh:{$time};url={$url}"); echo($msg); } exit(); } else { $str = "<meta http-equiv='Refresh' content='{$time};URL={$url}'>"; if ($time != 0) $str .= $msg; exit($str); } } function cache($name,$value='',$expire=0) { static $cache = ''; if(empty($cache)) { $cache = Cache::getInstance(); } if(is_array($name)) { $type = isset($name['type'])?$name['type']:C('DATA_CACHE_TYPE'); unset($name['type']); $cache = Cache::getInstance($type,$name); return $cache; }elseif(''=== $value){ return $cache->get($name); }elseif(is_null($value)) { return $cache->rm($name); }else { return $cache->set($name, $value, $expire); } } function S($name, $value='', $expire=null, $type='',$options=null) { static $_cache = array(); $dd_id = intval(C('CFG_NOT_CACHE_DD_NAME.'.$name)); $name = APP_NAME.'_'.C('USER_AUTH_KEY').'_'.$name; if ($dd_id <= 0) { $cache = Cache::getInstance($type,$options); if ('' !== $value) { if (is_null($value)) { $result = $cache->rm($name); if ($result) unset($_cache[$type . '_' . $name]); return $result; }else { $cache->set($name, $value, $expire); $_cache[$type . '_' . $name] = $value; } return; } } if (isset($_cache[$type . '_' . $name])) return $_cache[$type . '_' . $name]; if ($dd_id > 0) { $dd = M('dd')->find($dd_id); $dd_key = $dd['dd_key']; $result = M($dd['dd_table'])->field($dd_key . ', ' . $dd['dd_value'])->select(); foreach ($result as $row) { $key = $row[$dd_key]; unset($row[$dd_key]); $value[$key] = $row; } } else { $value = $cache->get($name); } $_cache[$type . '_' . $name] = $value; return $value; } function SOnly($name,$id,$field=null){ $dd_split = $name != 'Dd_split' ? SOnly('Dd_split', $name) : 0; if ($dd_split > 0) { $name .= '_' . intval(($id-1) / C('DD_SPLIT_LIMIT')); } $info = S($name); $array = $info[$id]; if (empty($field)){ return $array; }else{ return $array[$field]; } } function F($name, $value='', $path=DATA_PATH) { static $_cache = array(); $filename = $path . $name . '.php'; if ('' !== $value) { if (is_null($value)) { return unlink($filename); } else { $dir = dirname($filename); if (!is_dir($dir)) mkdir($dir); $_cache[$name] = $value; return file_put_contents($filename, strip_whitespace("<?php\nreturn " . var_export($value, true) . ";\n?>")); } } if (isset($_cache[$name])) return $_cache[$name]; if (is_file($filename)) { $value = include $filename; $_cache[$name] = $value; } else { $value = false; } return $value; } function get_instance_of($name, $method='', $args=array()) { static $_instance = array(); $identify = empty($args) ? $name . $method : $name . $method . to_guid_string($args); if (!isset($_instance[$identify])) { if (class_exists($name)) { $o = new $name(); if (method_exists($o, $method)) { if (!empty($args)) { $_instance[$identify] = call_user_func_array(array(&$o, $method), $args); } else { $_instance[$identify] = $o->$method(); } } else $_instance[$identify] = $o; } else halt(L('_CLASS_NOT_EXIST_') . ':' . $name); } return $_instance[$identify]; } function to_guid_string($mix) { if (is_object($mix) && function_exists('spl_object_hash')) { return spl_object_hash($mix); } elseif (is_resource($mix)) { $mix = get_resource_type($mix) . strval($mix); } else { $mix = serialize($mix); } return md5($mix); } function xml_encode($data, $encoding='utf-8', $root='think') { $xml = '<?xml version="1.0" encoding="' . $encoding . '"?>'; $xml.= '<' . $root . '>'; $xml.= data_to_xml($data); $xml.= '</' . $root . '>'; return $xml; } function data_to_xml($data) { $xml = ''; foreach ($data as $key => $val) { is_numeric($key) && $key = "item id=\"$key\""; $xml.="<$key>"; $xml.= ( is_array($val) || is_object($val)) ? data_to_xml($val) : $val; list($key, ) = explode(' ', $key); $xml.="</$key>"; } return $xml; } function session($name,$value='') { $prefix = C('SESSION_PREFIX'); if(is_array($name)) { if(isset($name['prefix'])) C('SESSION_PREFIX',$name['prefix']); if(isset($_REQUEST[C('VAR_SESSION_ID')])){ session_id($_REQUEST[C('VAR_SESSION_ID')]); }elseif(isset($name['id'])) { session_id($name['id']); } ini_set('session.auto_start', 0); if(isset($name['name'])) session_name($name['name']); if(isset($name['path'])) session_save_path($name['path']); if(isset($name['domain'])) ini_set('session.cookie_domain', $name['domain']); if(isset($name['expire'])) ini_set('session.gc_maxlifetime', $name['expire']); if(isset($name['use_trans_sid'])) ini_set('session.use_trans_sid', $name['use_trans_sid']?1:0); if(isset($name['use_cookies'])) ini_set('session.use_cookies', $name['use_cookies']?1:0); if(isset($name['type'])) C('SESSION_TYPE',$name['type']); if(C('SESSION_TYPE')) { $class = 'Session'. ucwords(strtolower(C('SESSION_TYPE'))); if(require_cache(EXTEND_PATH.'Driver/Session/'.$class.'.class.php')) { $hander = new $class(); $hander->execute(); }else { throw_exception(L('_CLASS_NOT_EXIST_').': ' . $class); } } if(C('SESSION_AUTO_START')) session_start(); }elseif('' === $value){ if(0===strpos($name,'[')) { if('[pause]'==$name){ session_write_close(); }elseif('[start]'==$name){ session_start(); }elseif('[destroy]'==$name){ $_SESSION = array(); session_unset(); session_destroy(); }elseif('[regenerate]'==$name){ session_regenerate_id(); } }elseif(0===strpos($name,'?')){ $name = substr($name,1); if($prefix) { return isset($_SESSION[$prefix][$name]); }else{ return isset($_SESSION[$name]); } }elseif(is_null($name)){ if($prefix) { unset($_SESSION[$prefix]); }else{ $_SESSION = array(); } }elseif($prefix){ return $_SESSION[$prefix][$name]; }else{ return $_SESSION[$name]; } }elseif(is_null($value)){ if($prefix){ unset($_SESSION[$prefix][$name]); }else{ unset($_SESSION[$name]); } }else{ if($prefix){ if (!is_array($_SESSION[$prefix])) { $_SESSION[$prefix] = array(); } $_SESSION[$prefix][$name] = $value; }else{ $_SESSION[$name] = $value; } } } function cookie($name, $value='', $option=null) { $config = array( 'prefix' => C('COOKIE_PREFIX'), 'expire' => C('COOKIE_EXPIRE'), 'path' => C('COOKIE_PATH'), 'domain' => C('COOKIE_DOMAIN'), ); if (!empty($option)) { if (is_numeric($option)) $option = array('expire' => $option); elseif (is_string($option)) parse_str($option, $option); $config = array_merge($config, array_change_key_case($option)); } if (is_null($name)) { if (empty($_COOKIE)) return; $prefix = empty($value) ? $config['prefix'] : $value; if (!empty($prefix)) { foreach ($_COOKIE as $key => $val) { if (0 === stripos($key, $prefix)) { setcookie($key, '', time() - 3600, $config['path'], $config['domain']); unset($_COOKIE[$key]); } } } return; } $name = $config['prefix'] . $name; if ('' === $value) { return isset($_COOKIE[$name]) ? $_COOKIE[$name] : null; } else { if (is_null($value)) { setcookie($name, '', time() - 3600, $config['path'], $config['domain']); unset($_COOKIE[$name]); } else { $expire = !empty($config['expire']) ? time() + intval($config['expire']) : 0; setcookie($name, $value, $expire, $config['path'], $config['domain']); $_COOKIE[$name] = $value; } } } function load_ext_file() { if(C('LOAD_EXT_FILE')) { $files = explode(',',C('LOAD_EXT_FILE')); foreach ($files as $file){ $file = COMMON_PATH.$file.'.php'; if(is_file($file)) include $file; } } if(C('LOAD_EXT_CONFIG')) { $configs = C('LOAD_EXT_CONFIG'); if(is_string($configs)) $configs = explode(',',$configs); foreach ($configs as $key=>$config){ $file = CONF_PATH.$config.'.php'; if(is_file($file)) { is_numeric($key)?C(include $file):C($key,include $file); } } } } function get_client_ip() { static $ip = NULL; if ($ip !== NULL) return $ip; if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) { $arr = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']); $pos = array_search('unknown',$arr); if(false !== $pos) unset($arr[$pos]); $ip = trim($arr[0]); }elseif (isset($_SERVER['HTTP_CLIENT_IP'])) { $ip = $_SERVER['HTTP_CLIENT_IP']; }elseif (isset($_SERVER['REMOTE_ADDR'])) { $ip = $_SERVER['REMOTE_ADDR']; } $ip = (false !== ip2long($ip)) ? $ip : '0.0.0.0'; return $ip; } function send_http_status($code) { static $_status = array( 200 => 'OK', 301 => 'Moved Permanently', 302 => 'Moved Temporarily ', 400 => 'Bad Request', 403 => 'Forbidden', 404 => 'Not Found', 500 => 'Internal Server Error', 503 => 'Service Unavailable', ); if(isset($_status[$code])) { header('HTTP/1.1 '.$code.' '.$_status[$code]); header('Status:'.$code.' '.$_status[$code]); } } function getUser($field=null,$value=null){ if ($field==null) { return $_SESSION['LOGIN_USER']; } if (!empty($value)) { $_SESSION['LOGIN_USER'][strtolower($field)] = $value; return ; } return $_SESSION['LOGIN_USER'][strtolower($field)]; } function ucwords_first($str){ if(empty($str)) return ; $f = strtolower($str{0}); return $f.substr($str,1); } function title($action,$module=null){ $s_name = 'menu_title'; if (is_numeric($action)) { $s_key = 'parenttitle_'.$action; }elseif (empty($module)){ $s_key = MODULE_NAME.$action; }else { $s_key = $module.$action; } if ($mem_info = SOnly($s_name, $s_key)) { $module = $mem_info['module']; $action = $mem_info['action']; }else { if (is_numeric($action)) { $rs = M('Node')->find($action); if (empty($rs['module'])) { $module = $rs['id']; $action = null; }elseif ($rs['level']==3) { $rs2 = M('Node')->find($rs['parent_id']); $module = $rs2['module']; $action = $rs['module']; }else { $module = $rs['module']; $action = 'index'; } }else { if (empty($module)) {$module = MODULE_NAME;} } $s_value = S($s_name); $mem_info = array('module'=>$module,'action'=>$action); $s_value[$s_key] = $mem_info; S($s_name, $s_value); } $title = ''; $action_ary = C('ACTION_TITLE_ARY'); $fac_action_ary = C('FAC_ACTION_TITLE_ARY'); if (getUser('role_type') == C('SELLER_ROLE_TYPE') && !empty($fac_action_ary)) { $action_ary = array_merge_deep($action_ary, $fac_action_ary); } if (is_null($action) && isset($action_ary['module_'.$module])) { $title = $action_ary['module_'.$module]; }elseif (isset($action_ary[$module][$action])) { $title = $action_ary[$module][$action]; } else { switch ($action) { case 'insert': case 'add': $title = L('insert').L('module_'.$module); break; case 'edit': case 'update': $title = L('update').L('module_'.$module); break; case 'view': $title = L('view').L('module_'.$module); break; case null: $title = L('module_'.$module); break; case isset($action_ary[$action]): $title = $action_ary[$action]; break; default: $title = L('module_'.$module); if(!in_array($module,C('MODULE_NO_INDEX'))){ $title .= L($action); } break; } } return $title; } function parentsTitle($module){ if (S('parentstitle_'.$module)) { $parents_id = S('parentstitle_'.$module); }else { $rs = M('Node')->getByModule($module); $rs = M('Node')->where('id='.$rs['parent_id'])->find(); if ($rs['parent_id']) { $rs = M('Node')->find($rs['parent_id']); } S('parentstitle_'.$module,$rs['id']); $parents_id = $rs['id']; } return L( 'node_'.$parents_id); } function getModuleSpec($module){ $spec = C($module); $attr = array('product_id'); if ($spec['storage_format']>=2) { $attr[] = 'capability'; } if ($spec['storage_format']>=3) { $attr[] = 'dozen'; } if ($spec['color']==1) { $attr[] = 'color_id'; } if ($spec['size']==1) { $attr[] = 'size_id'; } if ($spec['mantissa']==1) { $attr[] = 'mantissa'; } return $attr; } function startTrans(){ M()->startTrans(); } function commit(){ M()->commit(); } function rollback(){ M()->rollback(); } function moneyFormat($money,$flag=0,$length=2,$partition=true){ if (empty($length) || $length<=0 || is_array($length)){ $length = 0; } switch ($flag){ case 0: if ($partition){ $money = number_format($money, $length); }else{ $money = number_format($money,$length,'.', ''); } break; case 1: $money = str_replace(',','.',$money); break; case 2: if (strpos($money,'.')){ $money = str_replace('.',',',$money); } break; } return $money; } function list_sort_by($list, $field, $sortby='asc') { if(is_array($list)){ $refer = $resultSet = array(); foreach ($list as $i => $data) $refer[$i] = &$data[$field]; switch ($sortby) { case 'asc': asort($refer); break; case 'desc': arsort($refer); break; case 'nat': natcasesort($refer); break; } foreach ( $refer as $key=> $val) $resultSet[] = &$list[$key]; return $resultSet; } return false; } function specConvertStr ($str,$separator = '<br>') { if (!C('DB_CHARSET')) {C('DB_CHARSET','utf8');} $str = htmlspecialchars($str,ENT_COMPAT,C('DB_CHARSET')); $str =str_replace("\n",$separator,$str); return $str; } function specDeConvertStr ($str) { if (!C('DB_CHARSET')) {C('DB_CHARSET','utf8');} $str = str_replace("<br>",'',$str); $str = html_entity_decode($str,ENT_COMPAT,C('DB_CHARSET')); return $str; } function _formatArray($info,$options=null){ if (empty($info)) { return $info; } $list[0] = $info; $new_list = _formatList($list,$options,0); return $new_list['list'][0]; } function _formatListRelation($info,$detailKey=array('detail'),$options=null, $sum_flag = 1){ $list = _formatArray($info); if (is_array($detailKey)){ foreach ((array)$detailKey as $key=>$value) { if (is_string($key)){} $detailList = _formatList($list[$value],$options,$sum_flag,'id'); $list[$value] = $detailList['list']; $list[$value.'_total'] = $detailList['total']; } } return $list; } function _formatListRelationForInvoice($info,$detailKey=array('detail'),$options=null){ $list = _formatListRelation($info,$detailKey,$options); if(C('invoice.factory_from')==2){ unset($list['factory_name']); unset($list['factory_iva']); $list = _formatDdForInvoice('factory_id',$list,S('invoice_factory')); } if(C('invoice.client_from')==2){ unset($list['client_name']); unset($list['client_iva']); $list = _formatDdForInvoice('client_id',$list,S('invoice_client')); } if(C('invoice.company_from')==2){ unset($list['basic_name']); $list = _formatDdForInvoice('basic_id',$list,S('invoice_basic')); } $iva = $list['iva']/100; foreach($detailKey as $_val){ $dd = S('invoice_product'); if(!is_array($list[$_val])){ continue; } foreach($list[$_val] as &$val){ if(C('invoice.product_from')==2){ unset($val['product_no']); unset($val['product_name']); $val = _formatDdForInvoice('product_id',$val,$dd); } $total_money += $val['quantity']*$val['price']*(1-$val['discount']*0.01); } $list[$_val.'_total']['iva_cost'] = $iva*$total_money; $list[$_val.'_total']['total_cost']= round($total_money,2)+round($iva*$total_money,2); $format_money = array('iva_cost','total_cost'); $dml_money_leng = array('iva_cost'=>'money_length','total_cost'=>'money_length'); _format_money($format_money,$list[$_val.'_total'],$dml_money_leng); } return $list; } function _formatListForInvoice($info,$options=null,$sum_flag=1,$groupByKey=null,$expand=array()){ $info = _formatList($info,$options,$sum_flag,$groupByKey,$expand); $cache_factory = S('invoice_factory'); $cache_client = S('invoice_client'); $cache_basic = S('invoice_basic'); $cache_product = S('invoice_product'); foreach($info['list'] as &$val){ if(C('invoice.product_from')==2&&isset($val['product_id'])){ unset($val['product_no']); unset($val['product_name']); $val = _formatDdForInvoice('product_id',$val,$cache_product); } if(C('invoice.factory_from')==2&&isset($val['factory_id'])){ unset($val['factory_name']); unset($val['factory_iva']); $val = _formatDdForInvoice('factory_id',$val,$cache_factory); } if(C('invoice.client_from')==2&&isset($val['client_id'])){ unset($val['client_name']); unset($val['client_iva']); $val = _formatDdForInvoice('client_id',$val,$cache_client); } if(C('invoice.company_from')==2&&isset($val['basic_id'])){ unset($val['basic_name']); $val = _formatDdForInvoice('basic_id',$val,$cache_basic); } } return $info; } function _formatDdForInvoice($dd_id,$list,$cache=array()){ $info = $cache[$list[$dd_id]]; foreach($info as $key=>$val){ $list[$key] = $val; } return $list; } function _formatList($info,$optionsKey=null,$sum_flag=1,$groupByKey=null,$expand=array(),$return_type='list'){ G('ddFmtTime'); if (empty($info)) { return $info;} $expand['sum_group_by'] = isset($expand['sum_group_by'])?$expand['sum_group_by']:array('currency_id'); if(!empty($info)) { $firstInfoArray = reset($info); if ($optionsKey){ $_formatListCache = S('_formatList'); if (empty($_formatListCache[$optionsKey])){ $firstInfo = _format_first($firstInfoArray,$sum_flag); $info_cache_temp = $firstInfo['info_cache']; unset($firstInfo['info_cache']); $_formatListCache[$optionsKey] = $firstInfo; $firstInfo['info_cache'] = $info_cache_temp; S('_formatList',$_formatListCache); }else{ $firstInfo = $_formatListCache[$optionsKey]; _format_first_cache($firstInfo); } }else { $firstInfo = _format_first($firstInfoArray,$sum_flag); } extract($firstInfo); if ($sum_flag){ $formatKey['count_product']=1; } $total_product = 0; $total_product_temp = array(); if (is_array($groupByKey)) { $groupByKey = array_shift($groupByKey); $isMultiRecord = true; } else { $isMultiRecord = false; } foreach ($info as $key => $value) { foreach ((array)$formatKey as $forKey => $forVal) { switch ($forKey){ case 'count_product': if ($value['product_id']>0){ _format_count_product($value,$total_product_temp,$total_product); } break; case 'date': _format_date($info_date,$value,$dateModel); break; case 'money': _format_money($info_money,$value,$info_money_dml_leng); break; case 'dd': _format_dd($value,$info_dd,$define_dd,$dd_split,$info_cache); break; case 'const': _format_const($info_const,$value,$info_cache,$info_const_relation); break; case 'sum': _format_sum($value,$sum,$info_sum,$expand['sum_group_by']); break; case 'html': _format_html($info_html,$value); break; } } if (isset($value[$groupByKey])){ if ($isMultiRecord === true) { $rs['list'][$value[$groupByKey]][] = $value; } else { $rs['list'][$value[$groupByKey]] = $value; } }elseif($return_type=='list'){ $rs['list'][] = $value; }else{ $rs[$key] = $value; } } } if ($sum_flag && is_array($sum)) { _format_total($info_sum,$sum,$rs,$total_product,$info_money_dml_leng,$expand['sum_group_by']); } G('endDdFmtTime'); unset($info,$info_cache,$sum); return $rs; } function _addFlowLink($list,$Lkey='list'){ if (!is_array($list)){ return $list; } $linkModel = D('AbsStat'); foreach ($list[$Lkey] as $key=> &$row) { $linkModel->objectTypeCommentSubsidiary($row); } return $list; } function _format_first_cache(&$firstInfo){ unset($firstInfo['info_cache']); foreach ((array)$firstInfo['info_dd'] as $key => $value) { $dd_name = $firstInfo['define_dd'][$value]; $firstInfo['info_cache'][$dd_name] = S($dd_name); } foreach ((array)$firstInfo['info_const_relation'] as $key => $value) { $firstInfo['info_cache'][$key] = C($value); } } function _format_first(&$value,&$sum_flag){ $format = array('dd', 'html', 'date', 'money', 'const'); if ($sum_flag) { $format[] = 'sum'; } foreach ($format as $format_key) { $format_option = 'define_' . $format_key; $$format_option = S('dd_config_format_' . $format_key); } $formatKey = array(); $dml = array( 1=>'money_length', 2=>'price_length', 3=>'int_length', 4=>'int',5=>'cube_length' ); $dd_split_quantity = 0; $dd_splits = S('Dd_split'); $dd_split = array_keys($dd_splits); foreach ($value as $key => $value_list) { if(in_array($key,$define_date)) { $info_date_count++; if ($info_date_count<2) { import("ORG.Util.Date"); $dateModel = new Date(); $reInfo['dateModel'] = $dateModel; } $formatKey['date']=1; $reInfo['info_date'][] = $key; $reInfo['info_date_count'] = $info_date_count; continue; } if(in_array($key,array_keys($define_dd))) { $Dd = S('Dd_split'); if(!isset($Dd[$define_dd[$key]])){ $info_cache[$define_dd[$key]] = S($define_dd[$key]); } $reInfo['info_dd'][] = $key; $formatKey['dd']=1; continue; } if(in_array($key,array_keys($define_const))) { $info_const[] = $key; $info_cache[$key] = C(($define_const[$key])); $reInfo['info_const'][] = $key; $reInfo['info_const_relation'][$key] = $define_const[$key]; $formatKey['const']=1; continue; } if(in_array($key,array_keys($define_money))) { $reInfo['info_money'][] = $key; $reInfo['info_money_dml_leng'][$key] = $dml[$define_money[$key]]; $formatKey['money']=1; } if($sum_flag && in_array($key,array_keys($define_sum))) { $formatKey['sum']=1; $reInfo['info_sum'][] = $key; $reInfo['info_sum_dml'][] = $dml[$define_sum[$key]]; continue; } if(in_array($key,$define_html)) { $reInfo['info_html'][] = $key; $formatKey['html']=1; continue; } } if (is_array($info_cache)){ $reInfo['info_cache'] = $info_cache;} $reInfo['dml'] = $dml; $reInfo['formatKey'] = $formatKey; $reInfo['define_dd'] = $define_dd; $reInfo['dd_split_quantity'] = $dd_split_quantity; $reInfo['dd_splits'] = $dd_splits; $reInfo['dd_split'] = $dd_split; return $reInfo; } function _format_money(&$info_money,&$value,&$info_money_dml_leng){ foreach ($info_money as $info_money_key=>$value_money) { $value['dml_'.$value_money] = moneyFormat($value[$value_money],0,C($info_money_dml_leng[$value_money])); $value['edml_'.$value_money] = moneyFormat($value[$value_money],0,C($info_money_dml_leng[$value_money]),false); } } function _format_html(&$info_html,&$value){ foreach ($info_html as $value_html) { $value['edit_'.$value_html] = ($value[$value_html]); $value[$value_html] = specConvertStr($value[$value_html]); } } function _format_const(&$info_const,&$value,&$info_cache,&$info_const_relation){ if(!empty($info_const)) { foreach ($info_const as $value_dd) { $dd_array =&$info_cache[$value_dd][$value[$value_dd]]; if (!empty($dd_array)){ $value['dd_'.$value_dd] = $dd_array; } } } } function _format_count_product(&$value,&$total_product_temp,&$total_product){ if ($value['product_id']>0 && !isset($total_product_temp[$value['product_id']])){ $total_product_temp[$value['product_id']] = true; $total_product +=1; } } function _format_date(&$info_date,&$value,&$dateModel){ foreach ($info_date as $value_date) { if (empty($value[$value_date])) {continue;} $value['fmd_'.$value_date] = $dateModel->getFormat($value[$value_date]); } } function _format_dd(&$value,&$info_dd,&$define_dd,&$dd_split,&$info_cache){ foreach ($info_dd as $value_dd) { if (in_array($define_dd[$value_dd],$dd_split) && $value[$value_dd]>0) { $split_no = intval(($value[$value_dd]-1)/C('DD_SPLIT_LIMIT')); $split_name = $define_dd[$value_dd].'_'.$split_no; if (empty($info_cache[$split_name])) { $info_cache[$split_name] = S($split_name); } $dd_array =&$info_cache[$split_name]; }else{ $dd_array =&$info_cache[$define_dd[$value_dd]]; } if (is_array($dd_array[$value[$value_dd]])){ $value = array_merge($value,$dd_array[$value[$value_dd]]) ; } } } function _format_total(&$info_sum,&$sum,&$rs,&$total_product,$info_money_dml_leng,$groupBy){ foreach ((array)$info_sum as $key=>$row) { $sum[$row] = $sum[$row]; $sum['dml_'.$row] = moneyFormat($sum[$row],0,C($info_money_dml_leng[$row])); } foreach ((array)$groupBy as $groupByValues) { !is_array($groupByValues) && $groupByValues = explode(',', $groupByValues); $row = implode('_', $groupByValues); $sum_key = $row.'_sum'; getDmlResult($sum, $sum[$sum_key], $groupByValues, $info_money_dml_leng, array('dml', $row)); } $sum['total_product'] = $total_product; $rs['total'] = $sum; } function getDmlResult(&$sum, $cur_sum, $groupByValues,$info_money_dml_leng, $key_arr=array()){ if (!empty($groupByValues)) { $groupByValue = array_shift($groupByValues); foreach ($cur_sum as $sumk=>$sumv) { $key_arr[] = $groupByValue == 'currency_id' ? strtolower(SOnly('currency', $sumk, 'currency_no')) : $sumk; getDmlResult($sum, $sumv, $groupByValues,$info_money_dml_leng, $key_arr); array_pop($key_arr); } } else { foreach ($cur_sum as $sumk=>$sumr) { $sum[implode('_', $key_arr).'_'.$sumk] = moneyFormat($sumr,0,C($info_money_dml_leng[$sumk])); } } } function _format_sum(&$value,&$sum,&$info_sum,$groupBy=array('currency_id')){ foreach ((array)$groupBy as $groupByValues) { !is_array($groupByValues) && $groupByValues = explode(',', $groupByValues); foreach ($groupByValues as $groupByValue) { $$groupByValue = isset($value[$groupByValue])?$value[$groupByValue]:1; } } foreach ((array)$info_sum as $value_sum) { $sum[$value_sum] += $value[$value_sum]; foreach ((array)$groupBy as $groupByValues) { !is_array($groupByValues) && $groupByValues = explode(',', $groupByValues); $sum_key = implode('_', $groupByValues).'_sum'; !isset($sum[$sum_key]) && $sum[$sum_key] = array(); $temp = &$sum[$sum_key]; foreach ($groupByValues as $groupByValue) { $next_key = $$groupByValue; if (!isset($temp[$next_key])) { $temp[$next_key] = array(); } $temp = &$temp[$next_key]; } $temp[$value_sum] += $value[$value_sum]; unset($temp); } } } function formatArray($data, $key = '', $value_key = '') { if (!is_array($data) || empty ($data)) { return false; } if ($value_key && strpos($value_key, ',')) { $value_key = explode(",", $value_key); } if (!strstr($key,",")) { foreach ($data as $k => $list) { $key_0 = $list[$key] ; if (!empty($value_key) && count($value_key) > 1) { foreach ($value_key as $v_key){ $new_list[$key_0][$v_key] = $list[$v_key]; } }elseif (!empty($value_key) && count($value_key)==1){ $new_list[$key_0] = $list[$value_key]; } else { $new_list[$key_0] = $list; } } } else { $key = explode(",",$key) ; foreach ($data as $k => $list) { $key_0 = $list[$key[0]]; $key_1 = $list[$key[1]]; if (!empty($value_key) && count($value_key) > 1) { foreach ($value_key as $v_key){ $new_list[$key_0][$key_1][$v_key] = $list[$v_key]; } } elseif (!empty($value_key) && count($value_key)==1){ $new_list[$key_0] = $list[$value_key]; } else { $new_list[$key_0][$key_1] = $list; } } } return $new_list; } function dml($str,$price_foramt=null){ if ($price_foramt) { $str = moneyFormat($str,0,C('PRICE_LENGTH')); }else { $str = trim($str); } if (empty($str) || floatval($str)==0 || $str=='NaN') { return ; } return $str; } function cacheDd($id,$table_id,$where=null,$time=0){ $id = intval($id); if ($id<=0 || in_array($id, C('CFG_NOT_CACHE_DD_NAME'))) { return false; } $DdList = createCacheDd(); $Dd = $DdList[$id]; if (!is_array($Dd)) { return false; } $dd_value = explode(',',$Dd['dd_value']); $count = count($dd_value); if ($count<=0) { return false; } $model = M($Dd['dd_table']); empty($where) && $where=' 1 '; !empty($Dd['dd_where']) && $where .=' and '.$Dd['dd_where']; if ($Dd['dd_split']==2) { $max_limit = C('DD_SPLIT_LIMIT'); if ($table_id>0) { $split_count = intval($table_id/$max_limit); $limit ='  and  id>'.($split_count)*$max_limit.' and id<='.(($split_count+1)*$max_limit).' '; PushCacheDd($model,$where.$limit,$Dd,$count,$dd_value,$Dd['dd_name'].'_'.$split_count,true,$limit,$time); }else{ $sun_record = $model->where($where)->max('id'); $split_count = intval($sun_record/$max_limit); for ($i = 0; $i <= $split_count; $i++) { if ($i==0) { $limit ='  and  id<='.$max_limit; }else{ $limit ='  and  id>'.($i)*$max_limit.' and id<='.(($i+1)*$max_limit).' '; } PushCacheDd($model,$where.$limit,$Dd,$count,$dd_value,$Dd['dd_name'].'_'.($i),true); } } }else{ $sun_record = $model->where($where)->count(); if ($sun_record>10000) {ini_set('memory_limit', '512M');} PushCacheDd($model,$where,$Dd,$count,$dd_value,'','','',$time); return true; } return ; } function createCacheDd(){ $dd_list = M('Dd')->select(); $dd_split = array(); foreach ((array)$dd_list as $row) { $dd[$row['id']] = $row; if ($row['dd_split']==2) { $dd_split[$row['dd_name']] = $row['id']; } } S('Dd',$dd); S('Dd_split',$dd_split); return $dd; } function PushCacheDd($model,$where,&$Dd,&$count,&$dd_value,$dd_name='',$split=false,$limit=array(),$time){ $Dd['dd_key'] = trim($Dd['dd_key']); if(strpos($Dd['dd_key'],' as ')){ $dd_key = trim(end(explode(' as ',$Dd['dd_key']))); }else{ $dd_key = $Dd['dd_key']; } $list = $model->field($Dd['dd_key'].','.$Dd['dd_value'])->where($where)->order($dd_key)->select(); foreach ((array)$list as $key=>$row) { $info = array(); $id = $row[$dd_key]; unset($row[$dd_key]); $rs[$id] = $row; unset($info); } if (is_array($rs)) { $dd_name = empty($dd_name)?$Dd['dd_name']:$dd_name; S($dd_name,$rs,$time); unset($rs); }else{ S($dd_name, null); } return ; } function pr($info,$echo='',$isexit=0){ echo $echo.'<br>'; echo '开始输出测试-------------------<pre>'; print_r($info); echo '结束输出测试-------------------<br>'; if($isexit==1){ exit; } } function parsePathinfo($pathinfo){ $var = array(); $paths = explode('/',$_POST['id']); preg_replace('@(\w+)/([^\/]+)@e', '$var[\'\\1\']="\\2";', implode('/',$paths)); return $var; } function _search($default_where=null,$default=null){ !empty($default_where) && $where = ' and '.$default_where; return getWhere($_POST,$default).$where; } function _search_array($array){ return getWhere($array); } function _getSpecialUrl($get){ foreach ($get as $key => $value) { if(substr($key,0,3) == 'sp_') { $array = explode('_',$key); if (count($array)>2){ $name = str_replace($array[0].'_'.$array[1].'_','',$key); if (strpos($name,'__')) { $name = str_replace('__','.',$name); } $info[$array[1]][$name] = $value ; } } } return $info; } function _getMergePostReturnWhere(){ $array = _getSpecialUrl($_GET); $where = _search_array($array); if (is_array($array)){ $_POST = array_merge($array,$_POST); } return $where; } function getBelongsWhere($prefix = '', $field = 'factory_id'){ if(getUser('role_type')!=C('SELLER_ROLE_TYPE')){ return ' '; } !empty($prefix) && $field = $prefix . '.' . $field; return intval($_SESSION['LOGIN_USER']['company_id'])>0?' and ' . $field . '='.$_SESSION['LOGIN_USER']['company_id']:''; } function getWarehouseWhere($prefix = '', $field = 'warehouse_id'){ if(getUser('role_type')!=C('WAREHOUSE_ROLE_TYPE')){ return ' '; } !empty($prefix) && $field = $prefix . '.' . $field; return intval($_SESSION['LOGIN_USER']['company_id'])>0?' and ' . $field . '='.$_SESSION['LOGIN_USER']['company_id']:''; } function getAllWarehouseWhere($prefix = '', $field = 'warehouse_id'){ if(getUser('role_type')!=C('WAREHOUSE_ROLE_TYPE')){ return ' '; } !empty($prefix) && $field = $prefix . '.' . $field; $warehouse_id = M('warehouse')->where('is_return_sold='.C('NO_RETURN_SOLD').' and relation_warehouse_id='.$_SESSION['LOGIN_USER']['company_id'])->getField('id',true); $warehouse_id[] = $_SESSION['LOGIN_USER']['company_id']; return intval($_SESSION['LOGIN_USER']['company_id'])>0?' and ' . $field . ' in ('.implode(',', $warehouse_id).')':''; } function getWhere($info,$default){ global $_search_form; $_POST['ac_search'] && $_search_form = true; if (is_array($default)) { $_POST = array_merge($default,$info); } $where = ' 1 '; if(count($default['query']) > 0) { foreach ($default['query'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL && empty($info['query'][$fieldName]) && !isset($info['query'][$fieldName])) { $fieldValue = trim($fieldValue); if (empty($fieldValue) && $fieldValue != '0') { continue; } $where .= ' and '.$fieldName.'="'.$fieldValue.'" '; if (strpos($fieldName,'.')) { $new_key = str_replace('.','_',$fieldName); unset($default['query'][$new_key]); $_POST['query'][$new_key] = $fieldValue; } } } } if(count($info['query']) > 0) { foreach ($info['query'] as $fieldName => &$fieldValue) { if (is_array($fieldValue)){ continue; } if ($fieldValue!=NULL && (!empty($fieldValue) || $fieldValue == '0')){ if($fieldValue=='-2') continue; $where .= ' and '.$fieldName.'="'.$fieldValue.'" '; if (strpos($fieldName,'.')) { $new_key = str_replace('.','_',$fieldName); unset($info['query'][$new_key]); $_POST['query'][$new_key] = $fieldValue; } } } } if(count($info['abs_query']) > 0) { foreach ($info['abs_query'] as $fieldName => &$fieldValue) { if (is_array($fieldValue)){ continue; } $where .= ' and '.$fieldName.'="'.$fieldValue.'" '; if (strpos($fieldName,'.')) { $new_key = str_replace('.','_',$fieldName); unset($info['abs_query'][$new_key]); $_POST['abs_query'][$new_key] = $fieldValue; } } } if(count($info['strictless']) > 0) { foreach ($info['strictless'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL) { $fieldValue = trim($fieldValue); empty($fieldValue) && $fieldValue = 0; $where .= ' and '.$fieldName.'<"'.$fieldValue.'" '; } } } if(count($info['lessthan']) > 0) { foreach ($info['lessthan'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL) { $fieldValue = trim($fieldValue); empty($fieldValue) && $fieldValue = 0; $where .= ' and '.$fieldName.'<="'.$fieldValue.'" '; } } } if(count($info['notequal']) > 0) { foreach ($info['notequal'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL) { $fieldValue = trim($fieldValue); empty($fieldValue) && $fieldValue = 0; $where .= ' and '.$fieldName.'<>"'.$fieldValue.'" '; } } } if(count($info['abs_notequal']) > 0) { foreach ($info['abs_notequal'] as $fieldName => &$fieldValue) { $fieldValue = trim($fieldValue); $where .= ' and '.$fieldName.'<>"'.$fieldValue.'" '; } } if(count($info['morethan']) > 0) { foreach ($info['morethan'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL) { $fieldValue = trim($fieldValue); empty($fieldValue) && $fieldValue = 0; $where .= ' and '.$fieldName.'>="'.$fieldValue.'" '; } } } if(count($info['greaterthan']) > 0) { foreach ($info['greaterthan'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=NULL) { $fieldValue = trim($fieldValue); empty($fieldValue) && $fieldValue = 0; $where .= ' and '.$fieldName.'>"'.$fieldValue.'" '; } } } if(count($info['in']) > 0){ foreach ($info['in'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=null) { if(is_array($fieldValue)){ $fieldValue = implode(',', $fieldValue); } $where .= ' and '.$fieldName.' in ('.$fieldValue.') '; } } } if(count($info['is_null']) > 0){ foreach ($info['is_null'] as $fieldName => &$fieldValue) { if (!empty($fieldName)) { if($fieldValue){ $where .= ' and ('.$fieldName.'="" or '.$fieldName.' is null)'; }else{ $where .= ' and '.$fieldName.'<>""'; } } } } if(count($info['like']) > 0) { foreach ($info['like'] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=null) { $where .= ' and '.$fieldName.' like "%'.$fieldValue.'%" '; if (strpos($fieldName,'.')) { $new_key = str_replace('.','_',$fieldName); unset($info['query'][$new_key]); $_POST['like'][$new_key] = $fieldValue; } } } } if ($info['date_key']>0) { for ($i = 1; $i <= $info['date_key']; $i++) { $info_key = $i>1?$i:''; $where .= _getWhereDate($info,'date'.$info_key); } }else{ $where .= _getWhereDate($info); } return $where; } function formatDate($dateTime,$formatTo='date'){ if(empty($dateTime) || $dateTime=='0000-00-00' || $dateTime=='0000-00-00 00:00:00'){ return ''; } if (strpos($dateTime,'/')){ $arr_dateTime = explode(' ', $dateTime); $date_array = split('/',$arr_dateTime[0]); $year = $date_array[2]; $month = $date_array[1]; $date = $date_array[0]; $dateTime = '20'.$year.'-'.$month.'-'.$date; $arr_dateTime[1] && $dateTime.= ' '.$arr_dateTime[1]; } switch ($formatTo){ case 'date': $returnDate = $dateTime; break; case 'vf_date': $dateTime = substr($dateTime,0,10); $returnDate = $dateTime; break; case 'mg_date': $dateTime = substr($dateTime,0,10); $returnDate = $dateTime; $date_array = split('-',$returnDate); $returnDate = substr(join('',$date_array),2,8); break; case 'outdate': import("ORG.Util.Date"); $dateModel = new Date(); $returnDate = $dateModel->getFormat($dateTime); break; } return $returnDate; } function _getWhereDate($info,$info_key='date'){ $where = ''; if(count($info[$info_key]) > 0) { foreach ($info[$info_key] as $fieldName => &$fieldValue) { if (!empty($fieldName) && $fieldValue!=null) { $fieldValue = formatDate($fieldValue,'date'); if (strpos($fieldName,'.')) { $_POST['date'][str_replace('.','_',$fieldName)] = $fieldValue; $exp_date = explode('.',$fieldName); $fieldName = $exp_date[1]; $fix_date = $exp_date[0].'.'; } if(substr($fieldName,0,9) == 'needdate_') { $fieldName = substr($fieldName,9); $needdate = 1; } else { $needdate = 0; } if(substr($fieldName,0,5) == 'from_') { $fromTo_fix_date= $fix_date; $fromTo_fileds = $needdate ? substr($fieldName,5) : substr($fieldName,5); $date_from = $fieldValue; } else if(substr($fieldName,0,3) == 'to_') { $fromTo_fix_date= $fix_date; $fromTo_fileds = $needdate ? substr($fieldName,3) : substr($fieldName,3); $date_to = $fieldValue; } else if(substr($fieldName,0,3) == 'mt_') { $fileds = $needdate ? substr($fieldName,3) : substr($fieldName,3); $where .= ' and '.$fix_date.$fileds.'>="'.$fieldValue.'" '; } else if(substr($fieldName,0,4) == 'mtt_') { $fileds = $needdate ? substr($fieldName,4) : substr($fieldName,4); $where .= ' and '.$fix_date.$fileds.'>"'.$fieldValue.'" '; } else if(substr($fieldName,0,3) == 'lt_') { $fileds = $needdate ? substr($fieldName,3) : substr($fieldName,3); $where .= ' and '.$fix_date.$fileds.'<="'.$fieldValue.' 23:59:59" '; } else if(substr($fieldName,0,4) == 'ltt_') { $fileds = $needdate ? substr($fieldName,4) : substr($fieldName,4); $where .= ' and '.$fix_date.$fileds.'<"'.$fieldValue.' 23:59:59" '; } else { $where .= ' and '.$fix_date.$fieldName.'="'.$fieldValue.'" '; } } } if($date_from || $date_to){ $fix_date = $fromTo_fix_date; $fileds = $fromTo_fileds; if($date_from && $date_to) { $where .= ' and '.$fix_date.$fileds.'>="'.$date_from.'" and '.$fix_date.$fileds.'<="'.$date_to.' 23:59:59" '; } else { $date_from ? $date = $date_from : ($date_to ? $date = $date_to : $date = '-1'); $where .= ' and '.$fix_date.$fileds.'>="'.$date.'" and '.$fix_date.$fileds.'<="'.$date.' 23:59:59" '; } } } return $where; } function getRands($length=8){ $str = 'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,'; $str .= 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,'; $str .= '0,1,2,3,4,5,6,7,8,9'; $all=explode(",",$str); $randy = ''; for($i=0;$i<$length;$i++){ $randy = rand(0,61); $randStr .= $all[$randy]; } return $randStr; } function uc_fopen($url, $limit = 0, $post = '', $cookie = '', $bysocket = FALSE, $ip = '', $timeout = 15, $block = TRUE) { $return = ''; $matches = parse_url($url); !isset($matches['host']) && $matches['host'] = ''; !isset($matches['path']) && $matches['path'] = ''; !isset($matches['query']) && $matches['query'] = ''; !isset($matches['port']) && $matches['port'] = ''; $host = $matches['host']; $path = $matches['path'] ? $matches['path'].($matches['query'] ? '?'.$matches['query'] : '') : '/'; $port = !empty($matches['port']) ? $matches['port'] : 80; if($post) { $out = "POST $path HTTP/1.0\r\n"; $out .= "Accept: */*\r\n"; $out .= "Accept-Language: zh-cn\r\n"; $out .= "Content-Type: application/x-www-form-urlencoded\r\n"; $out .= "User-Agent: $_SERVER[HTTP_USER_AGENT]\r\n"; $out .= "Host: $host\r\n"; $out .= 'Content-Length: '.strlen($post)."\r\n"; $out .= "Connection: Close\r\n"; $out .= "Cache-Control: no-cache\r\n"; $out .= "Cookie: $cookie\r\n\r\n"; $out .= $post; } else { $out = "GET $path HTTP/1.0\r\n"; $out .= "Accept: */*\r\n"; $out .= "Accept-Language: zh-cn\r\n"; $out .= "User-Agent: $_SERVER[HTTP_USER_AGENT]\r\n"; $out .= "Host: $host\r\n"; $out .= "Connection: Close\r\n"; $out .= "Cookie: $cookie\r\n\r\n"; } $fp = @fsockopen(($ip ? $ip : $host), $port, $errno, $errstr, $timeout); if(!$fp) { return ''; } else { stream_set_blocking($fp, $block); stream_set_timeout($fp, $timeout); @fwrite($fp, $out); $status = stream_get_meta_data($fp); if(!$status['timed_out']) { while (!feof($fp)) { if(($header = @fgets($fp)) && ($header == "\r\n" || $header == "\n")) { break; } } $stop = false; while(!feof($fp) && !$stop) { $data = fread($fp, ($limit == 0 || $limit > 8192 ? 8192 : $limit)); $return .= $data; if($limit) { $limit -= strlen($data); $stop = $limit <= 0; } } } @fclose($fp); return $return; } } function mk_dir($dir, $mode = 0777) { if (is_dir($dir) || @mkdir($dir,$mode)) return true; if (!mk_dir(dirname($dir),$mode)) return false; return @mkdir($dir,$mode); } function auto_charset($fContents,$from='gbk',$to='utf-8'){ $from = strtoupper($from)=='UTF8'? 'utf-8':$from; $to = strtoupper($to)=='UTF8'? 'utf-8':$to; if( strtoupper($from) === strtoupper($to) || empty($fContents) || (is_scalar($fContents) && !is_string($fContents)) ){ return $fContents; } if(is_string($fContents) ) { if(function_exists('mb_convert_encoding')){ return mb_convert_encoding ($fContents, $to, $from); }elseif(function_exists('iconv')){ return iconv($from,$to,$fContents); }else{ return $fContents; } } elseif(is_array($fContents)){ foreach ( $fContents as $key => $val ) { $_key = auto_charset($key,$from,$to); $fContents[$_key] = auto_charset($val,$from,$to); if($key != $_key ) unset($fContents[$key]); } return $fContents; } else{ return $fContents; } } function getLimit($count){ $limit = _page($count); return _limit($limit); } function _limit($limit){ if(empty($limit)) return ; return ' limit '.$limit['firstRow'].','.$limit['listRows']; } function _page($count,$listRows=null){ if ($count > 0) { import("ORG.Util.Page"); $listRows = $listRows ? $listRows : !empty($_REQUEST ['listRows']) ? $_REQUEST ['listRows'] : ''; $p = new Page ( $count, $listRows ); $limit['firstRow'] = $p->firstRow; $limit['listRows'] = $p->listRows; $page = $p->show (); $sortImg = $sort; $sortAlt = $sort == 'desc' ? L('SORT_ASC') : L('SORT_DESC'); $sort = $sort == 'desc' ? 1 : 0; $view = Think::instance('View'); $view->assign ( 'sort', $sort ); $view->assign ( 'order', $order ); $view->assign ( 'sortType', $sortAlt ); $view->assign ( "pageInfo", $p->getPageInfo()); $view->assign ( "page", $page ); }else{ return false; } return $limit; } function _list(&$model,&$options) { if (ACTION_NAME=='index' && empty($_GET['p'])) { global $_search_form; } if (!is_object($model)) { $name = $this->getActionName(); $model = D($name); } extract($options); $is_rights = $model->_is_rights==false?0:1; $asc = !empty($asc)?$asc:$model->_asc; $asc = $asc ==true?true:false; $_child = $_child ==true?true:false; $sortBy = !empty($sortBy)?$sortBy:$model->_sortBy; if (isset ( $_REQUEST ['_order'] )) { $order = $_REQUEST ['_order']; } else { $order = ! empty ( $sortBy ) ? $sortBy : $model->getPk (); } if (isset ( $_REQUEST ['_sort'] )) { $sort = $_REQUEST ['_sort'] ? 'asc' : 'desc'; } else { $sort = $asc ? 'asc' : 'desc'; } $group = 0; foreach ((array)$options as $key=>$row) { if (in_array($key,array('table','where','having','group','distinct'))) { if (in_array($key,array('having','group'))) { $group++; continue; } $model->$key($row); } } if ($group>0) { $count = $model->count(' DISTINCT '.$options['group']); }else{ $count = $model->count(1); } if ($count > 0) { import("ORG.Util.Page"); $listRows= (! empty ( $_REQUEST ['listRows'] ))?$_REQUEST ['listRows']:''; $p = new Page ( $count, $listRows ); foreach ((array)$options as $key=>$row) { if (in_array($key,array('sortBy'))) {continue;} $model->$key($row); } $voList = $model->order( "" . $order . " " . $sort)->limit($p->firstRow . ',' . $p->listRows)->select(); $page = $p->show (); $sortImg = $sort; $sortAlt = $sort == 'desc' ? L('SORT_ASC') : L('SORT_DESC'); $sort = $sort == 'desc' ? 1 : 0; $assign_array = array(); $assign_array = $voList; $view = Think::instance('View'); $view->assign ( 'sort', $sort ); $view->assign ( 'order', $order ); $view->assign ( 'sortType', $sortAlt ); $view->assign ( "page", $page ); $view->assign ( "pageInfo", $p->getPageInfo()); } return $assign_array; } function _listStatCount($sql,$cache=true){ $cModel = M(); $sql_count = 'select count(*) as count_stat
					from ('.$sql.') as tmp
					 '; if ($cache){ $cModel->cache(); } $info = $cModel->query($sql_count); return is_array($info)?$info[0]['count_stat']:0; } function _listStatTotal($sql){ $model = M(); $list = _formatList($model->cache()->query($sql),null,0); return $list['list'][0]; } function _getSCacheListInfo($key=null){ $cacheName = 'tablelist_'.USER_ID.'_'.ACTION_NAME.'_'.MODULE_NAME; $cacheInfo = S($cacheName); if (is_array($cacheInfo)){ if ($key){ return $cacheInfo[$key]; }else{ return $cacheInfo; } $requery_time = $_REQUEST['REQUEST_TIME']?$_REQUEST['REQUEST_TIME']:$_SERVER['REQUEST_TIME']; $view = Think::instance('View'); $view->assign ( 'request_time',$_REQUEST['REQUEST_TIME']); }else{ return false; } } function _addSCacheListInfo($key,$value){ $cacheName = 'tablelist_'.USER_ID.'_'.ACTION_NAME.'_'.MODULE_NAME; $cache_info = _getSCacheListInfo(); if ($cache_info==false){ $cache_info = array( $key=>$value, ); }else{ $cache_info[$key] = $value; } S($cacheName,$cache_info,180); $view = Think::instance('View'); $view->assign ('request_time',$_SERVER['REQUEST_TIME']); } function _listStat($sql,$cache=true) { $count = _listStatCount($sql,$cache); if ($count > 0) { $model = M(); import("ORG.Util.Page"); $listRows= (! empty ( $_REQUEST ['listRows'] ))?$_REQUEST ['listRows']:''; $p = new Page ( $count, $listRows ); $sql = $sql.' limit '.$p->firstRow.' , '.$p->listRows.' '; $voList = $model->query($sql); $page = $p->show (); $sortImg = $sort; $sortAlt = $sort == 'desc' ? L('SORT_ASC') : L('SORT_DESC'); $sort = $sort == 'desc' ? 1 : 0; $assign_array = array(); $assign_array = $voList; $view = Think::instance('View'); $view->assign ( 'sort', $sort ); $view->assign ( 'order', $order ); $view->assign ( 'sortType', $sortAlt ); $view->assign ( "page", $page ); $view->assign('pageInfo', array('firstRow' => $p->firstRow, 'listRows' => $p->listRows, 'count' => $count, 'nowPage' => $p->firstRow/$p->listRows + 1)); } return $assign_array; } function Funds($args,$object_type,$action=null){ $model_type = FundsObject(); if(!isset($model_type[$object_type])) { throw_exception('Funds'.$object_type.'不存在！'); } $model_name = $model_type[$object_type]; $o = D($model_name); if ($action=='delete'){ $action = 'deleteOp'; } return $o->paidDetail($args,$action); } function FundsObject(){ $_paid_detail_object_type = array( 1=>'ComCashIni', 101=>'ClientIni', 102=>'ClientOtherArrearages', 103=>'ClientFunds', 104=>'ClientFundsCloseOut', 120=>'ClientSale', 121=>'ClientSaleAdvance', 122=>'ClientSaleCloseOut', 123=>'ClientReturnSale', 124=>'ClientDelivery', 129=>'ClientCheckAccount', 130=>'ClientPriceAdjust', 201=>'FactoryIni', 202=>'FactoryOtherArrearages', 203=>'FactoryFunds', 204=>'FactoryFundsCloseOut', 220=>'FactoryInstock', 221=>'FactoryOnRoad', 229=>'FactoryCheckAccount', 301=>'LogisticsIni', 302=>'LogisticsOtherArrearages', 303=>'LogisticsFunds', 304=>'LogisticsFundsCloseOut', 320=>'LogisticsInstock', 329=>'LogisticsCheckAccount', 800=>'OtherExpenses', 801=>'OtherRevenue', ); return $_paid_detail_object_type; } function BankCenter($args,$object_type,$action=null){ if(empty($object_type) || $object_type<=0){ throw_exception('BankCenter方法中'.$object_type.'$object_type不存在！'); } $model_type = BankCenterObjectType(); $model_name = $model_type[$object_type].''; $o = D($model_name); if ($action=='delete'){ $action = 'deleteOp'; } return $o->paidDetail($args,$action); } function BankCenterObjectType(){ $bank_object_type = array( 1=>'BankIni', 2=>'BankJournal', 3=>'BankRemittance', 4=>'BankOther', 5=>'BankSwap', ); return $bank_object_type; } function getMaxCloseOutDate($comp_type,$basic_id,$comp_id,$currency_id){ if ($comp_type>0 && $basic_id>0 && $comp_id>0 && $currency_id>0){ $model = M('PaidDetail'); $info = $model->query(' select DATE_ADD(paid_date, INTERVAL 1 DAY) as tp_max from paid_detail where currency_id='.$currency_id.' and object_type_extend in (3,4) and to_hide=1 and basic_id='.$basic_id.' and comp_type='.$comp_type.' and comp_id='.$comp_id.' group by paid_date order by paid_date desc limit 1'); $min_paid_date = $info[0]['tp_max']; } return $min_paid_date; } function cacuDate($from_date, $to_date, $type) { $to_date = strtotime(formatDate($to_date)); $from_date = strtotime(formatDate($from_date)); if ($type == 1) { $year_d = date('Y', $to_date) - date('Y', $from_date); if ($year_d >= 0) { for($i=0;$i<=$year_d;$i++) { $dates[] = date('Y', $from_date)+$i; } } }elseif ($type == 2) { $month_d = (date('Y', $to_date) - date('Y', $from_date))*12 +date('m', $to_date)-date('m', $from_date); if ($month_d >= 0) { for($i=0;$i<=$month_d;$i++) { $dates[] = date('Y-m', mktime(0,0,0,date('m',$from_date)+$i,1,date('Y',$from_date))); } } }elseif ($type == 3) { $day_d = round(($to_date - $from_date)/3600/24); if ($day_d >= 0) { for($i=0;$i<=$day_d;$i++) { $dates[] = date('Y-m-d', mktime(0,0,0,date('m',$from_date),date('d',$from_date)+$i,date('Y',$from_date))); } } } return $dates; } function getBarcodeLen($pre_name){ if (!C('barcode')) return 0; $barcode = C('barcode_rules'); return $barcode['barcode'][$pre_name]; } function getBarcodeExchange($pre_name){ if (!C('barcode')) return false; $barcode = C('barcode_rules'); return $barcode['barcode_exchange'][$pre_name]==1?true:false; } function inputBarcode($barcode_no){ if(empty($barcode_no)) { return false; } $barcode= M('barcode'); $rs = $barcode->field('p_id,barcode_no,color_id,size_id')->where('barcode_no=\''.$barcode_no.'\'')->select(); if(count($rs)=='1'){ $info = $rs[0]; if($info['p_id']>0){ $product= M('product'); $rs = $product->field('factory_id,instock_price')->where('id=\''.$info['p_id'].'\'')->find(); $info['factory_id'] = $rs['factory_id']; $info['instock_price'] = $rs['instock_price']; } if(!is_array($info)) { return false; } return $info; }else{ return false; } } function getBarcode($p_id, $color_id = 0, $size_id = 0){ if (C('barcode')==1){ $barcode = C('barcode_rules'); $cache_barcode = $barcode['barcode']; if (!is_array($cache_barcode)) { return false; } $where = 'p_id='.$p_id; if ($cache_barcode['barcode']['color_no']>0 && $color_id) { $where.=' and color_id='.$color_id; } if ($cache_barcode['barcode']['size_no'] >0 && $size_id) { $where.=' and size_id='.$size_id; } $model = M("Barcode"); $barcode =$model->where($where)->select(); if (count($barcode)==1) { return $barcode[0]['barcode_no']; } return false; } } function getProductBarCodeCache($id){ $where = 'p_id='.$id; $model = M("Barcode"); $list =$model->where($where)->select(); foreach ((array)$list as $key=>$row) { $insertCache[$id][$row['color_id']][$row['size_id']] = $row['barcode_no']; } insertProductBarCodeCache($id,$insertCache); return $insertCache[$id]; } function insertProductBarCodeCache($id,$insertCache){ $name = 'barcode_'.$id; S($name,''); S($name,$insertCache[$id]); } function postEmail($toEmail,$title,$content,$path=NULL){ try { $title = empty($title)?'友拓通-邮件提醒':$title; $email_adder = C('email_adder')?C('email_adder'):'****@163.com'; $email_password = C('email_password')?C('email_password'):'*****'; $email_host = C('email_host')?C('email_host'):'smtp.163.com'; $email_port = C('email_port')?C('email_port'):'25'; $email_title = C('email_title')?C('email_title'):'友拓通'; import("ORG.Util.Phpmailer"); $mail = new PHPMailer(true); $body = $content; $mail->IsSMTP(); $mail->SMTPAuth = true; $mail->CharSet = 'utf-8'; $mail->Port = $email_port; $mail->Host = $email_host; $mail->Username = $email_adder; $mail->Password = $email_password; $mail->FromName ='发件人'; $mail->From = $email_adder; $mail->FromName = $email_title; if (is_string($toEmail)) { $toEmail = explode(',', $toEmail); } else { if (!empty($toEmail['ccMail'])) { $ccEmail = is_string($toEmail['ccMail']) ? explode(',', $toEmail['ccMail']) : $toEmail['ccMail']; foreach ($ccEmail as $name => $cc) { $name = is_numeric($name) ? '' : $name; $mail->AddCC(trim($cc), $name); } } if (!empty($toEmail['toMail'])) { $toEmail = is_string($toEmail['toMail']) ? explode(',', $toEmail['toMail']) : $toEmail['toMail']; } } foreach ($toEmail as $name => $to) { $name = is_numeric($name) ? '' : $name; $mail->AddAddress(trim($to), $name); } $mail->Subject = $title; $mail->AltBody = "To view the message, please use an HTML compatible email viewer!"; $mail->WordWrap = 80; $mail->MsgHTML($body); $mail->IsHTML(true); if(is_array($path)){ foreach ($path as $file){ $mail->AddAttachment($file); } }else{ if(isset($path)){ $mail->AddAttachment($path); } } return $mail->Send(); } catch (phpmailerException $e) { echo $e->errorMessage(); return false; } } function getOutPutRand(){ $rand = $_POST['rand'] ? $_POST['rand'] : md5(time()); session($rand,$_POST); $view = Think::instance('View'); $view->assign('rand',$rand); } function getAnalysisDate($sql){ $compare_type = $_REQUEST['compare_type']; import("ORG.Util.Page"); $listRows= (! empty ( $_REQUEST ['listRows'] ))?$_REQUEST ['listRows']:''; $count = M()->cache()->query('select count(*) count from ('.$sql.') t'); $count = reset($count); $p = new Page($count['count'],$listRows); $page = $p->show(); $limit = ' limit '.$p->firstRow . ','.$p->listRows; $order_date = M()->cache()->query('select min(order_date) from_order_date,max(order_date) to_order_date from(select * from ('.$sql.') t  order by order_date '.$limit.') t'); $info = reset($order_date); if($compare_type==2){ $info['from_order_date'] = $info['from_order_date'].'-01'; $info['to_order_date'] = $info['to_order_date'].'-'.date('t',strtotime($info['to_order_date'])); }elseif($compare_type==1){ $info['from_order_date'] = $info['from_order_date'].'-01-01'; $info['to_order_date'] = $info['to_order_date'].'-12-31'; } $info['page'] = $page; return $info; } function getAllFile($dir_now,$postfix=false,$mark='') { $dir_now_file = scandir($dir_now, 1); if(!is_array($dir_now_file)) {return $lang=array();} foreach ($dir_now_file as $dir_file) { if ($postfix==true) { if (in_array($dir_file,array('.','..','.svn'))) { continue; } if (empty($mark)) { $lang[] = $dir_file; }else{ if (strpos($dir_file,$mark)) { $lang[] = $dir_file; } } }else { $lang[] = $dir_file; } } return $lang; } function getLogicalExpression($fieldName, $logic, $fieldValue){ $expression = $fieldName; switch (strtolower($logic)) { case '#le#': $expression .= '<="'.$fieldValue.'"'; break; case '#lt#': $expression .= '<"'.$fieldValue.'"'; break; case '#ge#': $expression .= '>="'.$fieldValue.'"'; break; case '#gt#': $expression .= '>"'.$fieldValue.'"'; break; case '#ne#': $expression .= '!="'.$fieldValue.'"'; break; case '#null#': $expression .= ' is NULL'; break; case '#notnull#': $expression .= ' is not NULL'; break; case '#empty#': $expression = '('.$fieldName.'="" or ' . $fieldName . ' is NULL)'; break; case '#nonempty#': $expression = '('.$fieldName.'!="" and ' . $fieldName . ' is not NULL)'; break; case '#eq#': default : $expression .= '="'.$fieldValue.'"'; break; } return $expression; } function _mergeAddress(&$rs, $delimiter = ',', $fields=array('address','address2','company_name','city_name','country_name','abbr_district_name')){ if (is_array($rs) && !empty($rs)) { if (is_string($fields)) { $fields = explode(',', $fields); } if (isset($rs['list'])) { foreach ($rs['list'] as &$v) { $merge_address = array(); foreach ($fields as $field) { !empty($v[$field]) && $merge_address[] = $v[$field]; } $v['merge_address'] = implode($delimiter, $merge_address); } } else { $merge_address = array(); foreach ($fields as $field) { !empty($rs[$field]) && $merge_address[] = $rs[$field]; } $rs['merge_address'] = implode($delimiter, $merge_address); } } return $rs; } function _formatWeight(&$info, $weight_unit_lang_key = 'weight_unit'){ $info['s_weight'] = $info['dml_weight']; $info['s_unit_weight'] = $info['dml_weight'] . L($weight_unit_lang_key); if (isset($info['check_weight'])) { $info['s_check_weight'] = $info['dml_check_weight']; $info['s_unit_check_weight'] = $info['dml_check_weight'] . L($weight_unit_lang_key); } return $info; } function _formatCube(&$info, $size_unit_lang_key = 'size_unit', $volume_size_unit_lang_key = 'volume_size_unit', $weight_unit_lang_key = 'weight_unit'){ $info['s_cube'] = $info['dml_cube_long'] . '*' . $info['dml_cube_wide'] . '*' . $info['dml_cube_high'] . '=' . $info['dml_cube']; $info['s_unit_cube'] = L('long') . $info['dml_cube_long'] . L($size_unit_lang_key) . '*' . L('wide') . $info['dml_cube_wide'] . L($size_unit_lang_key) . '*' . L('high') . $info['dml_cube_high'] . L($size_unit_lang_key) . '=' . $info['dml_cube'] . L($volume_size_unit_lang_key); if(isset($info['volume_weight'])) { $info['s_volume_weight'] = $info['dml_volume_weight']; $info['s_unit_volume_weight'] = $info['dml_volume_weight'] . L($weight_unit_lang_key); } if (isset($info['check_cube'])) { $info['s_check_cube'] = $info['dml_check_long'] . '*' . $info['dml_check_wide'] . '*' . $info['dml_check_high'] . '=' . $info['dml_check_cube']; $info['s_unit_check_cube'] = L('long') . $info['dml_check_long'] . L($size_unit_lang_key) . '*' . L('wide') . $info['dml_check_wide'] . L($size_unit_lang_key) . '*' . L('high') . $info['dml_check_high'] . L($size_unit_lang_key) . '=' . $info['dml_check_cube'] . L($volume_size_unit_lang_key); } return $info; } function _formatWeightCube(&$info, $weight_unit_lang_key = 'weight_unit', $size_unit_lang_key = 'size_unit', $volume_size_unit_lang_key = 'volume_size_unit') { if(empty($info)){ return $info; } _formatWeight($info, $weight_unit_lang_key); _formatCube($info, $size_unit_lang_key, $volume_size_unit_lang_key); return $info; } function _formatWeightCubeList(&$list, $weight_unit_lang_key = 'weight_unit', $size_unit_lang_key = 'size_unit', $volume_size_unit_lang_key = 'volume_size_unit') { foreach($list as &$info) { _formatWeightCube($info, $weight_unit_lang_key, $size_unit_lang_key, $volume_size_unit_lang_key); } return $list; } function generateBarcode($code, $path, $hri='', $barcode_config = null, $wrap = true){ import("ORG.Util.Barcode"); $pc_type = C('BARCODE_PC_TYPE') ? C('BARCODE_PC_TYPE') : 'gif'; $code_type = C('BARCODE_CODE_TYPE') ? C('BARCODE_CODE_TYPE') : 'code128b'; $filename = $path . '/' . (isset($barcode_config['file_name']) ? $barcode_config['file_name'] : $code) . '.' . $pc_type; $default_config = array( 'pc_height' => 100, 'pc_width' => 300, 'y' => 35, 'height' => 50, 'width' => 2, 'angle' => 0, 'fontSize' => 8, ); is_array($barcode_config) && $default_config = array_merge($default_config, $barcode_config); extract($default_config); $x = $pc_width / 2; $im = imagecreatetruecolor($pc_width, $pc_height); $black = ImageColorAllocate($im,0x00,0x00,0x00); $white = ImageColorAllocate($im,0xff,0xff,0xff); imagefilledrectangle($im, 0, 0, $pc_width, $pc_height, $white); $data = Barcode::gd($im, $black, $x, $y, $angle, $code_type, $code, $width, $height); $font = APP_FONTS_PATH . 'SongBlack.ttf'; if (mk_dir($path) && @is_writable($path)) { if (Barcode::output($im, $pc_type, $filename)){ if ( isset($font) ){ $im = imagecreatefromgif($filename); if (is_array($hri)) { $hri = implode("\n", $hri); } if(!is_null($hri)) { if (!empty($hri)) { $data['hri'] .= ($wrap ? "\n" : '') . $hri; } $data['hri'] = mb_convert_encoding($data['hri'], "html-entities", "utf-8"); $data['hri'] = autoWrap($fontSize, $angle, $font, $data['hri'], max($pc_width-20,0)); $marge = 10; $box = imagettfbbox($fontSize, $angle, $font, $data['hri']); $len = $box[2] - $box[0]; Barcode::rotate(-$len / 2, ($data['height'] / 2) + $fontSize + $marge, $angle, $xt, $yt); imagettftext($im, $fontSize, $angle, max(10, $x+$xt), $y + $yt, $black, $font, $data['hri']); } imagegif($im, $filename); } } } else { halt(L('dir_right_error')); } } function autoWrap($fontsize, $angle, $fontface, $string, $width) { $content = ""; for ($i=0;$i<mb_strlen($string);$i++) { $letter[] = mb_substr($string, $i, 1); } foreach ($letter as $l) { $teststr = $content." ".$l; $testbox = imagettfbbox($fontsize, $angle, $fontface, $teststr); if (($testbox[2] > $width) && ($content !== "")) { $content .= "\n"; } $content .= $l; } return $content; } function getUploadDir($relation_type) { $dis = C('UPLOAD_DIR'); return isset($dis[$relation_type]) ? $dis[$relation_type] : ''; } function getUploadPath($relation_type) { return rtrim(UPLOADS_PATH . getUploadDir($relation_type), '/') . '/'; } function getRealUploadPath($relation_type) { $url = (is_ssl() ? 'https://' : 'http://') . $_SERVER['HTTP_HOST']; $path = APP_NAME . '/' . ltrim(getUploadPath($relation_type), './'); return $url . '/' . ltrim($path, '/'); } function getStrFromArr($rs, $delimiter=',', $fn_args = array(), $fn = 'setElementStr'){ if (!is_array($rs)) { return $rs; } array_walk($rs, $fn, $fn_args); return implode($delimiter, $rs); } function setElementStr(&$value, $key, $fn_args = array()) { $prefix = !is_null($fn_args[0]) ? $fn_args[0] : ''; $field_name = !is_null($fn_args[1]) ? $$fn_args[1] : $key; $middle_string = !is_null($fn_args[2]) ? $fn_args[2] : '='; $value_name = !is_null($fn_args[3]) ? $fn_args[3] : $value; $suffix = !is_null($fn_args[4]) ? $fn_args[4] : ''; $value = $prefix . $field_name . $middle_string . $value_name . $suffix; } function implodeExtend($rs, $delimiter=',' ,$prefix = ''){ if (!is_array($rs)) { return $rs; } if ($prefix != '') { array_walk($rs, 'setArrValuePrefix', $prefix); } return implode($delimiter, $rs); } function setArrValuePrefix(&$value, $key, $prefix = '') { $value = $prefix . $value; } function sqlWhereKeyPrefix($rs,$prefix = ''){ if (!is_array($rs)) { return $prefix.$rs; } if ($prefix != '') { foreach ($rs as $key=>$value){ if($key!='date'){ if(!is_array($value)){ $arr[$prefix.$key] = $value; }else{ $arr[$key] = sqlWhereKeyPrefix($value, $prefix); } }else{ $arr[$key] = $value; } } } return $arr; } function implodeByFields($rs, $fields = array(), $delimiter='_'){ if (!is_array($rs)) { return $rs; } if (!empty($fields)) { !is_array($fields) && $fields = explode(',', $fields); $tmp = array(); foreach ($fields as $field) { $tmp[] = $rs[$field]; } $rs = $tmp; } return implode($delimiter, $rs); } function tranCsv($source_array,$need_array,$tran_array,$path_str,$head_array=null,$sign=',', $is_utf8 = false){ $path = dirname($path_str); if (!mk_dir($path) || !@is_writable($path)) { halt(L('dir_right_error')); } $fp = fopen($path_str,'w'); if ($is_utf8 === true) { fwrite($fp, pack('H*','EFBBBF')); } if($head_array){ foreach ($head_array as $i => $v) { if ($is_utf8 !== true) { $v = iconv('utf-8', 'iso-8859-1', $v); } $head[$i] = $v; } $data['row'] = $head; if (fput_csv($fp,$data,$sign) === false){ fclose($fp); return false; } } $cnt = 0; $limit = 1000; foreach ((array)$source_array as $key => $row) { $cur_sign = isset($row['sign']) ? $row['sign'] : $sign; $cnt ++; if ($limit == $cnt) { ob_flush(); flush(); $cnt = 0; } $new_key = array(); $new_row = array(); foreach($need_array as $field) { if (!array_key_exists($field, $row)) { $row[$field] = ''; } } foreach ($row as $i => $v) { if(in_array($i,$need_array)){ if(in_array($i,$tran_array)){ $v = '="'.$v.'"'; } elseif ($cur_sign == ',' && strpos($v, ',')) { $v = '"' . $v . '"'; } $v = HtmlDecode($v); if ($is_utf8 !== true) { if (is_array($v)) { foreach ($v as &$val) { $val = iconv('utf-8', 'iso-8859-1', $val); } } else { $v = iconv('utf-8', 'iso-8859-1', $v); } } $new_row[array_search($i,$need_array)] = $v; $new_key[$i] = array_search($i,$need_array); } } ksort($new_row); $data['key'] = $new_key; $data['row'] = $new_row; if (fput_csv($fp,$data,$cur_sign) === false){ fclose($fp); return false; } } fclose($fp); return true; } function tranXls($source_array,$need_array,$tran_array,$path_str,$head_array=null,$sign='\t'){ ini_set('memory_limit', '64M'); @unlink($path_str); $dir = dirname($path_str); if (!mk_dir($dir) || !is_writable($dir)) { halt(L('dir_right_error')); } vendor('PhpExcel.PHPExcel','','.php'); $objPHPExcel = new PHPExcel(); $objPHPExcel->getProperties()->setCreator("友拓通")->setTitle("Excel"); $objPHPExcel->createSheet(0); $objActSheet = $objPHPExcel->setActiveSheetIndex(0); $rt = 1; $content_length = array(); foreach ($source_array as $value) { $qt = 'A'; $need_data = array(); foreach($need_array as $field){ $need_data[] = $value[$field]; } $row_data = $sign == '\t' ? $need_data : array(implode("$sign", $need_data)); foreach($row_data as $content){ $objActSheet->setCellValue($qt.$rt, $content); if ($content_length[$qt] < strlen($content)) { $content_length[$qt] = strlen($content); $objActSheet->getColumnDimension($qt)->setWidth($content_length[$qt]+2); } $objStyle = $objActSheet->getStyle($qt.$rt); $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT); $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER); $objPHPExcel->getActiveSheet()->getStyle($qt)->getNumberFormat()->setFormatCode("@"); $qt++; } $rt++; } $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5'); $objWriter->save($path_str); return true; } function tranTxt($source_array,$need_array,$tran_array,$path_str,$head_array=null,$sign=',', $is_utf8 = false){ $path = dirname($path_str); if (!mk_dir($path) || !@is_writable($path)) { halt(L('dir_right_error')); } $fp = fopen($path_str,'w'); if ($is_utf8 === true) { fwrite($fp, pack('H*','EFBBBF')); } if($head_array){ foreach ($head_array as $i => $v) { if ($is_utf8 !== true) { $v = iconv('utf-8', 'iso-8859-1', $v); } $head[$i] = $v; } $data['row'] = $head; if (fput_txt($fp,$data,$sign) === false){ fclose($fp); return false; } } $cnt = 0; $limit = 1000; foreach ((array)$source_array as $key => $row) { $cur_sign = isset($row['sign']) ? $row['sign'] : $sign; $cnt ++; if ($limit == $cnt) { ob_flush(); flush(); $cnt = 0; } $new_key = array(); $new_row = array(); foreach ($row as $i => $v) { if(in_array($i,$need_array)){ $v = HtmlDecode($v); if ($is_utf8 !== true) { if (is_array($v)) { foreach ($v as &$val) { $val = iconv('utf-8', 'iso-8859-1', $val); } } else { $v = iconv('utf-8', 'iso-8859-1', $v); } } $new_row[array_search($i,$need_array)] = $v; $new_key[$i] = array_search($i,$need_array); } } ksort($new_row); $data['key'] = $new_key; $data['row'] = $new_row; if (fput_txt($fp,$data,$cur_sign) === false){ fclose($fp); return false; } } fclose($fp); return true; } function outputPdf($source_array,$need_array,$tran_array,$path_str,$head_array=null,$sign='\t'){ ini_set('memory_limit', '64M'); vendor('PhpExcel.PHPExcel','','.php'); $objPHPExcel = new PHPExcel(); $objPHPExcel->getProperties()->setCreator("友拓通")->setTitle("Excel"); $objPHPExcel->createSheet(0); $rt = 1; $content_length = array(); $objActSheet = $objPHPExcel->setActiveSheetIndex(0); foreach ($source_array as $value) { $qt = 'A'; $need_data = array(); foreach($need_array as $field){ $need_data[] = $value[$field]; } $row_data = $sign == '\t' ? $need_data : array(implode("$sign", $need_data)); foreach($row_data as $content){ $objActSheet->setCellValue($qt.$rt, $content); if ($content_length[$qt] < strlen($content)) { $content_length[$qt] = strlen($content); $objActSheet->getColumnDimension($qt)->setWidth($content_length[$qt]+2); } $objStyle = $objActSheet->getStyle($qt.$rt); $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT); $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER); $objPHPExcel->getActiveSheet()->getStyle($qt)->getNumberFormat()->setFormatCode("@"); $qt++; } $rt++; } $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'oldPDF'); $objWriter->output($path_str); exit; } function HtmlDecode($array_string,$code=ENT_QUOTES){ if(is_array($array_string)){ foreach($array_string as $key=>$val){ $array_string[$key] =HtmlDecode($val); } }else{ $array_string = htmlspecialchars_decode($array_string,$code); } return $array_string; } function fput_csv($filePointer,$dataArray,$delimiter,$enclosure) { $string = ""; $writeDelimiter = FALSE; $data = $dataArray['row']; $key = $dataArray['key']; if (array_key_exists('ext_cols', $key)) { $ext_cols = "," . (is_array($data[$key['ext_cols']]) ? implode(",", $data[$key['ext_cols']]) : $data[$key['ext_cols']]); unset($data[$key['ext_cols']]); } else { $ext_cols = ''; } foreach($data as $dataElement) { $dataElement=str_replace("\"", "\"\"", $dataElement); if($writeDelimiter) $string .= $delimiter; $string .= $enclosure . $dataElement . $enclosure; $writeDelimiter = TRUE; } if ($delimiter != ',' && strpos($string, ',')) { $string = '"' . $string . '"'; } $string .= $ext_cols; $string .= "\r\n"; return fwrite($filePointer,$string) === false ? false : true; } function fput_txt($filePointer,$dataArray,$delimiter,$enclosure) { $string = ""; $writeDelimiter = FALSE; $data = $dataArray['row']; $key = $dataArray['key']; if (array_key_exists('ext_cols', $key)) { $ext_cols = "," . (is_array($data[$key['ext_cols']]) ? implode(",", $data[$key['ext_cols']]) : $data[$key['ext_cols']]); unset($data[$key['ext_cols']]); } else { $ext_cols = ''; } foreach($data as $dataElement){ $dataElement=str_replace("\"", "\"\"", $dataElement); if($writeDelimiter) $string .= $delimiter; $string .= $enclosure . $dataElement . $enclosure; $writeDelimiter = TRUE; } $string .= $ext_cols; $string .= "\r\n"; return fwrite($filePointer,$string) === false ? false : true; } function checkStrIn($data, $text){ $result = false; foreach((array)$data as $key){ if(stripos($text,$key)!==false){ $result = true; break; } } return $result; } function combineArray($key_array, $value_array){ $result = array(); foreach((array)$key_array as $key => $value){ isset($value_array[$key])&&$result[$key] = $value_array[$key]; } return $result; } function addslashes_deep($value){ if (empty($value)) { return $value; } elseif (is_object($value)){ foreach ($value AS $key => $val){ $value->$key = addslashes_deep($val); } } elseif (is_array($value)) { foreach((array)$value as $k=>$v) { unset($value[$k]); $k = addslashes($k); $value[$k] = addslashes_deep($v); } } else { $value = addslashes($value); } return $value; } function stripslashes_deep($value) { if (empty($value)) { return $value; } elseif (is_object($value)){ foreach ($value AS $key => $val){ $value->$key = stripslashes_deep($val); } } elseif(is_array($value)) { foreach((array)$value as $k=>$v) { unset($value[$k]); $k = stripslashes($k); $value[$k] = stripslashes_deep($v); } } else { $value = stripslashes($value); } return $value; } function getDiffTime($begin_time, $end_time){ $diff_time = abs($end_time - $begin_time); $prefix = $end_time - $begin_time < 0 ? '-' : ''; $diff_date = ''; $format_arr = array('Y'=>'年', 'm'=>'个月', 'd'=>'天', 'H'=>'小时', 'i'=>'分钟', 's'=>'秒'); $begin = false; foreach ($format_arr as $format => $suffix) { $value = date($format, $diff_time) - date($format, 0); if (!$begin && $value > 0) { $begin = true; } if ($begin) { $diff_date .= $value . $suffix; } } return $prefix . $diff_date; } function getDiffDate($begin_date, $end_date){ return getDiffTime(strtotime($begin_date), strtotime($end_date)); } function array_is_null($arr = null){ if(is_array($arr)){ foreach($arr as $k=>$v){ if($v&&!is_array($v)){ return false; } $t = array_is_null($v); if(!$t){ return false; } } return true; }elseif(!$arr){ return true; }else{ return false; } } function validDetailSpecRepeat(&$data, $validFields = array(), $errorName = 'product_id', $detailKey = 'detail'){ $spec = array(); $errorArr = array(); $first = null; foreach($data[$detailKey] as $key=>$val){ if(is_array($errorName)){ $is_empty = TRUE; foreach($errorName as $field){ if(!empty($val[$field])){ $is_empty = FALSE; } } }else{ $is_empty = empty($val[$errorName]); } if ($is_empty){ if (empty($first) && $key>0){ $first = $key; continue; } unset($data[$detailKey][$key]); continue; } if(!is_array($errorName)){ $spec_items = array(); foreach ($validFields as $field) { $spec_items[] = $val[$field]; } $detail_spec = implode('_', $spec_items); if(in_array($detail_spec,$spec)){ $error['name'] = $detailKey . '['.$key.'][' . $errorName . ']'; $error['value'] = L('spec_error'); $errorArr[] = $error; }else{ $spec[] = $detail_spec; } } } if (count($data[$detailKey])>1 && !empty($first)){ unset($data[$detailKey][$first]); } return $errorArr; } function getApiToken(){ $token = md5(getRands() . time() . getRands()); return $token; } function getWarehouseCountry($warehouse_id){ $country_id = M('warehouse')->where('id='.(int)$warehouse_id)->getField('country_id'); return $country_id; } function DdToId($dd_name = null, $dd_field = null){ static $dd_to_id = array(); if (empty($dd_to_id)) { $dd_fields = array( 'abbr_district_name' =>'country', 'w_no' =>'warehouse', 'ship_name' =>'shipping', 'package_name' =>'package', 'logistics_name' =>'logistics', ); foreach ($dd_fields as $field => $name) { $dd = S($name); foreach((array)$dd as $key=>$val){ if($val[$field]){ $dd_to_id[$name][strtoupper($val[$field])] = $key; } } unset($dd); } } if (is_null($dd_name)) { return $dd_to_id; } if (is_null($dd_field)) { return $dd_to_id[$dd_name]; } return $dd_to_id[$dd_name][$dd_field]; } function getProductIdByFactory($product_no, $factory_id) { $where = array( 'factory_id' => $factory_id, 'product_no' => is_array($product_no) ? array('in', $product_no) : $product_no, 'to_hide' => 1, ); if (is_array($product_no)) { return M('product')->where($where)->getField('product_no, id'); } else { $product_id = M('product')->where($where)->getField('id'); return $product_id > 0 ? $product_id : 0; } } function getModuleMaxNo($model=null, $step=1){ if (is_null($model)) { $model = MODULE_NAME; } $action = A($model); if (C(strtoupper($action->_setauto_cache))==1){ $model = D($model); $where = $action->_default_where ? $action->_default_where : ''; $curr_max_no = $model->where($where)->order('id desc')->getField($action->_auto_no_name); $max = intval($curr_max_no)+$step; $leng = $action->_setauto_leng>0 ? $action->_setauto_leng : 3; $max_no = str_pad($max, $leng, '0', STR_PAD_LEFT); return $max_no; } } function resetArrayIndex($array, $keys, $td = false){ if (!is_array($keys)) { $keys = explode(',', $keys); } if (empty($keys)) { return $array; } $arr_new = array(); foreach ((array)$array as $k=>$v){ $v_keys = array(); foreach ($keys as $sub=>$key){ if (array_key_exists($key, $v)) { $v_keys[] = $v[$key]; } else { unset($keys[$sub]); } } if (empty($v_keys)) { return $array; } $new_key = implode('_', $v_keys); if ($td === true) { $arr_new[$new_key][] = $v; } else { $arr_new[$new_key] = $v; } } return $arr_new; } function saleOrderCheckEdit($state,$id, $params = array()) { $role_type = getUser('role_type'); if($state == C('SALE_ORDER_DELETED')){ return 1; } $_action = $params['_action'] ? $params['_action'] : ACTION_NAME; if ($role_type == C('SELLER_ROLE_TYPE') && !in_array($state, explode(',',C('SELLER_CAN_EDIT_STATE')))) { $sale_order_state = M('state_log')->where('object_type='.array_search('SaleOrder',C('STATE_OBJECT_TYPE')).' and object_id='.$id)->order('id desc')->getField('state_id',true); if(in_array($_action, array('edit','index','view')) && $state == C('SALEORDER_OBSOLETE')){ return 0; } if((in_array($state, explode(',', C('SALEORDER_OBSOLETE'))) && !in_array(C('SHIPPED'), $sale_order_state)) || $state==C('ERROR_ADDRESS')){ return 1; } return 0; } elseif ($role_type != C('SELLER_ROLE_TYPE') && !in_array($state, explode(',',C('ADMIN_CAN_EDIT_STATE')))){ return 0; } return 1; } function saleOrderCheckDelete($state,$is_shipped) { if ((getUser('role_type') == C('SELLER_ROLE_TYPE') && in_array($state, explode(',',C('SELLER_CAN_DEL_STATE'))))) { return 1; } else { return 0; } } function getLocatioinId($location_no,$warehouse_id=NULL){ if($warehouse_id != null){ $where = ' and warehouse_id='.$warehouse_id; } $location_id = M('location')->where('barcode_no like \''.trim($location_no).'\''.$where)->getField('id'); return $location_id; } function getLocationNo($location_id,$warehouse_id=NULL){ static $location_no = array(); $where = array(); if(!is_null($warehouse_id)){ $where['warehouse_id'] = $warehouse_id; } if(!empty($location_id)){ if (is_array($location_id)) { $data = array(); foreach ($location_id as $key => $id) { if (isset($location_no[$id])) { $data[$id] = $location_no[$id]; unset($location_id[$key]); } } if (!empty($location_id)) { $where['id'] = array('in', $location_id); $barcode_no = M('location')->where($where)->getField('id, barcode_no'); if ($barcode_no) { $data = $data + $barcode_no; } } $location_no = $location_no + $data; return $data; } else { if (!isset($location_no[$location_id])) { $where['id'] = $location_id; $location_no[$location_id] = M('location')->where($where)->getField('barcode_no'); } return $location_no[$location_id]; } }else{ return $location_id; } } function getBarcodeNoById($location_id){ if(empty($location_id)){ return ''; } if(is_array($location_id)){ $location_id = implode(',', $location_id); } return M('location')->where('id in ('.$location_id.')')->getField('id,barcode_no'); } function stringCompress($string, $type = 'encode'){ if (empty($string)) { return $string; } $magic_quotes_gpc = get_magic_quotes_gpc() === 1 ? true : false; if ($type == 'encode') { if ($magic_quotes_gpc === false) { $string = addslashes($string); } $string = base64_encode(gzdeflate($string, 9)); } else { $string = gzinflate(base64_decode($string)); if ($magic_quotes_gpc === false) { $string = stripcslashes($string); } } return $string; } function step_price_calculate($is_sql, $order_weight = 0, $express_data = array()){ if ($is_sql) { return 'if(f.step_price>0, ceil(if(d.calculation=1 and '.volume_weight_calculate(true).'>a.weight,'.volume_weight_calculate(true).',a.weight)/1000)*f.step_price,0)'; } else { if(in_array($express_data['company_id'],C('STEP_PRICE_CALCULATE'))){ return $order_weight > 0 && $express_data['step_price'] > 0 ? ceil(($order_weight-$express_data['weight_begin']) / 1000) * $express_data['step_price'] : 0; } return $order_weight > 0 && $express_data['step_price'] > 0 ? ceil($order_weight / 1000) * $express_data['step_price'] : 0; } } function choose_weight($order_weight,$order_volume_weight,$express_data = array()){ if($express_data['calculation']==1&&$order_weight<$order_volume_weight){ $order_weight=$order_volume_weight; } return $order_weight; } function volume_weight_calculate($is_sql,$volume=0,$flag=true){ if ($is_sql) { return 'ceil(a.cube_long*a.cube_wide*a.cube_high/6000*2)/2*1000'; } else { if($flag){ $volume_weight=$volume/6000*1000; } else{ $volume_weight=ceil($volume/6000*2)/2*1000; } return $volume_weight; } } function array_merge_deep($arr1, $arr2, $level = 0){ if (empty($arr1) || !is_array($arr1)) { return $arr2; } if (empty($arr2) || !is_array($arr2)) { return $level > 0 ? $arr2 : $arr1; } foreach ($arr2 as $key => $val) { $arr1[$key] = array_merge_deep($arr1[$key], $val, $level + 1); } return $arr1; } function WeightGtoKG($weight,$num=2,$rate=1000){ $weight = $weight/$rate; $min_weight = 1/pow(10, $num); if($weight<=$min_weight){ return $min_weight; } return substr(sprintf("%.10f", $weight), 0, $num-10); } function workDays($start,$end){ $end < $start && exit; $double = ($end - $start)/(7*24*3600); $double = floor($double); $start = date('w',$start); $end = date('w',$end); $end = $start > $end ? $end + 5 : $end; return $double * 5 + $end - $start; } function workDaysDate($date,$days){ is_string($date) && $date = strtotime($date); $weeks = floor($days/5); $days = $days%5; $w = date('w', intval($date)); $days += $w < $days ? 2 :0; $days = -$weeks*7-$days; return date('Y-m-d',strtotime($days." day")); } function dre($info){ dump($info); rollback(); exit; } function getReturnServiceId($return_service_no){ static $return_service = array(); if (!isset($return_service[$return_service_no])) { $where = array('return_service_no' => $return_service_no); $return_service[$return_service_no] = empty($return_service_no) ? 0 : intval(M('ReturnService')->where($where)->getField('id')); } return $return_service[$return_service_no]; } function getApiXmlFileName($id, $request_time, $is_request){ $path = DATA_PATH . 'ApiXml/'.date('Ymd', strtotime($request_time)) . '/'; mk_dir($path); @chmod($path, 0777); return $path . ($id ? $id : 'fail') . ($is_request ? '_request' : '_return') . '.xml'; } function validReturnOrderNo($ReturnOrderNo){ if (empty($ReturnOrderNo) || preg_match('/^RT\d{10}$/i', $ReturnOrderNo) == 0){ return false; } return true; } function NumToStr($num){ if (stripos($num,'E')===false) return $num; $num = trim(preg_replace('/[=\'"]/','',$num,1),'"'); $result = ""; while ($num > 0){ $v = $num - floor($num / 10)*10; $num = floor($num / 10); $result = $v . $result; } return $result; } function a2bc($a,$b,$c){ return $a ? $b : $c; } function getProductIdByBarcode($product_id){ if(!empty($product_id) && is_array($product_id)){ return M('product')->where('product_id in ('.implode(',', $product_id).')')->getField('custom_barcode','product_id'); } } function getReturnServiceItemNumberId($item_number, $return_service_id){ static $return_service_item_number = array(); if (!isset($return_service_item_number[$return_service_id][$item_number])) { $where = array('item_number' => $item_number, 'return_service_id' => $return_service_id); $return_service_item_number[$return_service_id][$item_number] = $return_service_id <= 0 || empty($item_number) ? 0 : intval(M('ReturnServiceDetail')->where($where)->getField('id')); } return $return_service_item_number[$return_service_id][$item_number]; } function requestDataByPost($url, $post = array()) { if (empty($url)) { return ''; } if (is_array($post)) { ksort($post); $post = http_build_query($post, '', '&'); } $context['http'] = array( 'method' => 'POST', 'content' => $post, ); $path = str_replace('&amp;', '&', $url); $data = file_get_contents($path, false, stream_context_create($context)); return $data; } function curlRequest($url, $post = array()){ $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_TIMEOUT, 60); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($post)); $response = array( 'errno' => curl_errno($ch), 'content' => curl_exec($ch), ); curl_close($ch); return $response; } function getTimeZone($timezone_identifier = '', $timeZone = null){ $differ = false; if (!empty($timezone_identifier)) { $cur_zone = date_default_timezone_get(); if ($timezone_identifier != $cur_zone) { $differ = true; date_default_timezone_set($timezone_identifier); } } if (is_null($timeZone)) { $timeZone = date('O'); } if ($differ) { date_default_timezone_set($cur_zone); } return intval($timeZone/100) + $timeZone%100/60; } function toTimeZone($dateTime, $fromTimeZone = 'Asia/Shanghai', $toTimeZone = 'Europe/Berlin', $dateFormat = 'Y-m-d H:i:s') { $DateTime = new DateTime($dateTime, new DateTimeZone($fromTimeZone)); $DateTime->setTimezone(new DateTimeZone($toTimeZone)); return $DateTime->format($dateFormat); } function make_array_by_fields($data, $fields) { $result = array(); foreach ($fields as $key => $field) { switch (true) { case is_numeric($field): if ($field != 0 || array_key_exists($key, $data)) { $result[$key] = $data[$key]; } break; case is_array($field): if (is_numeric($key)) { foreach ($data as $val) { $result[] = make_array_by_fields($val, $field); } } else { $result[$key] = make_array_by_fields($data[$key], $field); } break; default : if (is_string($key)) { $result[$key] = $data[$field]; } else { $result[$field] = $data[$field]; } break; } } return $result; } function isCustomBarcode($factory_id){ if(!empty($factory_id)){ return M('company_factory')->where('factory_id='.$factory_id)->field('is_custom_barcode')->find(); } } function parse_xml_data($data, $fields, &$result){ if (!is_array($data) || empty($data)) { return $data; } foreach ($fields as $field => $value) { if (is_numeric($field)) { $field = $value; $value = array(); } elseif($value === false) { $value = array( 'field_required' => false, ); } elseif (is_string($value)) { $value = array( 'field_name' => $value, ); } $key = $value['field_name'] ? $value['field_name'] : $field; if (empty($value['field_type']) && $value['fields']){ $value['field_type'] = 'array'; } if (!array_key_exists($field, $data) && array_key_exists('field_value', $value)) { $value['field_type'] = 'default'; $value['field_required'] = true; } if (array_key_exists($field, $data) || $value['field_required'] !== false) { switch ($value['field_type']) { case 'default': $result[$key] = $value['field_value']; break; case 'extend': $result[$key] = array(); if ($value['field']) { parse_xml_data($data[$value['field']], $value['fields'], $result[$key]); } else { parse_xml_data($data, $value['fields'], $result[$key]); } break; case 'array': if (!empty($data[$field])) { $result[$key] = array(); parse_xml_data($data[$field], $value['fields'], $result[$key]); } break; case 'children': if (!isset($data[$field][0])) { $data[$field] = array($data[$field]); } foreach ((array)$data[$field] as $val) { if (is_array($val)) { $rs = array(); parse_xml_data($val, $value['fields'], $rs); } else { $rs = $val; } if (!is_null($rs)) { $result[] = $rs; } } break; case 'float': $result[$key] = floatval($data[$field]); break; case 'int': $result[$key] = intval($data[$field]); break; case 'date': $result[$key] = trim($data[$field]); break; case 'string': default : $result[$key] = trim($data[$field]); break; } if (!in_array($value['field_type'], array('children')) && $value['function'] && function_exists($value['function'])) { $params = array_key_exists('params', $value) ? (is_array($value['params']) ? $value['params'] : array($value['params'])) : array(); array_unshift($params, $result[$key]); $result[$key] = call_user_func_array($value['function'], $params); } } } } function make_xml_data($data, $fields, &$result){ if (!is_array($data) || empty($data)) { $result = array(); return; } foreach ($fields as $field => $value) { if (is_numeric($field)) { $field = $value; $value = array(); } elseif($value === false) { $value = array( 'field_required' => false, ); } elseif (is_string($value)) { $value = array( 'field_name' => $value, ); } $key = $value['field_name'] ? $value['field_name'] : $field; if (empty($value['field_type'])){ if ($value['field_children']) { $value['field_type'] = 'parent'; } elseif ($value['fields']) { $value['field_type'] = 'array'; } } if (!array_key_exists($key, $data) && array_key_exists('field_value', $value)) { $value['field_type'] = 'default'; $value['field_required'] = true; } if (array_key_exists($key, $data) || $value['field_required'] !== false) { switch ($value['field_type']) { case 'default': $result[$field] = $value['field_value']; break; case 'array': if (!empty($data[$key])) { make_xml_data($data[$key], $value['fields'], $result[$field]); } break; case 'parent': foreach ($data[$key] as $val) { if (is_array($val)) { $rs = array(); make_xml_data($val, $value['fields'], $rs); } else { $rs = $val; } $result[$field][$value['field_children']][] = $rs; } break; default : $result[$field] = $data[$key]; break; } if (!in_array($value['field_type'], array('parent')) && $value['function'] && function_exists($value['function'])) { $params = array_key_exists('params', $value) ? (is_array($value['params']) ? $value['params'] : array($value['params'])) : array(); array_unshift($params, $result[$field]); $result[$field] = call_user_func_array($value['function'], $params); } } } } function cainiao_load_file(){ $config_file = array('action_config', 'fields_config', 'extendDd'); foreach ($config_file as $file_name) { $file_path = THINK_PATH . 'CaiNiao/' . $file_name . '.php'; if(is_file($file_path)){ C(include $file_path); } } $function_file = array('functions', 'functions_extend'); foreach ($function_file as $file_name) { $file_path = THINK_PATH . 'CaiNiao/' . $file_name . '.php'; if(is_file($file_path)){ require_cache($file_path); } } } function cainiao_get_data_digest($logistics_interface, $sign_key = null, $charset = ''){ $key = is_null($sign_key) ? (IS_4PX === true ? C('4PX_SIGN_KEY') : C('CAINIAO_SIGN_KEY')) : $sign_key; $content = $charset ? iconv ('UTF-8', $charset, $logistics_interface . $key) : $logistics_interface . $key; $md5bin = md5bin($content); return base64_encode($md5bin); } function md5bin($string) { $md5 = md5($string); $ret = ''; for ($i = 0; $i < 32; $i += 2){ $ret .= chr(hexdec($md5{$i + 1}) + hexdec($md5{$i}) * 16); } return $ret; } function cainiao_get_xml_file_name($request_id, $request_time, $msg_type, $is_request = true, $dir = 'CaiNiaoXml'){ $path = DATA_PATH . $dir . '/'.date('Ymd', strtotime($request_time)) . '/' . $msg_type . '/'; mk_dir($path); @chmod($path, 0777); return $path . ($request_id ? $request_id : 'fail') . ($is_request ? '_request' : '_return') . '.xml'; } function cainiao_save_xml($request_id, $xml, $request_time, $msg_type, $is_request = true, $dir = 'CaiNiaoXml'){ $filename = cainiao_get_xml_file_name($request_id, $request_time, $msg_type, $is_request, $dir); return file_put_contents($filename, $xml, FILE_APPEND); } function cainiao_get_xml($request_id, $request_time, $msg_type, $is_request = true, $dir = 'CaiNiaoXml'){ if ($request_id <= 0) { return ''; } $filename = cainiao_get_xml_file_name($request_id, $request_time, $msg_type, $is_request, $dir); return file_get_contents($filename); } function cainiao_make_request_xml($data){ $eventHeader = array( 'eventType' => $data['eventType'], 'eventTime' => $data['eventTime'], 'eventSource' => $data['eventSource'], 'eventTarget' => $data['eventTarget'], ); $logisticsDetail = cainiao_make_request_xml_logisticsdetail($data); $logisticsDetails = array( 'logisticsDetail' => $logisticsDetail, ); $eventBody = array( 'logisticsDetails' => $logisticsDetails, ); $logisticsEvent = array( 'eventHeader' => $eventHeader, 'eventBody' => $eventBody, ); $respnseXmlData = array( 'logisticsEvent' => $logisticsEvent, ); import('ORG.Util.Array2XML'); $xml = Array2XML::createXML('request', $respnseXmlData); return $xml->saveXML(); } function cainiao_make_request_xml_logisticsdetail($data) { $config_file = array('request_fields_config', 'extendDd'); foreach ($config_file as $file_name) { $file_path = THINK_PATH . 'CaiNiao/' . $file_name . '.php'; if(is_file($file_path)){ C(include $file_path); } } $request_fields = C('CAINIAO_REQUEST_FIELDS.' . $data['eventType']); $logisticsdetail = make_array_by_fields($data, $request_fields); return $logisticsdetail; } function cainiao_add_request($data){ $data['module'] = $data['module'] ? $data['module'] : MODULE_NAME; $data['action'] = $data['action'] ? $data['action'] : ACTION_NAME; $data['factory_id'] = $data['factory_id'] ? $data['factory_id'] : C('CAINIAO_FACTORY_ID'); $data['msg_type'] = $data['eventType'] = $data['msg_type'] ? $data['msg_type'] : $data['eventType']; $data['eventSource'] = $data['logistic_provider_id'] = $data['eventSource'] ? $data['eventSource'] : C('TRAN_STORE_CODE'); $data['eventTarget'] = $data['eventTarget'] ? $data['eventTarget'] : C('CAINIAO_NO'); $data['eventTime'] = $data['eventTime'] ? $data['eventTime'] : date('Y-m-d H:i:s'); $cainiao_log = array( 'module' => $data['module'], 'action' => $data['action'], 'factory_id' => $data['factory_id'], 'logistic_provider_id' => $data['eventSource'], 'msg_type' => $data['msg_type'], 'eventType' => $data['eventType'], 'eventTime' => $data['eventTime'], 'eventSource' => $data['eventSource'], 'eventTarget' => $data['eventTarget'], 'logisticsOrderCode' => $data['logisticsOrderCode'], 'success' => $data['result']['success'], ); $request_id = M('CaiNiaoLog')->add($cainiao_log); $xml = cainiao_make_request_xml($data); cainiao_save_xml($request_id, $xml, $data['eventTime'], $data['msg_type']); return $request_id; } function cainiao_return_sale_order_id($return_sale_order_id = 0, $return_logistics_no = ''){ static $ids = array(); $where = cainiao_return_sale_order_where(); if ($return_sale_order_id > 0) { if (isset($ids[$return_sale_order_id])) { return $ids[$return_sale_order_id]; } $where['detail.return_sale_order_id'] = $return_sale_order_id; } elseif (!empty($return_logistics_no)) { $where['main.return_logistics_no'] = $return_logistics_no; } else { return 0; } $join = '__RETURN_SALE_ORDER__ main on main.id=detail.return_sale_order_id'; $id = M('ReturnSaleOrderDetail')->alias('detail')->join($join)->where($where)->getField('return_sale_order_id'); if ($return_sale_order_id > 0) { $ids[$return_sale_order_id] = $id; } return $id; } function cainiao_get_need_request_where () { $where = array( 'request_status' => array('in', C('CAINIAO_ALLOW_REQUEST_STATUS')), ); return $where; } function cainiao_return_sale_order_where($main_prefix = 'main', $detail_prefix = 'detail', $return_string = false){ if ($return_string) { $where = $main_prefix . '.factory_id=' . C('CAINIAO_FACTORY_ID') . ' and ' . $detail_prefix . '.warehouse_id=' . C('EXPRESS_ES_WAREHOUSE_ID') . ' and ' . $main_prefix . '.is_related_sale_order<>' . C('IS_RELATED_SALE_ORDER'); } else { $where = array( $main_prefix . '.factory_id' => C('CAINIAO_FACTORY_ID'), $detail_prefix . '.warehouse_id' => C('EXPRESS_ES_WAREHOUSE_ID'), $main_prefix . '.is_related_sale_order' => array('neq', C('IS_RELATED_SALE_ORDER')), ); } return $where; } function cainiao_return_sale_order($params){ return $params['factory_id'] == C('CAINIAO_FACTORY_ID') && $params['warehouse_id'] == C('EXPRESS_ES_WAREHOUSE_ID') && $params['is_related_sale_order'] != C('IS_RELATED_SALE_ORDER'); } function cainiao_request_success() { return array(CAINIAO_REQUEST_STATUS_SUCCESS, CAINIAO_REQUEST_STATUS_RETRY_SUCCEEDS); } function cainiao_request_not_abandon_count($msg_type, $return_logistics_no, $success = 'true'){ return cainiao_request_count($msg_type, $return_logistics_no, $success, array('neq', CAINIAO_REQUEST_STATUS_ABANDON)); } function cainiao_request_count($msg_type, $return_logistics_no, $success = 'true', $request_status = null){ $where = array( 'msg_type' => $msg_type, 'logisticsOrderCode' => $return_logistics_no, ); if (!empty($success)) { $where['success'] = $success; } if (!empty($request_status) || $request_status === 0) { $where['request_status'] = is_array($request_status) && is_numeric(reset($request_status)) ? array('in', $request_status) : $request_status; } $count = (int)M('CaiNiaoLog')->where($where)->count(); return $count; } function createBarcodeImg($name,$path,$barcode_config=array(),$hri=array(),$err_return_type = 1){ if (!is_array($name)) { $name = array( 'name' => strval($name), 'code' => strval($name), ); } vendor('Barcode.BCGFontFile'); vendor('Barcode.BCGColor'); vendor('Barcode.BCGDrawing'); $img_type = C('BARCODE_PC_TYPE') ? C('BARCODE_PC_TYPE') : 'gif'; $code_type = C('BARCODE_CODE_TYPE') ? C('BARCODE_CODE_TYPE') : 'code128'; $class = 'BCG'.$code_type; vendor('Barcode.'.$class,'','.barcode.php'); $filename = $path . '/' . $name['name'] . '.' . $img_type; $default_config = array( 'w' => 150, 'h' => 80, 'thickness' => 50, 'padding' => 1, 'scale' => 1, 'fontSize' => 8, 'spacing' => 12, 'offsetY' => 10, ); if (count($barcode_config)){ $default_config = array_merge($default_config,$barcode_config); } extract($default_config); $color_black = new BCGColor(0, 0, 0); $color_white = new BCGColor(255, 255, 255); $font_url = APP_FONTS_PATH . 'Arial.ttf'; $font = new BCGFontFile($font_url, $fontSize); if (mk_dir($path) && @is_writable($path)) { try{ $barcode = new $class(); $barcode->setScale($scale); $barcode->setThickness($thickness); $barcode->setPadding($padding); $barcode->setForegroundColor($color_black); $barcode->setBackgroundColor($color_white); $barcode->setFont($font); $barcode->parse($name['code']); if (is_array($hri)) { $hri = implode("\n", $hri); } $hri = mb_convert_encoding($hri, "html-entities", "utf-8"); $hri = autoWrap($fontSize, 0, $font_url, $hri, max($w-20,0)); $barcode->clearLabels(); $i = 0; $label = new BCGLabel($hri,$font); $label->setSpacing($spacing*$i+2); $barcode->addLabel($label); unset($label); $i++; $drawing = new BCGDrawing($filename, $color_white); $drawing->setDPI(72); $drawing->setBarcode($barcode); $drawing->drawMyBarcode($w, $h, $offsetY); switch ($img_type){ case 'png': $ext = BCGDrawing::IMG_FORMAT_PNG; break; case 'jpg': $ext = BCGDrawing::IMG_FORMAT_JPEG; break; case 'bmp': $ext = BCGDrawing::IMG_FORMAT_WBMP; break; default: $ext = BCGDrawing::IMG_FORMAT_GIF; break; } $drawing->finish($ext); } catch (Exception $ex) { if($err_return_type == 1){ throw_json(L('incorrect_barcode')); } return false; } } else { if($err_return_type == 1){ throw_json(L('dir_right_error')); } return false; } } function ValidateDate($date, $format = 'Y-m-d H:i:s'){ $version = explode('.', phpversion()); if (((int) $version[0] >= 5 && (int) $version[1] >= 2 && (int) $version[2] > 17)) { $d = DateTime::createFromFormat($format, $date); } else { $d = new DateTime(date($format, strtotime($date))); } return $d && strtotime($d->format($format)) == strtotime($d->format($format)); } function checkdateDate($date,$is_time=false){ $date = trim($date); $is_time_str = $is_time ? '\s+\d{1,2}:\d{1,2}:\d{1,2}' : ''; if(preg_match("/^\d{4}-\d{1,2}-\d{1,2}".$is_time_str."$/",$date) || preg_match("/^\d{1,2}\/\d{1,2}\/\d{4}".$is_time_str."$/",$date)){ return true; } return FALSE; } function getProductBarcodeInfo($product_id){ if(empty($product_id)){ return ''; } if(!is_array($product_id)){ $product_id = explode(',', $product_id); } foreach($product_id as $p_id){ if($p_id>0){ $product_id_arr[$p_id] = $p_id; } } $product_info = M('product') ->alias('p') ->field('p.id as id,p.product_no as product_no,p.product_name as product_name,c.product_barcode_config as product_barcode_config,p.custom_barcode as custom_barcode') ->join('__COMPANY__ c on c.id=p.factory_id') ->where('p.id in ('.implode(',', $product_id_arr).')') ->getField('id,id,product_no,product_name,product_barcode_config,custom_barcode'); foreach($product_info as &$p_info){ $product_barcode_config = empty($p_info['product_barcode_config']) ? $p_info['product_barcode_config'] :explode(',', $p_info['product_barcode_config']); $hri = array( 'code' => $p_info['custom_barcode'], 'product_name' => '   ' . $p_info['product_name'], 'sku' => $p_info['product_no'], ); if ($product_barcode_config) { $product_barcode_config_filter = array(); if (in_array('product_name', $product_barcode_config)) { $wrap = false; $product_barcode_config_filter[] = 'product_name'; } else { unset($hri['product_name']); } if (isset($hri['sku']) && in_array('made_in_china', $product_barcode_config)) { $hri['sku'] .= '   ' . L('made_in_china'); $product_barcode_config_filter[] = 'made_in_china'; } foreach ($product_barcode_config as $config) { if (!in_array($config, $product_barcode_config_filter)) { $hri[$config] = isset($product[$config]) ? $product[$config] : L($config); } } } else { unset($hri['product_name']); } $p_info['html']= '<span style="color:#000000;">'.implode('<br /></span><span style="color:#000000;">', $hri).'</span>'; } return $product_info; } function domesticShippingFee($warehouse_id,$transport_type,$review){ $where = array(); $where['transport_type'] = $transport_type; $where['warehouse_id'] = $warehouse_id; return (float)M('DomesticShippingFee')->alias('dsf')->join('left join __DOMESTIC_SHIPPING_FEE_DETAIL__ dsfd on dsf.id=dsfd.domestic_shipping_fee_id and weight_begin<='.$review.' and weight_end>='.$review)->where($where)->getField('price'); } function getCompanyFactory($factory_id,$field){ is_array($factory_id) && $factory_id = implode(',', $factory_id); if(!empty($factory_id)){ return M('CompanyFactory')->where('factory_id in ('.$factory_id.') and is_'.$field.'=1')->getField('factory_id,is_'.$field.' as is_charge,('.$field.'_percentage/100) as percentage'); } return ''; } function getInstockBoxInfo($box_id){ if(empty($box_id)){ return ''; } if(!is_array($box_id)){ $box_id = explode(',', $box_id); } foreach($box_id as $b_id){ if($b_id>0){ $box_id_arr[$b_id] = $b_id; } } $rs = M('InstockBox')->field('*,detail.id as box_id,detail.cube_long*detail.cube_wide*detail.cube_high as cube,detail.check_long*detail.check_wide*detail.check_high as check_cube')->alias('detail')->join('__INSTOCK__ main on main.id=detail.instock_id')->where('detail.id in ('. implode(',', $box_id).')')->select(); $box_info = M('instock_detail') ->alias('d') ->join('left join product p on d.product_id=p.id') ->where('box_id in ('.implode(',', $box_id_arr).')') ->field('d.box_id,p.product_no') ->select(); foreach($rs as $box_val){ $box_val = _formatWeightCube(_formatArray($box_val)); if(is_array($box_val) && $box_val['box_id'] > 0){ $box_info_arr[$box_val['box_id']][] = $box_val['box_id']; $box_info_arr[$box_val['box_id']][] = $box_val['instock_no']; $box_info_arr[$box_val['box_id']][] = 'BOX_NO: ' . $box_val['box_no']; $box_info_arr[$box_val['box_id']][] = 'CLIENT_ID: ' . $box_val['factory_id']; $box_info_arr[$box_val['box_id']][] = 'WEIGHT: ' . $box_val['s_unit_weight']; $box_info_arr[$box_val['box_id']][] = array_shift(explode('=', $box_val['s_cube'] . L('volume_size_unit'))); $box_info_arr[$box_val['box_id']][] = SOnly('country', getWarehouseCountry($box_val['warehouse_id']),'abbr_district_name'); foreach($box_info as $info_val){ if($box_val['box_id'] == $info_val['box_id']){ $box_info_arr[$box_val['box_id']][] = $info_val['product_no']; } if(count($box_info_arr[$box_val['box_id']]) == 12){ break; } } } } foreach($box_info_arr as $key=>$p_info){ $box_info_arr[$key]['html']= '<span style="color:#000000;">'.implode('<br /></span><span style="color:#000000;">', $p_info).'</span>'; } return $box_info_arr; } function number_to_code($number, $codes = 'abcdefghjkmnpqrstuvwxyz23456789ABCDEFGHJKMNPQRSTUVWXYZ'){ $length = strlen($codes); $out = ''; while ($number > $length - 1) { $key = $number % $length; $number = floor($number / $length) - 1; $out = $codes{$key}.$out; } return $codes{$number}.$out; } function code_to_number($code, $codes = 'abcdefghjkmnpqrstuvwxyz23456789ABCDEFGHJKMNPQRSTUVWXYZ'){ $length = strlen($codes); $num = 0; $i = strlen($code); for($j = 0; $j < strlen($code); $j++){ $i--; $char = $code{$j}; $pos = strpos($codes,$char); $num += (pow($length, $i) * ($pos + 1)); } $num--; return $num; } function showImg($id) { $id = intval($id); if($id<=0) return ; $rs = M('gallery')->find($id); gallery_permission_validation_factory($rs); $file_name = isset($_GET['view']) ? $rs['file_url'] : 'small_'.$rs['file_url']; $url = getUploadPath($rs['relation_type']).$file_name; $file = fopen($url,'r'); if (empty($file)) { exit;} Header('Content-type: image/*'); Header('Accept-Ranges: bytes'); Header('Accept-Length: '.filesize($url)); while (!feof($file)){echo fread($file, 8192);} fclose($file); exit(); } function getTrueModule(){ switch (MODULE_NAME) { case 'Api': $_module = API_MODULE_NAME; break; case 'CaiNiao': $_module = CAINIAO_MODULE_NAME; break; default : $_module = MODULE_NAME; break; } return $_module; } function getTrueAction(){ switch (getTrueModule()) { case 'Api': $_action = API_ACTION_NAME; break; case 'CaiNiao': $_action = CAINIAO_ACTION_NAME; break; default : $_action = ACTION_NAME; break; } return $_action; } function array_dimension_reduce($array){ $new_array = array(); foreach ($array as $arr) { foreach ($arr as $val) { $new_array[] = $val; } } return $new_array; } function get_warehouse_account_start_date($factory_id, $warehouse_id, $warehouse_fee_start_date){ if ($factory_id > 0 && $warehouse_id > 0) { $where['factory_id'] = $factory_id; $where['warehouse_id'] = $warehouse_id; $last_account_date = M('warehouse_account')->where($where)->order('account_end_date desc')->getField('account_end_date'); $account_start_date = max($warehouse_fee_start_date, (empty($last_account_date) ? '0000-00-00' : $last_account_date)); return $account_start_date; } else { return FALSE; } } function get_sale_order_barcode_info($data, $is_pdf = false){ if ($is_pdf !== true && !empty($data['Labelurl'])) { if ($data['track_no_update_tips'] != 0) { M('SaleOrder')->save(array('id' => $data['id'], 'track_no_update_tips' => 0)); } if ($data['company_id'] == C('EXPRESS_ES_CORREOS_ID')) { $data['Labelurl'] = WAY_BILL_PATH . $data['Labelurl']; } return array('pdf' => $data['Labelurl']); } if($data['company_id'] == C('EXPRESS_IT-NEXIVE_ID')){ $PrintHtml = 'getPrintHtmlITN'; $size = array('width'=>'94mm','height'=>'65mm','is_it_nexive'=>true); }elseif($data['shipping_type'] == C('SHIPPING_TYPE_SURFACE')) { $PrintHtml = 'getPrintHtml'; $size = array('width'=>'56mm','height'=>'30mm'); }else{ $PrintHtml = 'getPrintHtmlDefault'; $size = array('width'=>'100mm','height'=>'65mm'); } $htmlInfo = A('SaleOrder')->$PrintHtml($data,$is_pdf); return array('size'=>$size,'info'=>$htmlInfo); } function data_permission_validation($data, $field = ''){ $user = getUser(); if ($user['company_id'] <= 0 || !in_array($user['role_type'], array(C('SELLER_ROLE_TYPE'), C('WAREHOUSE_ROLE_TYPE')))) { return true; } if (empty($field)) { $field = $user['role_type'] == C('WAREHOUSE_ROLE_TYPE') ? 'warehouse_id' : 'factory_id'; } elseif ($field == 'comp_id' && $user['role_type'] == C('WAREHOUSE_ROLE_TYPE')) { $field = 'warehouse_id'; } if ($data[$field] > 0 && $user['company_id'] != $data[$field]) { return false; } return true; } function gallery_permission_validation_factory($gallery, $exit = true){ if (getUser('role_type') != C('SELLER_ROLE_TYPE')){ return true; } switch ($gallery['relation_type']) { case 1: $result = data_permission_validation(M('Product')->find($gallery['relation_id'])); break; case 3: case 19: $result = data_permission_validation(M('SaleOrder')->find($gallery['relation_id'])); break; case 22: $result = data_permission_validation(M('ReturnSaleOrder')->find($gallery['relation_id'])); break; case 23: case 24: case 25: $result = data_permission_validation(M('QuestionOrder')->find($gallery['relation_id'])); break; case 27: $return_sale_order_id = M('ReturnSaleOrderStorage')->where(array('id' => $gallery['relation_id']))->getField('return_sale_order_id'); $result = data_permission_validation(M('ReturnSaleOrder')->find($return_sale_order_id)); break; case 29: $result = message_permission_validation(M('Message')->find($gallery['relation_id'])); break; case 30: $result = getUser('company_id') == $gallery['relation_id']; break; case 2: case 10: case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 20: case 21: case 26: case 28: case 31: $result = false; default: $result = true; break; } if ($result === false) { if ($exit === false) { return false; } exit; } return true; } function message_permission_validation($message){ $user_type = getUser('user_type'); if ($user_type > 0) { $message_user_type = explode(',', $message['user_type']); if (!in_array($user_type, $message_user_type)) { return false; } } return true; } function excel_import_filter($value){ return str_replace(array('<br />', '<br/>', '<br>', "\n"), '', trim($value)); } function valid_date($date){ $time = strtotime($date); return $time !== false && $time != -1 ? true : false; } function emoji_unified_to_html($text){ $unified_to_html = array( "\xc2\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emojia9\x22></span></span>", "\xc2\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emojiae\x22></span></span>", "\xe2\x80\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji203c\x22></span></span>", "\xe2\x81\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2049\x22></span></span>", "\xe2\x84\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2122\x22></span></span>", "\xe2\x84\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2139\x22></span></span>", "\xe2\x86\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2194\x22></span></span>", "\xe2\x86\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2195\x22></span></span>", "\xe2\x86\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2196\x22></span></span>", "\xe2\x86\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2197\x22></span></span>", "\xe2\x86\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2198\x22></span></span>", "\xe2\x86\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2199\x22></span></span>", "\xe2\x86\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji21a9\x22></span></span>", "\xe2\x86\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji21aa\x22></span></span>", "\xe2\x8c\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji231a\x22></span></span>", "\xe2\x8c\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji231b\x22></span></span>", "\xe2\x8c\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2328\x22></span></span>", "\xe2\x8f\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23e9\x22></span></span>", "\xe2\x8f\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23ea\x22></span></span>", "\xe2\x8f\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23eb\x22></span></span>", "\xe2\x8f\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23ec\x22></span></span>", "\xe2\x8f\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23ed\x22></span></span>", "\xe2\x8f\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23ee\x22></span></span>", "\xe2\x8f\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23ef\x22></span></span>", "\xe2\x8f\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f0\x22></span></span>", "\xe2\x8f\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f1\x22></span></span>", "\xe2\x8f\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f2\x22></span></span>", "\xe2\x8f\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f3\x22></span></span>", "\xe2\x8f\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f8\x22></span></span>", "\xe2\x8f\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23f9\x22></span></span>", "\xe2\x8f\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji23fa\x22></span></span>", "\xe2\x93\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji24c2\x22></span></span>", "\xe2\x96\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25aa\x22></span></span>", "\xe2\x96\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25ab\x22></span></span>", "\xe2\x96\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25b6\x22></span></span>", "\xe2\x97\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25c0\x22></span></span>", "\xe2\x97\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25fb\x22></span></span>", "\xe2\x97\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25fc\x22></span></span>", "\xe2\x97\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25fd\x22></span></span>", "\xe2\x97\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji25fe\x22></span></span>", "\xe2\x98\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2600\x22></span></span>", "\xe2\x98\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2601\x22></span></span>", "\xe2\x98\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2602\x22></span></span>", "\xe2\x98\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2603\x22></span></span>", "\xe2\x98\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2604\x22></span></span>", "\xe2\x98\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji260e\x22></span></span>", "\xe2\x98\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2611\x22></span></span>", "\xe2\x98\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2614\x22></span></span>", "\xe2\x98\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2615\x22></span></span>", "\xe2\x98\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2618\x22></span></span>", "\xe2\x98\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji261d\x22></span></span>", "\xe2\x98\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2620\x22></span></span>", "\xe2\x98\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2622\x22></span></span>", "\xe2\x98\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2623\x22></span></span>", "\xe2\x98\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2626\x22></span></span>", "\xe2\x98\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji262a\x22></span></span>", "\xe2\x98\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji262e\x22></span></span>", "\xe2\x98\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji262f\x22></span></span>", "\xe2\x98\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2638\x22></span></span>", "\xe2\x98\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2639\x22></span></span>", "\xe2\x98\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji263a\x22></span></span>", "\xe2\x99\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2648\x22></span></span>", "\xe2\x99\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2649\x22></span></span>", "\xe2\x99\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264a\x22></span></span>", "\xe2\x99\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264b\x22></span></span>", "\xe2\x99\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264c\x22></span></span>", "\xe2\x99\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264d\x22></span></span>", "\xe2\x99\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264e\x22></span></span>", "\xe2\x99\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji264f\x22></span></span>", "\xe2\x99\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2650\x22></span></span>", "\xe2\x99\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2651\x22></span></span>", "\xe2\x99\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2652\x22></span></span>", "\xe2\x99\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2653\x22></span></span>", "\xe2\x99\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2660\x22></span></span>", "\xe2\x99\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2663\x22></span></span>", "\xe2\x99\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2665\x22></span></span>", "\xe2\x99\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2666\x22></span></span>", "\xe2\x99\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2668\x22></span></span>", "\xe2\x99\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji267b\x22></span></span>", "\xe2\x99\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji267f\x22></span></span>", "\xe2\x9a\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2692\x22></span></span>", "\xe2\x9a\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2693\x22></span></span>", "\xe2\x9a\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2694\x22></span></span>", "\xe2\x9a\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2696\x22></span></span>", "\xe2\x9a\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2697\x22></span></span>", "\xe2\x9a\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2699\x22></span></span>", "\xe2\x9a\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji269b\x22></span></span>", "\xe2\x9a\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji269c\x22></span></span>", "\xe2\x9a\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26a0\x22></span></span>", "\xe2\x9a\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26a1\x22></span></span>", "\xe2\x9a\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26aa\x22></span></span>", "\xe2\x9a\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26ab\x22></span></span>", "\xe2\x9a\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26b0\x22></span></span>", "\xe2\x9a\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26b1\x22></span></span>", "\xe2\x9a\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26bd\x22></span></span>", "\xe2\x9a\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26be\x22></span></span>", "\xe2\x9b\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26c4\x22></span></span>", "\xe2\x9b\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26c5\x22></span></span>", "\xe2\x9b\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26c8\x22></span></span>", "\xe2\x9b\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26ce\x22></span></span>", "\xe2\x9b\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26cf\x22></span></span>", "\xe2\x9b\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26d1\x22></span></span>", "\xe2\x9b\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26d3\x22></span></span>", "\xe2\x9b\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26d4\x22></span></span>", "\xe2\x9b\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26e9\x22></span></span>", "\xe2\x9b\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26ea\x22></span></span>", "\xe2\x9b\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f0\x22></span></span>", "\xe2\x9b\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f1\x22></span></span>", "\xe2\x9b\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f2\x22></span></span>", "\xe2\x9b\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f3\x22></span></span>", "\xe2\x9b\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f4\x22></span></span>", "\xe2\x9b\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f5\x22></span></span>", "\xe2\x9b\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f7\x22></span></span>", "\xe2\x9b\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f8\x22></span></span>", "\xe2\x9b\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26f9\x22></span></span>", "\xe2\x9b\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26fa\x22></span></span>", "\xe2\x9b\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji26fd\x22></span></span>", "\xe2\x9c\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2702\x22></span></span>", "\xe2\x9c\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2705\x22></span></span>", "\xe2\x9c\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2708\x22></span></span>", "\xe2\x9c\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2709\x22></span></span>", "\xe2\x9c\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji270a\x22></span></span>", "\xe2\x9c\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji270b\x22></span></span>", "\xe2\x9c\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji270c\x22></span></span>", "\xe2\x9c\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji270d\x22></span></span>", "\xe2\x9c\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji270f\x22></span></span>", "\xe2\x9c\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2712\x22></span></span>", "\xe2\x9c\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2714\x22></span></span>", "\xe2\x9c\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2716\x22></span></span>", "\xe2\x9c\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji271d\x22></span></span>", "\xe2\x9c\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2721\x22></span></span>", "\xe2\x9c\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2728\x22></span></span>", "\xe2\x9c\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2733\x22></span></span>", "\xe2\x9c\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2734\x22></span></span>", "\xe2\x9d\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2744\x22></span></span>", "\xe2\x9d\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2747\x22></span></span>", "\xe2\x9d\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji274c\x22></span></span>", "\xe2\x9d\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji274e\x22></span></span>", "\xe2\x9d\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2753\x22></span></span>", "\xe2\x9d\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2754\x22></span></span>", "\xe2\x9d\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2755\x22></span></span>", "\xe2\x9d\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2757\x22></span></span>", "\xe2\x9d\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2763\x22></span></span>", "\xe2\x9d\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2764\x22></span></span>", "\xe2\x9e\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2795\x22></span></span>", "\xe2\x9e\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2796\x22></span></span>", "\xe2\x9e\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2797\x22></span></span>", "\xe2\x9e\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji27a1\x22></span></span>", "\xe2\x9e\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji27b0\x22></span></span>", "\xe2\x9e\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji27bf\x22></span></span>", "\xe2\xa4\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2934\x22></span></span>", "\xe2\xa4\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2935\x22></span></span>", "\xe2\xac\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b05\x22></span></span>", "\xe2\xac\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b06\x22></span></span>", "\xe2\xac\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b07\x22></span></span>", "\xe2\xac\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b1b\x22></span></span>", "\xe2\xac\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b1c\x22></span></span>", "\xe2\xad\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b50\x22></span></span>", "\xe2\xad\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2b55\x22></span></span>", "\xe3\x80\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3030\x22></span></span>", "\xe3\x80\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji303d\x22></span></span>", "\xe3\x8a\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3297\x22></span></span>", "\xe3\x8a\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3299\x22></span></span>", "\xf0\x9f\x80\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f004\x22></span></span>", "\xf0\x9f\x83\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f0cf\x22></span></span>", "\xf0\x9f\x85\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f170\x22></span></span>", "\xf0\x9f\x85\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f171\x22></span></span>", "\xf0\x9f\x85\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f17e\x22></span></span>", "\xf0\x9f\x85\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f17f\x22></span></span>", "\xf0\x9f\x86\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f18e\x22></span></span>", "\xf0\x9f\x86\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f191\x22></span></span>", "\xf0\x9f\x86\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f192\x22></span></span>", "\xf0\x9f\x86\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f193\x22></span></span>", "\xf0\x9f\x86\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f194\x22></span></span>", "\xf0\x9f\x86\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f195\x22></span></span>", "\xf0\x9f\x86\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f196\x22></span></span>", "\xf0\x9f\x86\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f197\x22></span></span>", "\xf0\x9f\x86\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f198\x22></span></span>", "\xf0\x9f\x86\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f199\x22></span></span>", "\xf0\x9f\x86\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f19a\x22></span></span>", "\xf0\x9f\x88\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f201\x22></span></span>", "\xf0\x9f\x88\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f202\x22></span></span>", "\xf0\x9f\x88\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f21a\x22></span></span>", "\xf0\x9f\x88\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f22f\x22></span></span>", "\xf0\x9f\x88\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f232\x22></span></span>", "\xf0\x9f\x88\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f233\x22></span></span>", "\xf0\x9f\x88\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f234\x22></span></span>", "\xf0\x9f\x88\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f235\x22></span></span>", "\xf0\x9f\x88\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f236\x22></span></span>", "\xf0\x9f\x88\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f237\x22></span></span>", "\xf0\x9f\x88\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f238\x22></span></span>", "\xf0\x9f\x88\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f239\x22></span></span>", "\xf0\x9f\x88\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f23a\x22></span></span>", "\xf0\x9f\x89\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f250\x22></span></span>", "\xf0\x9f\x89\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f251\x22></span></span>", "\xf0\x9f\x8c\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f300\x22></span></span>", "\xf0\x9f\x8c\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f301\x22></span></span>", "\xf0\x9f\x8c\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f302\x22></span></span>", "\xf0\x9f\x8c\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f303\x22></span></span>", "\xf0\x9f\x8c\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f304\x22></span></span>", "\xf0\x9f\x8c\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f305\x22></span></span>", "\xf0\x9f\x8c\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f306\x22></span></span>", "\xf0\x9f\x8c\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f307\x22></span></span>", "\xf0\x9f\x8c\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f308\x22></span></span>", "\xf0\x9f\x8c\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f309\x22></span></span>", "\xf0\x9f\x8c\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30a\x22></span></span>", "\xf0\x9f\x8c\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30b\x22></span></span>", "\xf0\x9f\x8c\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30c\x22></span></span>", "\xf0\x9f\x8c\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30d\x22></span></span>", "\xf0\x9f\x8c\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30e\x22></span></span>", "\xf0\x9f\x8c\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f30f\x22></span></span>", "\xf0\x9f\x8c\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f310\x22></span></span>", "\xf0\x9f\x8c\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f311\x22></span></span>", "\xf0\x9f\x8c\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f312\x22></span></span>", "\xf0\x9f\x8c\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f313\x22></span></span>", "\xf0\x9f\x8c\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f314\x22></span></span>", "\xf0\x9f\x8c\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f315\x22></span></span>", "\xf0\x9f\x8c\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f316\x22></span></span>", "\xf0\x9f\x8c\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f317\x22></span></span>", "\xf0\x9f\x8c\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f318\x22></span></span>", "\xf0\x9f\x8c\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f319\x22></span></span>", "\xf0\x9f\x8c\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31a\x22></span></span>", "\xf0\x9f\x8c\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31b\x22></span></span>", "\xf0\x9f\x8c\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31c\x22></span></span>", "\xf0\x9f\x8c\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31d\x22></span></span>", "\xf0\x9f\x8c\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31e\x22></span></span>", "\xf0\x9f\x8c\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f31f\x22></span></span>", "\xf0\x9f\x8c\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f320\x22></span></span>", "\xf0\x9f\x8c\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f321\x22></span></span>", "\xf0\x9f\x8c\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f324\x22></span></span>", "\xf0\x9f\x8c\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f325\x22></span></span>", "\xf0\x9f\x8c\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f326\x22></span></span>", "\xf0\x9f\x8c\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f327\x22></span></span>", "\xf0\x9f\x8c\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f328\x22></span></span>", "\xf0\x9f\x8c\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f329\x22></span></span>", "\xf0\x9f\x8c\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32a\x22></span></span>", "\xf0\x9f\x8c\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32b\x22></span></span>", "\xf0\x9f\x8c\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32c\x22></span></span>", "\xf0\x9f\x8c\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32d\x22></span></span>", "\xf0\x9f\x8c\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32e\x22></span></span>", "\xf0\x9f\x8c\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f32f\x22></span></span>", "\xf0\x9f\x8c\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f330\x22></span></span>", "\xf0\x9f\x8c\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f331\x22></span></span>", "\xf0\x9f\x8c\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f332\x22></span></span>", "\xf0\x9f\x8c\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f333\x22></span></span>", "\xf0\x9f\x8c\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f334\x22></span></span>", "\xf0\x9f\x8c\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f335\x22></span></span>", "\xf0\x9f\x8c\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f336\x22></span></span>", "\xf0\x9f\x8c\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f337\x22></span></span>", "\xf0\x9f\x8c\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f338\x22></span></span>", "\xf0\x9f\x8c\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f339\x22></span></span>", "\xf0\x9f\x8c\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33a\x22></span></span>", "\xf0\x9f\x8c\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33b\x22></span></span>", "\xf0\x9f\x8c\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33c\x22></span></span>", "\xf0\x9f\x8c\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33d\x22></span></span>", "\xf0\x9f\x8c\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33e\x22></span></span>", "\xf0\x9f\x8c\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f33f\x22></span></span>", "\xf0\x9f\x8d\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f340\x22></span></span>", "\xf0\x9f\x8d\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f341\x22></span></span>", "\xf0\x9f\x8d\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f342\x22></span></span>", "\xf0\x9f\x8d\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f343\x22></span></span>", "\xf0\x9f\x8d\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f344\x22></span></span>", "\xf0\x9f\x8d\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f345\x22></span></span>", "\xf0\x9f\x8d\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f346\x22></span></span>", "\xf0\x9f\x8d\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f347\x22></span></span>", "\xf0\x9f\x8d\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f348\x22></span></span>", "\xf0\x9f\x8d\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f349\x22></span></span>", "\xf0\x9f\x8d\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34a\x22></span></span>", "\xf0\x9f\x8d\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34b\x22></span></span>", "\xf0\x9f\x8d\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34c\x22></span></span>", "\xf0\x9f\x8d\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34d\x22></span></span>", "\xf0\x9f\x8d\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34e\x22></span></span>", "\xf0\x9f\x8d\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f34f\x22></span></span>", "\xf0\x9f\x8d\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f350\x22></span></span>", "\xf0\x9f\x8d\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f351\x22></span></span>", "\xf0\x9f\x8d\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f352\x22></span></span>", "\xf0\x9f\x8d\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f353\x22></span></span>", "\xf0\x9f\x8d\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f354\x22></span></span>", "\xf0\x9f\x8d\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f355\x22></span></span>", "\xf0\x9f\x8d\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f356\x22></span></span>", "\xf0\x9f\x8d\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f357\x22></span></span>", "\xf0\x9f\x8d\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f358\x22></span></span>", "\xf0\x9f\x8d\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f359\x22></span></span>", "\xf0\x9f\x8d\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35a\x22></span></span>", "\xf0\x9f\x8d\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35b\x22></span></span>", "\xf0\x9f\x8d\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35c\x22></span></span>", "\xf0\x9f\x8d\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35d\x22></span></span>", "\xf0\x9f\x8d\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35e\x22></span></span>", "\xf0\x9f\x8d\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f35f\x22></span></span>", "\xf0\x9f\x8d\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f360\x22></span></span>", "\xf0\x9f\x8d\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f361\x22></span></span>", "\xf0\x9f\x8d\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f362\x22></span></span>", "\xf0\x9f\x8d\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f363\x22></span></span>", "\xf0\x9f\x8d\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f364\x22></span></span>", "\xf0\x9f\x8d\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f365\x22></span></span>", "\xf0\x9f\x8d\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f366\x22></span></span>", "\xf0\x9f\x8d\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f367\x22></span></span>", "\xf0\x9f\x8d\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f368\x22></span></span>", "\xf0\x9f\x8d\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f369\x22></span></span>", "\xf0\x9f\x8d\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36a\x22></span></span>", "\xf0\x9f\x8d\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36b\x22></span></span>", "\xf0\x9f\x8d\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36c\x22></span></span>", "\xf0\x9f\x8d\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36d\x22></span></span>", "\xf0\x9f\x8d\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36e\x22></span></span>", "\xf0\x9f\x8d\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f36f\x22></span></span>", "\xf0\x9f\x8d\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f370\x22></span></span>", "\xf0\x9f\x8d\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f371\x22></span></span>", "\xf0\x9f\x8d\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f372\x22></span></span>", "\xf0\x9f\x8d\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f373\x22></span></span>", "\xf0\x9f\x8d\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f374\x22></span></span>", "\xf0\x9f\x8d\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f375\x22></span></span>", "\xf0\x9f\x8d\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f376\x22></span></span>", "\xf0\x9f\x8d\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f377\x22></span></span>", "\xf0\x9f\x8d\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f378\x22></span></span>", "\xf0\x9f\x8d\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f379\x22></span></span>", "\xf0\x9f\x8d\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37a\x22></span></span>", "\xf0\x9f\x8d\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37b\x22></span></span>", "\xf0\x9f\x8d\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37c\x22></span></span>", "\xf0\x9f\x8d\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37d\x22></span></span>", "\xf0\x9f\x8d\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37e\x22></span></span>", "\xf0\x9f\x8d\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f37f\x22></span></span>", "\xf0\x9f\x8e\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f380\x22></span></span>", "\xf0\x9f\x8e\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f381\x22></span></span>", "\xf0\x9f\x8e\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f382\x22></span></span>", "\xf0\x9f\x8e\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f383\x22></span></span>", "\xf0\x9f\x8e\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f384\x22></span></span>", "\xf0\x9f\x8e\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f385\x22></span></span>", "\xf0\x9f\x8e\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f386\x22></span></span>", "\xf0\x9f\x8e\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f387\x22></span></span>", "\xf0\x9f\x8e\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f388\x22></span></span>", "\xf0\x9f\x8e\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f389\x22></span></span>", "\xf0\x9f\x8e\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38a\x22></span></span>", "\xf0\x9f\x8e\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38b\x22></span></span>", "\xf0\x9f\x8e\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38c\x22></span></span>", "\xf0\x9f\x8e\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38d\x22></span></span>", "\xf0\x9f\x8e\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38e\x22></span></span>", "\xf0\x9f\x8e\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f38f\x22></span></span>", "\xf0\x9f\x8e\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f390\x22></span></span>", "\xf0\x9f\x8e\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f391\x22></span></span>", "\xf0\x9f\x8e\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f392\x22></span></span>", "\xf0\x9f\x8e\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f393\x22></span></span>", "\xf0\x9f\x8e\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f396\x22></span></span>", "\xf0\x9f\x8e\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f397\x22></span></span>", "\xf0\x9f\x8e\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f399\x22></span></span>", "\xf0\x9f\x8e\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f39a\x22></span></span>", "\xf0\x9f\x8e\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f39b\x22></span></span>", "\xf0\x9f\x8e\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f39e\x22></span></span>", "\xf0\x9f\x8e\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f39f\x22></span></span>", "\xf0\x9f\x8e\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a0\x22></span></span>", "\xf0\x9f\x8e\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a1\x22></span></span>", "\xf0\x9f\x8e\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a2\x22></span></span>", "\xf0\x9f\x8e\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a3\x22></span></span>", "\xf0\x9f\x8e\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a4\x22></span></span>", "\xf0\x9f\x8e\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a5\x22></span></span>", "\xf0\x9f\x8e\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a6\x22></span></span>", "\xf0\x9f\x8e\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a7\x22></span></span>", "\xf0\x9f\x8e\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a8\x22></span></span>", "\xf0\x9f\x8e\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3a9\x22></span></span>", "\xf0\x9f\x8e\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3aa\x22></span></span>", "\xf0\x9f\x8e\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ab\x22></span></span>", "\xf0\x9f\x8e\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ac\x22></span></span>", "\xf0\x9f\x8e\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ad\x22></span></span>", "\xf0\x9f\x8e\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ae\x22></span></span>", "\xf0\x9f\x8e\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3af\x22></span></span>", "\xf0\x9f\x8e\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b0\x22></span></span>", "\xf0\x9f\x8e\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b1\x22></span></span>", "\xf0\x9f\x8e\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b2\x22></span></span>", "\xf0\x9f\x8e\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b3\x22></span></span>", "\xf0\x9f\x8e\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b4\x22></span></span>", "\xf0\x9f\x8e\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b5\x22></span></span>", "\xf0\x9f\x8e\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b6\x22></span></span>", "\xf0\x9f\x8e\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b7\x22></span></span>", "\xf0\x9f\x8e\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b8\x22></span></span>", "\xf0\x9f\x8e\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3b9\x22></span></span>", "\xf0\x9f\x8e\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ba\x22></span></span>", "\xf0\x9f\x8e\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3bb\x22></span></span>", "\xf0\x9f\x8e\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3bc\x22></span></span>", "\xf0\x9f\x8e\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3bd\x22></span></span>", "\xf0\x9f\x8e\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3be\x22></span></span>", "\xf0\x9f\x8e\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3bf\x22></span></span>", "\xf0\x9f\x8f\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c0\x22></span></span>", "\xf0\x9f\x8f\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c1\x22></span></span>", "\xf0\x9f\x8f\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c2\x22></span></span>", "\xf0\x9f\x8f\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c3\x22></span></span>", "\xf0\x9f\x8f\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c4\x22></span></span>", "\xf0\x9f\x8f\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c5\x22></span></span>", "\xf0\x9f\x8f\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c6\x22></span></span>", "\xf0\x9f\x8f\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c7\x22></span></span>", "\xf0\x9f\x8f\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c8\x22></span></span>", "\xf0\x9f\x8f\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3c9\x22></span></span>", "\xf0\x9f\x8f\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ca\x22></span></span>", "\xf0\x9f\x8f\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3cb\x22></span></span>", "\xf0\x9f\x8f\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3cc\x22></span></span>", "\xf0\x9f\x8f\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3cd\x22></span></span>", "\xf0\x9f\x8f\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ce\x22></span></span>", "\xf0\x9f\x8f\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3cf\x22></span></span>", "\xf0\x9f\x8f\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d0\x22></span></span>", "\xf0\x9f\x8f\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d1\x22></span></span>", "\xf0\x9f\x8f\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d2\x22></span></span>", "\xf0\x9f\x8f\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d3\x22></span></span>", "\xf0\x9f\x8f\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d4\x22></span></span>", "\xf0\x9f\x8f\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d5\x22></span></span>", "\xf0\x9f\x8f\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d6\x22></span></span>", "\xf0\x9f\x8f\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d7\x22></span></span>", "\xf0\x9f\x8f\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d8\x22></span></span>", "\xf0\x9f\x8f\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3d9\x22></span></span>", "\xf0\x9f\x8f\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3da\x22></span></span>", "\xf0\x9f\x8f\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3db\x22></span></span>", "\xf0\x9f\x8f\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3dc\x22></span></span>", "\xf0\x9f\x8f\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3dd\x22></span></span>", "\xf0\x9f\x8f\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3de\x22></span></span>", "\xf0\x9f\x8f\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3df\x22></span></span>", "\xf0\x9f\x8f\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e0\x22></span></span>", "\xf0\x9f\x8f\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e1\x22></span></span>", "\xf0\x9f\x8f\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e2\x22></span></span>", "\xf0\x9f\x8f\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e3\x22></span></span>", "\xf0\x9f\x8f\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e4\x22></span></span>", "\xf0\x9f\x8f\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e5\x22></span></span>", "\xf0\x9f\x8f\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e6\x22></span></span>", "\xf0\x9f\x8f\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e7\x22></span></span>", "\xf0\x9f\x8f\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e8\x22></span></span>", "\xf0\x9f\x8f\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3e9\x22></span></span>", "\xf0\x9f\x8f\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ea\x22></span></span>", "\xf0\x9f\x8f\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3eb\x22></span></span>", "\xf0\x9f\x8f\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ec\x22></span></span>", "\xf0\x9f\x8f\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ed\x22></span></span>", "\xf0\x9f\x8f\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ee\x22></span></span>", "\xf0\x9f\x8f\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ef\x22></span></span>", "\xf0\x9f\x8f\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f0\x22></span></span>", "\xf0\x9f\x8f\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f3\x22></span></span>", "\xf0\x9f\x8f\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f4\x22></span></span>", "\xf0\x9f\x8f\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f5\x22></span></span>", "\xf0\x9f\x8f\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f7\x22></span></span>", "\xf0\x9f\x8f\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f8\x22></span></span>", "\xf0\x9f\x8f\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3f9\x22></span></span>", "\xf0\x9f\x8f\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3fa\x22></span></span>", "\xf0\x9f\x8f\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3fb\x22></span></span>", "\xf0\x9f\x8f\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3fc\x22></span></span>", "\xf0\x9f\x8f\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3fd\x22></span></span>", "\xf0\x9f\x8f\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3fe\x22></span></span>", "\xf0\x9f\x8f\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f3ff\x22></span></span>", "\xf0\x9f\x90\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f400\x22></span></span>", "\xf0\x9f\x90\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f401\x22></span></span>", "\xf0\x9f\x90\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f402\x22></span></span>", "\xf0\x9f\x90\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f403\x22></span></span>", "\xf0\x9f\x90\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f404\x22></span></span>", "\xf0\x9f\x90\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f405\x22></span></span>", "\xf0\x9f\x90\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f406\x22></span></span>", "\xf0\x9f\x90\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f407\x22></span></span>", "\xf0\x9f\x90\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f408\x22></span></span>", "\xf0\x9f\x90\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f409\x22></span></span>", "\xf0\x9f\x90\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40a\x22></span></span>", "\xf0\x9f\x90\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40b\x22></span></span>", "\xf0\x9f\x90\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40c\x22></span></span>", "\xf0\x9f\x90\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40d\x22></span></span>", "\xf0\x9f\x90\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40e\x22></span></span>", "\xf0\x9f\x90\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f40f\x22></span></span>", "\xf0\x9f\x90\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f410\x22></span></span>", "\xf0\x9f\x90\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f411\x22></span></span>", "\xf0\x9f\x90\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f412\x22></span></span>", "\xf0\x9f\x90\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f413\x22></span></span>", "\xf0\x9f\x90\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f414\x22></span></span>", "\xf0\x9f\x90\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f415\x22></span></span>", "\xf0\x9f\x90\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f416\x22></span></span>", "\xf0\x9f\x90\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f417\x22></span></span>", "\xf0\x9f\x90\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f418\x22></span></span>", "\xf0\x9f\x90\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f419\x22></span></span>", "\xf0\x9f\x90\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41a\x22></span></span>", "\xf0\x9f\x90\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41b\x22></span></span>", "\xf0\x9f\x90\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41c\x22></span></span>", "\xf0\x9f\x90\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41d\x22></span></span>", "\xf0\x9f\x90\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41e\x22></span></span>", "\xf0\x9f\x90\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f41f\x22></span></span>", "\xf0\x9f\x90\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f420\x22></span></span>", "\xf0\x9f\x90\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f421\x22></span></span>", "\xf0\x9f\x90\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f422\x22></span></span>", "\xf0\x9f\x90\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f423\x22></span></span>", "\xf0\x9f\x90\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f424\x22></span></span>", "\xf0\x9f\x90\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f425\x22></span></span>", "\xf0\x9f\x90\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f426\x22></span></span>", "\xf0\x9f\x90\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f427\x22></span></span>", "\xf0\x9f\x90\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f428\x22></span></span>", "\xf0\x9f\x90\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f429\x22></span></span>", "\xf0\x9f\x90\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42a\x22></span></span>", "\xf0\x9f\x90\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42b\x22></span></span>", "\xf0\x9f\x90\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42c\x22></span></span>", "\xf0\x9f\x90\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42d\x22></span></span>", "\xf0\x9f\x90\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42e\x22></span></span>", "\xf0\x9f\x90\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f42f\x22></span></span>", "\xf0\x9f\x90\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f430\x22></span></span>", "\xf0\x9f\x90\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f431\x22></span></span>", "\xf0\x9f\x90\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f432\x22></span></span>", "\xf0\x9f\x90\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f433\x22></span></span>", "\xf0\x9f\x90\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f434\x22></span></span>", "\xf0\x9f\x90\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f435\x22></span></span>", "\xf0\x9f\x90\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f436\x22></span></span>", "\xf0\x9f\x90\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f437\x22></span></span>", "\xf0\x9f\x90\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f438\x22></span></span>", "\xf0\x9f\x90\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f439\x22></span></span>", "\xf0\x9f\x90\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43a\x22></span></span>", "\xf0\x9f\x90\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43b\x22></span></span>", "\xf0\x9f\x90\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43c\x22></span></span>", "\xf0\x9f\x90\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43d\x22></span></span>", "\xf0\x9f\x90\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43e\x22></span></span>", "\xf0\x9f\x90\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f43f\x22></span></span>", "\xf0\x9f\x91\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f440\x22></span></span>", "\xf0\x9f\x91\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f441\x22></span></span>", "\xf0\x9f\x91\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f442\x22></span></span>", "\xf0\x9f\x91\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f443\x22></span></span>", "\xf0\x9f\x91\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f444\x22></span></span>", "\xf0\x9f\x91\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f445\x22></span></span>", "\xf0\x9f\x91\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f446\x22></span></span>", "\xf0\x9f\x91\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f447\x22></span></span>", "\xf0\x9f\x91\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f448\x22></span></span>", "\xf0\x9f\x91\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f449\x22></span></span>", "\xf0\x9f\x91\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44a\x22></span></span>", "\xf0\x9f\x91\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44b\x22></span></span>", "\xf0\x9f\x91\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44c\x22></span></span>", "\xf0\x9f\x91\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44d\x22></span></span>", "\xf0\x9f\x91\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44e\x22></span></span>", "\xf0\x9f\x91\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f44f\x22></span></span>", "\xf0\x9f\x91\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f450\x22></span></span>", "\xf0\x9f\x91\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f451\x22></span></span>", "\xf0\x9f\x91\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f452\x22></span></span>", "\xf0\x9f\x91\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f453\x22></span></span>", "\xf0\x9f\x91\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f454\x22></span></span>", "\xf0\x9f\x91\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f455\x22></span></span>", "\xf0\x9f\x91\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f456\x22></span></span>", "\xf0\x9f\x91\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f457\x22></span></span>", "\xf0\x9f\x91\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f458\x22></span></span>", "\xf0\x9f\x91\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f459\x22></span></span>", "\xf0\x9f\x91\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45a\x22></span></span>", "\xf0\x9f\x91\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45b\x22></span></span>", "\xf0\x9f\x91\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45c\x22></span></span>", "\xf0\x9f\x91\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45d\x22></span></span>", "\xf0\x9f\x91\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45e\x22></span></span>", "\xf0\x9f\x91\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f45f\x22></span></span>", "\xf0\x9f\x91\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f460\x22></span></span>", "\xf0\x9f\x91\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f461\x22></span></span>", "\xf0\x9f\x91\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f462\x22></span></span>", "\xf0\x9f\x91\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f463\x22></span></span>", "\xf0\x9f\x91\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f464\x22></span></span>", "\xf0\x9f\x91\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f465\x22></span></span>", "\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f466\x22></span></span>", "\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f467\x22></span></span>", "\xf0\x9f\x91\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468\x22></span></span>", "\xf0\x9f\x91\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469\x22></span></span>", "\xf0\x9f\x91\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46a\x22></span></span>", "\xf0\x9f\x91\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46b\x22></span></span>", "\xf0\x9f\x91\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46c\x22></span></span>", "\xf0\x9f\x91\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46d\x22></span></span>", "\xf0\x9f\x91\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46e\x22></span></span>", "\xf0\x9f\x91\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f46f\x22></span></span>", "\xf0\x9f\x91\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f470\x22></span></span>", "\xf0\x9f\x91\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f471\x22></span></span>", "\xf0\x9f\x91\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f472\x22></span></span>", "\xf0\x9f\x91\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f473\x22></span></span>", "\xf0\x9f\x91\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f474\x22></span></span>", "\xf0\x9f\x91\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f475\x22></span></span>", "\xf0\x9f\x91\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f476\x22></span></span>", "\xf0\x9f\x91\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f477\x22></span></span>", "\xf0\x9f\x91\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f478\x22></span></span>", "\xf0\x9f\x91\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f479\x22></span></span>", "\xf0\x9f\x91\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47a\x22></span></span>", "\xf0\x9f\x91\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47b\x22></span></span>", "\xf0\x9f\x91\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47c\x22></span></span>", "\xf0\x9f\x91\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47d\x22></span></span>", "\xf0\x9f\x91\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47e\x22></span></span>", "\xf0\x9f\x91\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f47f\x22></span></span>", "\xf0\x9f\x92\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f480\x22></span></span>", "\xf0\x9f\x92\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f481\x22></span></span>", "\xf0\x9f\x92\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f482\x22></span></span>", "\xf0\x9f\x92\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f483\x22></span></span>", "\xf0\x9f\x92\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f484\x22></span></span>", "\xf0\x9f\x92\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f485\x22></span></span>", "\xf0\x9f\x92\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f486\x22></span></span>", "\xf0\x9f\x92\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f487\x22></span></span>", "\xf0\x9f\x92\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f488\x22></span></span>", "\xf0\x9f\x92\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f489\x22></span></span>", "\xf0\x9f\x92\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48a\x22></span></span>", "\xf0\x9f\x92\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48b\x22></span></span>", "\xf0\x9f\x92\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48c\x22></span></span>", "\xf0\x9f\x92\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48d\x22></span></span>", "\xf0\x9f\x92\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48e\x22></span></span>", "\xf0\x9f\x92\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f48f\x22></span></span>", "\xf0\x9f\x92\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f490\x22></span></span>", "\xf0\x9f\x92\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f491\x22></span></span>", "\xf0\x9f\x92\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f492\x22></span></span>", "\xf0\x9f\x92\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f493\x22></span></span>", "\xf0\x9f\x92\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f494\x22></span></span>", "\xf0\x9f\x92\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f495\x22></span></span>", "\xf0\x9f\x92\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f496\x22></span></span>", "\xf0\x9f\x92\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f497\x22></span></span>", "\xf0\x9f\x92\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f498\x22></span></span>", "\xf0\x9f\x92\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f499\x22></span></span>", "\xf0\x9f\x92\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49a\x22></span></span>", "\xf0\x9f\x92\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49b\x22></span></span>", "\xf0\x9f\x92\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49c\x22></span></span>", "\xf0\x9f\x92\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49d\x22></span></span>", "\xf0\x9f\x92\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49e\x22></span></span>", "\xf0\x9f\x92\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f49f\x22></span></span>", "\xf0\x9f\x92\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a0\x22></span></span>", "\xf0\x9f\x92\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a1\x22></span></span>", "\xf0\x9f\x92\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a2\x22></span></span>", "\xf0\x9f\x92\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a3\x22></span></span>", "\xf0\x9f\x92\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a4\x22></span></span>", "\xf0\x9f\x92\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a5\x22></span></span>", "\xf0\x9f\x92\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a6\x22></span></span>", "\xf0\x9f\x92\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a7\x22></span></span>", "\xf0\x9f\x92\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a8\x22></span></span>", "\xf0\x9f\x92\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4a9\x22></span></span>", "\xf0\x9f\x92\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4aa\x22></span></span>", "\xf0\x9f\x92\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ab\x22></span></span>", "\xf0\x9f\x92\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ac\x22></span></span>", "\xf0\x9f\x92\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ad\x22></span></span>", "\xf0\x9f\x92\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ae\x22></span></span>", "\xf0\x9f\x92\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4af\x22></span></span>", "\xf0\x9f\x92\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b0\x22></span></span>", "\xf0\x9f\x92\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b1\x22></span></span>", "\xf0\x9f\x92\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b2\x22></span></span>", "\xf0\x9f\x92\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b3\x22></span></span>", "\xf0\x9f\x92\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b4\x22></span></span>", "\xf0\x9f\x92\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b5\x22></span></span>", "\xf0\x9f\x92\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b6\x22></span></span>", "\xf0\x9f\x92\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b7\x22></span></span>", "\xf0\x9f\x92\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b8\x22></span></span>", "\xf0\x9f\x92\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4b9\x22></span></span>", "\xf0\x9f\x92\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ba\x22></span></span>", "\xf0\x9f\x92\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4bb\x22></span></span>", "\xf0\x9f\x92\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4bc\x22></span></span>", "\xf0\x9f\x92\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4bd\x22></span></span>", "\xf0\x9f\x92\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4be\x22></span></span>", "\xf0\x9f\x92\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4bf\x22></span></span>", "\xf0\x9f\x93\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c0\x22></span></span>", "\xf0\x9f\x93\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c1\x22></span></span>", "\xf0\x9f\x93\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c2\x22></span></span>", "\xf0\x9f\x93\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c3\x22></span></span>", "\xf0\x9f\x93\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c4\x22></span></span>", "\xf0\x9f\x93\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c5\x22></span></span>", "\xf0\x9f\x93\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c6\x22></span></span>", "\xf0\x9f\x93\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c7\x22></span></span>", "\xf0\x9f\x93\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c8\x22></span></span>", "\xf0\x9f\x93\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4c9\x22></span></span>", "\xf0\x9f\x93\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ca\x22></span></span>", "\xf0\x9f\x93\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4cb\x22></span></span>", "\xf0\x9f\x93\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4cc\x22></span></span>", "\xf0\x9f\x93\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4cd\x22></span></span>", "\xf0\x9f\x93\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ce\x22></span></span>", "\xf0\x9f\x93\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4cf\x22></span></span>", "\xf0\x9f\x93\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d0\x22></span></span>", "\xf0\x9f\x93\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d1\x22></span></span>", "\xf0\x9f\x93\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d2\x22></span></span>", "\xf0\x9f\x93\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d3\x22></span></span>", "\xf0\x9f\x93\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d4\x22></span></span>", "\xf0\x9f\x93\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d5\x22></span></span>", "\xf0\x9f\x93\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d6\x22></span></span>", "\xf0\x9f\x93\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d7\x22></span></span>", "\xf0\x9f\x93\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d8\x22></span></span>", "\xf0\x9f\x93\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4d9\x22></span></span>", "\xf0\x9f\x93\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4da\x22></span></span>", "\xf0\x9f\x93\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4db\x22></span></span>", "\xf0\x9f\x93\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4dc\x22></span></span>", "\xf0\x9f\x93\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4dd\x22></span></span>", "\xf0\x9f\x93\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4de\x22></span></span>", "\xf0\x9f\x93\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4df\x22></span></span>", "\xf0\x9f\x93\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e0\x22></span></span>", "\xf0\x9f\x93\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e1\x22></span></span>", "\xf0\x9f\x93\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e2\x22></span></span>", "\xf0\x9f\x93\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e3\x22></span></span>", "\xf0\x9f\x93\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e4\x22></span></span>", "\xf0\x9f\x93\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e5\x22></span></span>", "\xf0\x9f\x93\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e6\x22></span></span>", "\xf0\x9f\x93\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e7\x22></span></span>", "\xf0\x9f\x93\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e8\x22></span></span>", "\xf0\x9f\x93\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4e9\x22></span></span>", "\xf0\x9f\x93\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ea\x22></span></span>", "\xf0\x9f\x93\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4eb\x22></span></span>", "\xf0\x9f\x93\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ec\x22></span></span>", "\xf0\x9f\x93\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ed\x22></span></span>", "\xf0\x9f\x93\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ee\x22></span></span>", "\xf0\x9f\x93\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ef\x22></span></span>", "\xf0\x9f\x93\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f0\x22></span></span>", "\xf0\x9f\x93\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f1\x22></span></span>", "\xf0\x9f\x93\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f2\x22></span></span>", "\xf0\x9f\x93\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f3\x22></span></span>", "\xf0\x9f\x93\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f4\x22></span></span>", "\xf0\x9f\x93\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f5\x22></span></span>", "\xf0\x9f\x93\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f6\x22></span></span>", "\xf0\x9f\x93\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f7\x22></span></span>", "\xf0\x9f\x93\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f8\x22></span></span>", "\xf0\x9f\x93\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4f9\x22></span></span>", "\xf0\x9f\x93\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4fa\x22></span></span>", "\xf0\x9f\x93\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4fb\x22></span></span>", "\xf0\x9f\x93\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4fc\x22></span></span>", "\xf0\x9f\x93\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4fd\x22></span></span>", "\xf0\x9f\x93\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f4ff\x22></span></span>", "\xf0\x9f\x94\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f500\x22></span></span>", "\xf0\x9f\x94\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f501\x22></span></span>", "\xf0\x9f\x94\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f502\x22></span></span>", "\xf0\x9f\x94\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f503\x22></span></span>", "\xf0\x9f\x94\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f504\x22></span></span>", "\xf0\x9f\x94\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f505\x22></span></span>", "\xf0\x9f\x94\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f506\x22></span></span>", "\xf0\x9f\x94\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f507\x22></span></span>", "\xf0\x9f\x94\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f508\x22></span></span>", "\xf0\x9f\x94\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f509\x22></span></span>", "\xf0\x9f\x94\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50a\x22></span></span>", "\xf0\x9f\x94\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50b\x22></span></span>", "\xf0\x9f\x94\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50c\x22></span></span>", "\xf0\x9f\x94\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50d\x22></span></span>", "\xf0\x9f\x94\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50e\x22></span></span>", "\xf0\x9f\x94\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f50f\x22></span></span>", "\xf0\x9f\x94\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f510\x22></span></span>", "\xf0\x9f\x94\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f511\x22></span></span>", "\xf0\x9f\x94\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f512\x22></span></span>", "\xf0\x9f\x94\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f513\x22></span></span>", "\xf0\x9f\x94\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f514\x22></span></span>", "\xf0\x9f\x94\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f515\x22></span></span>", "\xf0\x9f\x94\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f516\x22></span></span>", "\xf0\x9f\x94\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f517\x22></span></span>", "\xf0\x9f\x94\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f518\x22></span></span>", "\xf0\x9f\x94\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f519\x22></span></span>", "\xf0\x9f\x94\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51a\x22></span></span>", "\xf0\x9f\x94\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51b\x22></span></span>", "\xf0\x9f\x94\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51c\x22></span></span>", "\xf0\x9f\x94\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51d\x22></span></span>", "\xf0\x9f\x94\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51e\x22></span></span>", "\xf0\x9f\x94\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f51f\x22></span></span>", "\xf0\x9f\x94\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f520\x22></span></span>", "\xf0\x9f\x94\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f521\x22></span></span>", "\xf0\x9f\x94\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f522\x22></span></span>", "\xf0\x9f\x94\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f523\x22></span></span>", "\xf0\x9f\x94\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f524\x22></span></span>", "\xf0\x9f\x94\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f525\x22></span></span>", "\xf0\x9f\x94\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f526\x22></span></span>", "\xf0\x9f\x94\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f527\x22></span></span>", "\xf0\x9f\x94\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f528\x22></span></span>", "\xf0\x9f\x94\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f529\x22></span></span>", "\xf0\x9f\x94\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52a\x22></span></span>", "\xf0\x9f\x94\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52b\x22></span></span>", "\xf0\x9f\x94\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52c\x22></span></span>", "\xf0\x9f\x94\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52d\x22></span></span>", "\xf0\x9f\x94\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52e\x22></span></span>", "\xf0\x9f\x94\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f52f\x22></span></span>", "\xf0\x9f\x94\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f530\x22></span></span>", "\xf0\x9f\x94\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f531\x22></span></span>", "\xf0\x9f\x94\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f532\x22></span></span>", "\xf0\x9f\x94\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f533\x22></span></span>", "\xf0\x9f\x94\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f534\x22></span></span>", "\xf0\x9f\x94\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f535\x22></span></span>", "\xf0\x9f\x94\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f536\x22></span></span>", "\xf0\x9f\x94\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f537\x22></span></span>", "\xf0\x9f\x94\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f538\x22></span></span>", "\xf0\x9f\x94\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f539\x22></span></span>", "\xf0\x9f\x94\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f53a\x22></span></span>", "\xf0\x9f\x94\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f53b\x22></span></span>", "\xf0\x9f\x94\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f53c\x22></span></span>", "\xf0\x9f\x94\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f53d\x22></span></span>", "\xf0\x9f\x95\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f549\x22></span></span>", "\xf0\x9f\x95\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f54a\x22></span></span>", "\xf0\x9f\x95\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f54b\x22></span></span>", "\xf0\x9f\x95\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f54c\x22></span></span>", "\xf0\x9f\x95\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f54d\x22></span></span>", "\xf0\x9f\x95\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f54e\x22></span></span>", "\xf0\x9f\x95\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f550\x22></span></span>", "\xf0\x9f\x95\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f551\x22></span></span>", "\xf0\x9f\x95\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f552\x22></span></span>", "\xf0\x9f\x95\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f553\x22></span></span>", "\xf0\x9f\x95\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f554\x22></span></span>", "\xf0\x9f\x95\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f555\x22></span></span>", "\xf0\x9f\x95\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f556\x22></span></span>", "\xf0\x9f\x95\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f557\x22></span></span>", "\xf0\x9f\x95\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f558\x22></span></span>", "\xf0\x9f\x95\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f559\x22></span></span>", "\xf0\x9f\x95\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55a\x22></span></span>", "\xf0\x9f\x95\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55b\x22></span></span>", "\xf0\x9f\x95\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55c\x22></span></span>", "\xf0\x9f\x95\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55d\x22></span></span>", "\xf0\x9f\x95\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55e\x22></span></span>", "\xf0\x9f\x95\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f55f\x22></span></span>", "\xf0\x9f\x95\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f560\x22></span></span>", "\xf0\x9f\x95\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f561\x22></span></span>", "\xf0\x9f\x95\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f562\x22></span></span>", "\xf0\x9f\x95\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f563\x22></span></span>", "\xf0\x9f\x95\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f564\x22></span></span>", "\xf0\x9f\x95\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f565\x22></span></span>", "\xf0\x9f\x95\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f566\x22></span></span>", "\xf0\x9f\x95\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f567\x22></span></span>", "\xf0\x9f\x95\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f56f\x22></span></span>", "\xf0\x9f\x95\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f570\x22></span></span>", "\xf0\x9f\x95\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f573\x22></span></span>", "\xf0\x9f\x95\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f574\x22></span></span>", "\xf0\x9f\x95\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f575\x22></span></span>", "\xf0\x9f\x95\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f576\x22></span></span>", "\xf0\x9f\x95\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f577\x22></span></span>", "\xf0\x9f\x95\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f578\x22></span></span>", "\xf0\x9f\x95\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f579\x22></span></span>", "\xf0\x9f\x96\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f587\x22></span></span>", "\xf0\x9f\x96\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f58a\x22></span></span>", "\xf0\x9f\x96\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f58b\x22></span></span>", "\xf0\x9f\x96\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f58c\x22></span></span>", "\xf0\x9f\x96\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f58d\x22></span></span>", "\xf0\x9f\x96\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f590\x22></span></span>", "\xf0\x9f\x96\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f595\x22></span></span>", "\xf0\x9f\x96\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f596\x22></span></span>", "\xf0\x9f\x96\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5a5\x22></span></span>", "\xf0\x9f\x96\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5a8\x22></span></span>", "\xf0\x9f\x96\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5b1\x22></span></span>", "\xf0\x9f\x96\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5b2\x22></span></span>", "\xf0\x9f\x96\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5bc\x22></span></span>", "\xf0\x9f\x97\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5c2\x22></span></span>", "\xf0\x9f\x97\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5c3\x22></span></span>", "\xf0\x9f\x97\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5c4\x22></span></span>", "\xf0\x9f\x97\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5d1\x22></span></span>", "\xf0\x9f\x97\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5d2\x22></span></span>", "\xf0\x9f\x97\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5d3\x22></span></span>", "\xf0\x9f\x97\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5dc\x22></span></span>", "\xf0\x9f\x97\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5dd\x22></span></span>", "\xf0\x9f\x97\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5de\x22></span></span>", "\xf0\x9f\x97\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5e1\x22></span></span>", "\xf0\x9f\x97\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5e3\x22></span></span>", "\xf0\x9f\x97\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5e8\x22></span></span>", "\xf0\x9f\x97\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5ef\x22></span></span>", "\xf0\x9f\x97\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5f3\x22></span></span>", "\xf0\x9f\x97\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5fa\x22></span></span>", "\xf0\x9f\x97\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5fb\x22></span></span>", "\xf0\x9f\x97\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5fc\x22></span></span>", "\xf0\x9f\x97\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5fd\x22></span></span>", "\xf0\x9f\x97\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5fe\x22></span></span>", "\xf0\x9f\x97\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f5ff\x22></span></span>", "\xf0\x9f\x98\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f600\x22></span></span>", "\xf0\x9f\x98\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f601\x22></span></span>", "\xf0\x9f\x98\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f602\x22></span></span>", "\xf0\x9f\x98\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f603\x22></span></span>", "\xf0\x9f\x98\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f604\x22></span></span>", "\xf0\x9f\x98\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f605\x22></span></span>", "\xf0\x9f\x98\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f606\x22></span></span>", "\xf0\x9f\x98\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f607\x22></span></span>", "\xf0\x9f\x98\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f608\x22></span></span>", "\xf0\x9f\x98\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f609\x22></span></span>", "\xf0\x9f\x98\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60a\x22></span></span>", "\xf0\x9f\x98\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60b\x22></span></span>", "\xf0\x9f\x98\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60c\x22></span></span>", "\xf0\x9f\x98\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60d\x22></span></span>", "\xf0\x9f\x98\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60e\x22></span></span>", "\xf0\x9f\x98\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f60f\x22></span></span>", "\xf0\x9f\x98\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f610\x22></span></span>", "\xf0\x9f\x98\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f611\x22></span></span>", "\xf0\x9f\x98\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f612\x22></span></span>", "\xf0\x9f\x98\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f613\x22></span></span>", "\xf0\x9f\x98\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f614\x22></span></span>", "\xf0\x9f\x98\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f615\x22></span></span>", "\xf0\x9f\x98\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f616\x22></span></span>", "\xf0\x9f\x98\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f617\x22></span></span>", "\xf0\x9f\x98\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f618\x22></span></span>", "\xf0\x9f\x98\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f619\x22></span></span>", "\xf0\x9f\x98\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61a\x22></span></span>", "\xf0\x9f\x98\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61b\x22></span></span>", "\xf0\x9f\x98\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61c\x22></span></span>", "\xf0\x9f\x98\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61d\x22></span></span>", "\xf0\x9f\x98\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61e\x22></span></span>", "\xf0\x9f\x98\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f61f\x22></span></span>", "\xf0\x9f\x98\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f620\x22></span></span>", "\xf0\x9f\x98\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f621\x22></span></span>", "\xf0\x9f\x98\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f622\x22></span></span>", "\xf0\x9f\x98\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f623\x22></span></span>", "\xf0\x9f\x98\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f624\x22></span></span>", "\xf0\x9f\x98\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f625\x22></span></span>", "\xf0\x9f\x98\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f626\x22></span></span>", "\xf0\x9f\x98\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f627\x22></span></span>", "\xf0\x9f\x98\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f628\x22></span></span>", "\xf0\x9f\x98\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f629\x22></span></span>", "\xf0\x9f\x98\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62a\x22></span></span>", "\xf0\x9f\x98\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62b\x22></span></span>", "\xf0\x9f\x98\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62c\x22></span></span>", "\xf0\x9f\x98\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62d\x22></span></span>", "\xf0\x9f\x98\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62e\x22></span></span>", "\xf0\x9f\x98\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f62f\x22></span></span>", "\xf0\x9f\x98\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f630\x22></span></span>", "\xf0\x9f\x98\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f631\x22></span></span>", "\xf0\x9f\x98\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f632\x22></span></span>", "\xf0\x9f\x98\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f633\x22></span></span>", "\xf0\x9f\x98\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f634\x22></span></span>", "\xf0\x9f\x98\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f635\x22></span></span>", "\xf0\x9f\x98\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f636\x22></span></span>", "\xf0\x9f\x98\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f637\x22></span></span>", "\xf0\x9f\x98\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f638\x22></span></span>", "\xf0\x9f\x98\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f639\x22></span></span>", "\xf0\x9f\x98\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63a\x22></span></span>", "\xf0\x9f\x98\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63b\x22></span></span>", "\xf0\x9f\x98\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63c\x22></span></span>", "\xf0\x9f\x98\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63d\x22></span></span>", "\xf0\x9f\x98\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63e\x22></span></span>", "\xf0\x9f\x98\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f63f\x22></span></span>", "\xf0\x9f\x99\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f640\x22></span></span>", "\xf0\x9f\x99\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f641\x22></span></span>", "\xf0\x9f\x99\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f642\x22></span></span>", "\xf0\x9f\x99\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f643\x22></span></span>", "\xf0\x9f\x99\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f644\x22></span></span>", "\xf0\x9f\x99\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f645\x22></span></span>", "\xf0\x9f\x99\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f646\x22></span></span>", "\xf0\x9f\x99\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f647\x22></span></span>", "\xf0\x9f\x99\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f648\x22></span></span>", "\xf0\x9f\x99\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f649\x22></span></span>", "\xf0\x9f\x99\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64a\x22></span></span>", "\xf0\x9f\x99\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64b\x22></span></span>", "\xf0\x9f\x99\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64c\x22></span></span>", "\xf0\x9f\x99\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64d\x22></span></span>", "\xf0\x9f\x99\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64e\x22></span></span>", "\xf0\x9f\x99\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f64f\x22></span></span>", "\xf0\x9f\x9a\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f680\x22></span></span>", "\xf0\x9f\x9a\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f681\x22></span></span>", "\xf0\x9f\x9a\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f682\x22></span></span>", "\xf0\x9f\x9a\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f683\x22></span></span>", "\xf0\x9f\x9a\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f684\x22></span></span>", "\xf0\x9f\x9a\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f685\x22></span></span>", "\xf0\x9f\x9a\x86"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f686\x22></span></span>", "\xf0\x9f\x9a\x87"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f687\x22></span></span>", "\xf0\x9f\x9a\x88"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f688\x22></span></span>", "\xf0\x9f\x9a\x89"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f689\x22></span></span>", "\xf0\x9f\x9a\x8a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68a\x22></span></span>", "\xf0\x9f\x9a\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68b\x22></span></span>", "\xf0\x9f\x9a\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68c\x22></span></span>", "\xf0\x9f\x9a\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68d\x22></span></span>", "\xf0\x9f\x9a\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68e\x22></span></span>", "\xf0\x9f\x9a\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f68f\x22></span></span>", "\xf0\x9f\x9a\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f690\x22></span></span>", "\xf0\x9f\x9a\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f691\x22></span></span>", "\xf0\x9f\x9a\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f692\x22></span></span>", "\xf0\x9f\x9a\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f693\x22></span></span>", "\xf0\x9f\x9a\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f694\x22></span></span>", "\xf0\x9f\x9a\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f695\x22></span></span>", "\xf0\x9f\x9a\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f696\x22></span></span>", "\xf0\x9f\x9a\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f697\x22></span></span>", "\xf0\x9f\x9a\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f698\x22></span></span>", "\xf0\x9f\x9a\x99"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f699\x22></span></span>", "\xf0\x9f\x9a\x9a"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69a\x22></span></span>", "\xf0\x9f\x9a\x9b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69b\x22></span></span>", "\xf0\x9f\x9a\x9c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69c\x22></span></span>", "\xf0\x9f\x9a\x9d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69d\x22></span></span>", "\xf0\x9f\x9a\x9e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69e\x22></span></span>", "\xf0\x9f\x9a\x9f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f69f\x22></span></span>", "\xf0\x9f\x9a\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a0\x22></span></span>", "\xf0\x9f\x9a\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a1\x22></span></span>", "\xf0\x9f\x9a\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a2\x22></span></span>", "\xf0\x9f\x9a\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a3\x22></span></span>", "\xf0\x9f\x9a\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a4\x22></span></span>", "\xf0\x9f\x9a\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a5\x22></span></span>", "\xf0\x9f\x9a\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a6\x22></span></span>", "\xf0\x9f\x9a\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a7\x22></span></span>", "\xf0\x9f\x9a\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a8\x22></span></span>", "\xf0\x9f\x9a\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6a9\x22></span></span>", "\xf0\x9f\x9a\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6aa\x22></span></span>", "\xf0\x9f\x9a\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ab\x22></span></span>", "\xf0\x9f\x9a\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ac\x22></span></span>", "\xf0\x9f\x9a\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ad\x22></span></span>", "\xf0\x9f\x9a\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ae\x22></span></span>", "\xf0\x9f\x9a\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6af\x22></span></span>", "\xf0\x9f\x9a\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b0\x22></span></span>", "\xf0\x9f\x9a\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b1\x22></span></span>", "\xf0\x9f\x9a\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b2\x22></span></span>", "\xf0\x9f\x9a\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b3\x22></span></span>", "\xf0\x9f\x9a\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b4\x22></span></span>", "\xf0\x9f\x9a\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b5\x22></span></span>", "\xf0\x9f\x9a\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b6\x22></span></span>", "\xf0\x9f\x9a\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b7\x22></span></span>", "\xf0\x9f\x9a\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b8\x22></span></span>", "\xf0\x9f\x9a\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6b9\x22></span></span>", "\xf0\x9f\x9a\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ba\x22></span></span>", "\xf0\x9f\x9a\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6bb\x22></span></span>", "\xf0\x9f\x9a\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6bc\x22></span></span>", "\xf0\x9f\x9a\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6bd\x22></span></span>", "\xf0\x9f\x9a\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6be\x22></span></span>", "\xf0\x9f\x9a\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6bf\x22></span></span>", "\xf0\x9f\x9b\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c0\x22></span></span>", "\xf0\x9f\x9b\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c1\x22></span></span>", "\xf0\x9f\x9b\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c2\x22></span></span>", "\xf0\x9f\x9b\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c3\x22></span></span>", "\xf0\x9f\x9b\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c4\x22></span></span>", "\xf0\x9f\x9b\x85"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6c5\x22></span></span>", "\xf0\x9f\x9b\x8b"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6cb\x22></span></span>", "\xf0\x9f\x9b\x8c"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6cc\x22></span></span>", "\xf0\x9f\x9b\x8d"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6cd\x22></span></span>", "\xf0\x9f\x9b\x8e"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ce\x22></span></span>", "\xf0\x9f\x9b\x8f"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6cf\x22></span></span>", "\xf0\x9f\x9b\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6d0\x22></span></span>", "\xf0\x9f\x9b\xa0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e0\x22></span></span>", "\xf0\x9f\x9b\xa1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e1\x22></span></span>", "\xf0\x9f\x9b\xa2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e2\x22></span></span>", "\xf0\x9f\x9b\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e3\x22></span></span>", "\xf0\x9f\x9b\xa4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e4\x22></span></span>", "\xf0\x9f\x9b\xa5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e5\x22></span></span>", "\xf0\x9f\x9b\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6e9\x22></span></span>", "\xf0\x9f\x9b\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6eb\x22></span></span>", "\xf0\x9f\x9b\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6ec\x22></span></span>", "\xf0\x9f\x9b\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6f0\x22></span></span>", "\xf0\x9f\x9b\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f6f3\x22></span></span>", "\xf0\x9f\xa4\x90"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f910\x22></span></span>", "\xf0\x9f\xa4\x91"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f911\x22></span></span>", "\xf0\x9f\xa4\x92"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f912\x22></span></span>", "\xf0\x9f\xa4\x93"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f913\x22></span></span>", "\xf0\x9f\xa4\x94"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f914\x22></span></span>", "\xf0\x9f\xa4\x95"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f915\x22></span></span>", "\xf0\x9f\xa4\x96"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f916\x22></span></span>", "\xf0\x9f\xa4\x97"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f917\x22></span></span>", "\xf0\x9f\xa4\x98"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f918\x22></span></span>", "\xf0\x9f\xa6\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f980\x22></span></span>", "\xf0\x9f\xa6\x81"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f981\x22></span></span>", "\xf0\x9f\xa6\x82"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f982\x22></span></span>", "\xf0\x9f\xa6\x83"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f983\x22></span></span>", "\xf0\x9f\xa6\x84"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f984\x22></span></span>", "\xf0\x9f\xa7\x80"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f9c0\x22></span></span>", "#\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2320e3\x22></span></span>", "*\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji2a20e3\x22></span></span>", "0\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3020e3\x22></span></span>", "1\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3120e3\x22></span></span>", "2\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3220e3\x22></span></span>", "3\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3320e3\x22></span></span>", "4\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3420e3\x22></span></span>", "5\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3520e3\x22></span></span>", "6\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3620e3\x22></span></span>", "7\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3720e3\x22></span></span>", "8\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3820e3\x22></span></span>", "9\xe2\x83\xa3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji3920e3\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1e8\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1e9\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1ea\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1eb\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1ec\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1ee\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f1\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f2\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f4\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f6\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f7\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f8\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1f9\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1fa\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1fc\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1fd\x22></span></span>", "\xf0\x9f\x87\xa6\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e61f1ff\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1e6\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1e7\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1e9\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ea\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1eb\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ec\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ed\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ee\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ef\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f1\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f2\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f3\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f4\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f6\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f7\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f8\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1f9\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1fb\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1fc\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1fe\x22></span></span>", "\xf0\x9f\x87\xa7\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e71f1ff\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1e6\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1e8\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1e9\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1eb\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1ec\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1ed\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1ee\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f0\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f1\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f2\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f3\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f4\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f5\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1f7\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1fa\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1fb\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1fc\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1fd\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1fe\x22></span></span>", "\xf0\x9f\x87\xa8\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e81f1ff\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1ea\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1ec\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1ef\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1f0\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1f2\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1f4\x22></span></span>", "\xf0\x9f\x87\xa9\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1e91f1ff\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1e6\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1e8\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1ea\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1ec\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1ed\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1f7\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1f8\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1f9\x22></span></span>", "\xf0\x9f\x87\xaa\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ea1f1fa\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1ee\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1ef\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1f0\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1f2\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1f4\x22></span></span>", "\xf0\x9f\x87\xab\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1eb1f1f7\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1e6\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1e7\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1e9\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1ea\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1eb\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1ec\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1ed\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1ee\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f1\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f2\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f3\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f5\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f6\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f7\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f8\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1f9\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1fa\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1fc\x22></span></span>", "\xf0\x9f\x87\xac\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ec1f1fe\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1f0\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1f2\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1f3\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1f7\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1f9\x22></span></span>", "\xf0\x9f\x87\xad\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ed1f1fa\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1e8\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1e9\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1ea\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f1\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f2\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f3\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f4\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f6\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f7\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f8\x22></span></span>", "\xf0\x9f\x87\xae\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ee1f1f9\x22></span></span>", "\xf0\x9f\x87\xaf\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ef1f1ea\x22></span></span>", "\xf0\x9f\x87\xaf\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ef1f1f2\x22></span></span>", "\xf0\x9f\x87\xaf\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ef1f1f4\x22></span></span>", "\xf0\x9f\x87\xaf\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ef1f1f5\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1ea\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1ec\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1ed\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1ee\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1f2\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1f3\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1f5\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1f7\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1fc\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1fe\x22></span></span>", "\xf0\x9f\x87\xb0\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f01f1ff\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1e6\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1e7\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1e8\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1ee\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1f0\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1f7\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1f8\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1f9\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1fa\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1fb\x22></span></span>", "\xf0\x9f\x87\xb1\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f11f1fe\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1e6\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1e8\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1e9\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1ea\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1eb\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1ec\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1ed\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f0\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f1\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f2\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f3\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f4\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f5\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f6\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f7\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f8\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1f9\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1fa\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1fb\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1fc\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1fd\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1fe\x22></span></span>", "\xf0\x9f\x87\xb2\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f21f1ff\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1e6\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1e8\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1ea\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1eb\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1ec\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1ee\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1f1\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1f4\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xb5"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1f5\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1f7\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1fa\x22></span></span>", "\xf0\x9f\x87\xb3\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f31f1ff\x22></span></span>", "\xf0\x9f\x87\xb4\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f41f1f2\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1e6\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1ea\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1eb\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1ec\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1ed\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f0\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f1\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f2\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f3\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f7\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f8\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1f9\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1fc\x22></span></span>", "\xf0\x9f\x87\xb5\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f51f1fe\x22></span></span>", "\xf0\x9f\x87\xb6\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f61f1e6\x22></span></span>", "\xf0\x9f\x87\xb7\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f71f1ea\x22></span></span>", "\xf0\x9f\x87\xb7\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f71f1f4\x22></span></span>", "\xf0\x9f\x87\xb7\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f71f1f8\x22></span></span>", "\xf0\x9f\x87\xb7\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f71f1fa\x22></span></span>", "\xf0\x9f\x87\xb7\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f71f1fc\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1e6\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1e7\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1e8\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1e9\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ea\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ec\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ed\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ee\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ef\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f0\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f1\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f2\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f3\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f4\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f7\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f8\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1f9\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1fb\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xbd"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1fd\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1fe\x22></span></span>", "\xf0\x9f\x87\xb8\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f81f1ff\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1e6\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1e8\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1e9\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1eb\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1ec\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xad"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1ed\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xaf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1ef\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f0\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb1"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f1\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f2\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f3\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb4"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f4\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f7\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1f9\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xbb"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1fb\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1fc\x22></span></span>", "\xf0\x9f\x87\xb9\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1f91f1ff\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1e6\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1ec\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1f2\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1f8\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xbe"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1fe\x22></span></span>", "\xf0\x9f\x87\xba\xf0\x9f\x87\xbf"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fa1f1ff\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1e6\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1e8\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1ea\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xac"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1ec\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xae"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1ee\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xb3"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1f3\x22></span></span>", "\xf0\x9f\x87\xbb\xf0\x9f\x87\xba"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fb1f1fa\x22></span></span>", "\xf0\x9f\x87\xbc\xf0\x9f\x87\xab"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fc1f1eb\x22></span></span>", "\xf0\x9f\x87\xbc\xf0\x9f\x87\xb8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fc1f1f8\x22></span></span>", "\xf0\x9f\x87\xbd\xf0\x9f\x87\xb0"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fd1f1f0\x22></span></span>", "\xf0\x9f\x87\xbe\xf0\x9f\x87\xaa"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fe1f1ea\x22></span></span>", "\xf0\x9f\x87\xbe\xf0\x9f\x87\xb9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1fe1f1f9\x22></span></span>", "\xf0\x9f\x87\xbf\xf0\x9f\x87\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ff1f1e6\x22></span></span>", "\xf0\x9f\x87\xbf\xf0\x9f\x87\xb2"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ff1f1f2\x22></span></span>", "\xf0\x9f\x87\xbf\xf0\x9f\x87\xbc"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f1ff1f1fc\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f468200d1f466\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f468200d1f466200d1f466\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f468200d1f467\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f468200d1f467200d1f466\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f468200d1f467200d1f467\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f469200d1f466200d1f466\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f469200d1f467\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f469200d1f467200d1f466\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d1f469200d1f467200d1f467\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d2764fe0f200d1f468\x22></span></span>", "\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f468200d2764fe0f200d1f48b200d1f468\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d1f469200d1f466\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d1f469200d1f466200d1f466\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d1f469200d1f467\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d1f469200d1f467200d1f466\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d1f469200d1f467200d1f467\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d2764fe0f200d1f469\x22></span></span>", "\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9"=>"<span class=\x22emoji-outer emoji-sizer\x22><span class=\x22emoji-inner emoji1f469200d2764fe0f200d1f48b200d1f469\x22></span></span>", ); return str_replace(array_keys($unified_to_html), $unified_to_html, $text); } function express_api_load_file($express_type){ $path = THINK_PATH . parse_name($express_type, 1) . '/'; $config_file = array('extendDd'); foreach ($config_file as $file_name) { $file_path = $path . $file_name . '.php'; if(is_file($file_path)){ C(include $file_path); } } $function_file = array('functions'); foreach ($function_file as $file_name) { $file_path = $path . $file_name . '.php'; if(is_file($file_path)){ require_cache($file_path); } } } function express_api_sale_order_where($express_type, $express_prefix = 'e', $return_string = false){ switch (strtoupper($express_type)) { case 'DHL': $company_id = C('EXPRESS_DHL_ID'); break; case 'CORREOS': $company_id = C('EXPRESS_ES_CORREOS_ID'); break; case 'GLS': $company_id = array('in', C('GLS_API_EXPRESS_ID')); break; } $where = array( $express_prefix . '.company_id' => $company_id, $express_prefix . '.enable_api' => 1, ); if ($return_string) { $where = implode(' and ', $where); } return $where; } function express_api_sale_order_id($express_type, $sale_order_id = 0, $is_del = false){ static $ids = array(); $where = express_api_sale_order_where($express_type); $is_array = is_array($sale_order_id) ? true : false; if ($is_array) { $where['s.id'] = array('in', $sale_order_id); } elseif ($sale_order_id > 0) { if (isset($ids[$express_type][$sale_order_id])) { return $ids[$express_type][$sale_order_id]; } $where['s.id'] = $sale_order_id; } else { return 0; } $model = $is_del === true ? 'SaleOrderDel' : 'SaleOrder'; $join = array( 'INNER JOIN __EXPRESS__ e on e.id = s.express_id' ); $id = M($model)->alias('s')->join($join)->where($where)->getField('s.id', $is_array); if ($is_array) { foreach ($id as $sale_id) { $ids[$express_type][$sale_id] = $sale_id; } } elseif ($sale_order_id > 0) { $ids[$express_type][$sale_order_id] = $id; } return $id; } function express_api_created_sale_order_where($prefix = ''){ if (ltrim($prefix, '.')) { $prefix = ltrim($prefix, '.') . '.'; } $where = array( $prefix . 'track_no' => array('neq', ''), $prefix . 'Labelurl' => array('neq', ''), '_string' => $prefix . 'Labelurl=list.Labelurl', ); return $where; } function express_api_created_sale_order($express_type, $sale_order_id, $is_del = false){ $where = express_api_created_sale_order_where('s'); $where['s.id'] = $sale_order_id; $join = 'inner join __' . strtoupper($express_type) . '_LIST__ list on list.object_id=s.id'; $model = $is_del === true ? 'SaleOrderDel' : 'SaleOrder'; return M($model)->alias('s')->join($join)->where($where)->count() > 0 ? true : false; } function express_api_allow_manually_delete_where($express_type, $sale_order_id, $sale_prefix = 's', $express_prefix = 'e'){ $where = array_merge(express_api_sale_order_where($express_type, $express_prefix), express_api_created_sale_order_where($sale_prefix)); if (ltrim($sale_prefix, '.')) { $sale_prefix = ltrim($sale_prefix, '.') . '.'; } $where[$sale_prefix . 'sale_order_state'] = C('SALE_ORDER_STATE_EXPORTING'); $where[$sale_prefix . 'id'] = is_array($sale_order_id) ? array('in', $sale_order_id) : $sale_order_id; return $where; } function express_api_allow_manually_delete_sale_order_id($express_type, $sale_order_id){ $where = express_api_allow_manually_delete_where($express_type, $sale_order_id); $join = array( 'INNER JOIN __EXPRESS__ e on e.id = s.express_id', 'INNER JOIN __' . strtoupper($express_type) . '_LIST__ list on list.object_id = s.id', ); return M('SaleOrder')->alias('s')->join($join)->where($where)->getField('s.id', is_array($sale_order_id)); } function express_api_get_need_request_where($return_string = false) { if ($return_string === true) { $where = ' request_status in ("' . implode('", "', C('EXPRESS_API_ALLOW_REQUEST_STATUS')) . '")'; } else { $where = array( 'request_status' => array('in', C('EXPRESS_API_ALLOW_REQUEST_STATUS')), ); } return $where; } function express_api_get_need_request($express_type, $default_where = array(), $limit = 1){ $express_list = strtolower($express_type) . '_list'; $where = express_api_get_need_request_where(); if (!empty($default_where)) { $where = array_merge($where, $default_where); } $model = M($express_list); $order = 'last_request_time asc'; $field = 'object_id, object_id, object_no, id as ' . $express_list . '_id, request_status'; $dhl_list = $model->where($where)->limit($limit)->order($order)->getField($field); return $dhl_list; } function express_api_get_unfinished_request_where ($return_string = false) { $request_status = C('EXPRESS_API_ALLOW_REQUEST_STATUS'); $request_status[] = EXPRESS_API_REQUEST_STATUS_REQUESTING; if ($return_string === true) { $where = ' request_status in ("' . implode('", "', $request_status) . '")'; } else { $where = array( 'request_status' => array('in', $request_status), ); } return $where; } function express_api_get_sale_order_info($express_type, $sale_order_id){ $where = express_api_sale_order_where($express_type); $where['s.id'] = is_array($sale_order_id) ? array('in', $sale_order_id) : $sale_order_id; $join = array( 'INNER JOIN __SALE_ORDER_ADDITION__ d on d.sale_order_id=s.id', 'INNER JOIN __EXPRESS__ e on e.id=s.express_id', ); $field = 's.id as sale_order_id, s.sale_order_no, s.weight, s.track_no, s.Labelurl, s.api_checksum, s.track_no_update_tips, s.is_print,s.send_date,s.warehouse_id,s.sale_order_state,' . 'd.consignee, d.address, d.address2, d.country_id, d.post_code, d.city_name, d.company_name, d.mobile, d.email, d.fax'; $model = M('SaleOrder')->alias('s')->join($join)->where($where)->field($field); $sale = is_array($sale_order_id) ? resetArrayIndex($model->select(), 'sale_order_id') : $model->find(); return $sale; } function express_api_cancel_request($express_type, $sale_order_id = null, $express_list_id = null){ $where = express_api_get_need_request_where(); $flag = true; if ($sale_order_id) { $flag = false; $where['object_id'] = is_array($sale_order_id) ? array('in', $sale_order_id) : $sale_order_id; } if ($express_list_id) { $flag = false; $where['id'] = is_array($express_list_id) ? array('in', $express_list_id) : $express_list_id; } if ($flag) { return false; } return M(strtolower($express_type) . '_list')->where($where)->setField('request_status', EXPRESS_API_REQUEST_STATUS_CANCELLED); } function express_api_create_request($express_type, $sale_order_id){ $request_type = 'createShipmentDD'; $default_where = array( 'object_id' => $sale_order_id, 'request_type' => $request_type, ); if (express_api_created_sale_order($express_type, $sale_order_id) === true || express_api_get_need_request($express_type, $default_where)) { return true; } express_api_verify_requesting($express_type, $sale_order_id); express_api_cancel_request($express_type, $sale_order_id); $data = array( 'request_type' => $request_type, 'object_id' => $sale_order_id, 'object_no' => M('SaleOrder')->where(array('id' => $sale_order_id))->getField('sale_order_no'), 'request_status' => EXPRESS_API_REQUEST_STATUS_PENDING, 'create_time' => date('Y-m-d H:i:s'), 'last_request_time' => date('Y-m-d H:i:s'), ); return M(strtolower($express_type) . '_list')->add($data); } function express_api_delete_request($express_type, $sale_order_id, $is_del = false){ express_api_verify_requesting($express_type, $sale_order_id); express_api_cancel_request($express_type, $sale_order_id); if (express_api_created_sale_order($express_type, $sale_order_id, $is_del) === false) { return true; } $request_type = 'deleteShipmentDD'; $model = $is_del ? 'SaleOrderDel' : 'SaleOrder'; $filed = 'l.object_no, l.shipmentNumber, l.Labelurl'; $join = 'inner join __' . strtoupper($express_type) . '_LIST__ l on l.object_id=s.id and l.Labelurl=s.Labelurl'; $where = array( 'l.object_id' => $sale_order_id, 'l.request_type' => array('in', array('createShipmentDD', 'updateShipmentDD')), 'l.request_status' => EXPRESS_API_REQUEST_STATUS_SUCCESSFUL, ); $queue = M($model)->alias('s')->field($filed)->join($join)->where($where)->find(); if (empty($queue)) { return true; } $data = array( 'request_type' => $request_type, 'object_id' => $sale_order_id, 'object_no' => $queue['object_no'], 'shipmentNumber' => $queue['shipmentNumber'], 'Labelurl' => $queue['Labelurl'], 'request_status' => EXPRESS_API_REQUEST_STATUS_PENDING, 'create_time' => date('Y-m-d H:i:s'), 'last_request_time' => date('Y-m-d H:i:s'), ); return M(strtolower($express_type) . '_list')->add($data); } function express_api_update_request($express_type, $sale_order_id){ if (express_api_created_sale_order($express_type, $sale_order_id) !== true) { return express_api_create_request($express_type, $sale_order_id); } express_api_verify_requesting($express_type, $sale_order_id); express_api_cancel_request($express_type, $sale_order_id); $sale = express_api_get_sale_order_info($express_type, $sale_order_id); $order = D(ucfirst(strtolower($express_type)) . 'CreateShipment')->getShipmentOrderBasic($sale); if ($sale['api_checksum'] == md5(serialize($order))) { return true; } $request_type = 'updateShipmentDD'; $data = array( 'request_type' => $request_type, 'object_id' => $sale_order_id, 'object_no' => M('SaleOrder')->where(array('id' => $sale_order_id))->getField('sale_order_no'), 'request_status' => EXPRESS_API_REQUEST_STATUS_PENDING, 'create_time' => date('Y-m-d H:i:s'), 'last_request_time' => date('Y-m-d H:i:s'), ); return M(strtolower($express_type) . '_list')->add($data); } function express_api_verify_requesting($express_type, $sale_order_id, $return = false){ $where = array( 'object_id' => $sale_order_id, 'request_status' => EXPRESS_API_REQUEST_STATUS_REQUESTING, ); if (M(strtolower($express_type) . '_list')->where($where)->count() > 0) { if ($return === true) { return false; } throw_json(L('sale_order_express_api_requesing')); rollback(); exit; } return true; } class Log { const EMERG = 'EMERG'; const ALERT = 'ALERT'; const CRIT = 'CRIT'; const ERR = 'ERR'; const WARN = 'WARN'; const NOTICE = 'NOTIC'; const INFO = 'INFO'; const DEBUG = 'DEBUG'; const SQL = 'SQL'; const SYSTEM = 0; const MAIL = 1; const FILE = 3; const SAPI = 4; static $log = array(); static $format = '[ c ]'; static function record($message,$level=self::ERR,$record=false) { if($record || strpos(C('LOG_LEVEL'),$level)) { $now = date(self::$format); self::$log[] = "{$now} {$level}: {$message}\r\n"; } } static function save($type='',$destination='',$extra='') { $type = $type?$type:C('LOG_TYPE'); if(self::FILE == $type) { if(empty($destination)) $destination = LOG_PATH.date('y_m_d').'.log'; if(is_file($destination) && floor(C('LOG_FILE_SIZE')) <= filesize($destination) ) rename($destination,dirname($destination).'/'.time().'-'.basename($destination)); }else{ $destination = $destination?$destination:C('LOG_DEST'); $extra = $extra?$extra:C('LOG_EXTRA'); } error_log('------'.get_client_ip().' REQUEST_URI:'.$_SERVER['REQUEST_URI']."------\r\n".implode('',self::$log)."\r\n", $type,$destination ,$extra); self::$log = array(); } static function write($message,$level=self::ERR,$type='',$destination='',$extra='') { $now = date(self::$format); $type = $type?$type:C('LOG_TYPE'); if(self::FILE == $type) { if(empty($destination)) $destination = LOG_PATH.date('y_m_d').'.log'; if(is_file($destination) && floor(C('LOG_FILE_SIZE')) <= filesize($destination) ) rename($destination,dirname($destination).'/'.time().'-'.basename($destination)); }else{ $destination = $destination?$destination:C('LOG_DEST'); $extra = $extra?$extra:C('LOG_EXTRA'); } error_log("{$now} {$level}: {$message}\r\n", $type,$destination,$extra ); } static public function insertLog($log,$module=null,$action=null){ $module = $module ? $module : getTrueModule(); $action = $action ? $action : getActionName(); $user_id = (getUser('id')==null) ? 1 : getUser('id'); $log_ary = array('module'=>$module,'action'=>$action,'user_id'=>$user_id,'content'=>$log,'ip'=>get_client_ip(),'insert_time'=>date("Y-m-d H:i:s")); M('Log')->add($log_ary); } } class Dispatcher { static public function dispatch() { $urlMode = C('URL_MODEL'); if(!empty($_GET[C('VAR_PATHINFO')])) { $_SERVER['PATH_INFO'] = $_GET[C('VAR_PATHINFO')]; unset($_GET[C('VAR_PATHINFO')]); } if($urlMode == URL_COMPAT ){ define('PHP_FILE',_PHP_FILE_.'?'.C('VAR_PATHINFO').'='); }elseif($urlMode == URL_REWRITE ) { $url = dirname(_PHP_FILE_); if($url == '/' || $url == '\\') $url = ''; define('PHP_FILE',$url); }else { define('PHP_FILE',_PHP_FILE_); } if(C('APP_SUB_DOMAIN_DEPLOY')) { $rules = C('APP_SUB_DOMAIN_RULES'); $subDomain = strtolower(substr($_SERVER['HTTP_HOST'],0,strpos($_SERVER['HTTP_HOST'],'.'))); define('SUB_DOMAIN',$subDomain); if($subDomain && isset($rules[$subDomain])) { $rule = $rules[$subDomain]; }elseif(isset($rules['*'])){ if('www' != $subDomain && !in_array($subDomain,C('APP_SUB_DOMAIN_DENY'))) { $rule = $rules['*']; } } if(!empty($rule)) { $array = explode('/',$rule[0]); $module = array_pop($array); if(!empty($module)) { $_GET[C('VAR_MODULE')] = $module; $domainModule = true; } if(!empty($array)) { $_GET[C('VAR_GROUP')] = array_pop($array); $domainGroup = true; } if(isset($rule[1])) { parse_str($rule[1],$parms); $_GET = array_merge($_GET,$parms); } } } if(empty($_SERVER['PATH_INFO'])) { $types = explode(',',C('URL_PATHINFO_FETCH')); foreach ($types as $type){ if(0===strpos($type,':')) { $_SERVER['PATH_INFO'] = call_user_func(substr($type,1)); break; }elseif(!empty($_SERVER[$type])) { $_SERVER['PATH_INFO'] = (0 === strpos($_SERVER[$type],$_SERVER['SCRIPT_NAME']))? substr($_SERVER[$type], strlen($_SERVER['SCRIPT_NAME'])) : $_SERVER[$type]; break; } } } $depr = C('URL_PATHINFO_DEPR'); if(!empty($_SERVER['PATH_INFO'])) { tag('path_info'); if(C('URL_HTML_SUFFIX')) { $_SERVER['PATH_INFO'] = preg_replace('/\.('.trim(C('URL_HTML_SUFFIX'),'.').')$/i', '', $_SERVER['PATH_INFO']); } if(!self::routerCheck()){ $paths = explode($depr,trim($_SERVER['PATH_INFO'],'/')); if(C('VAR_URL_PARAMS')) { $_GET[C('VAR_URL_PARAMS')] = $paths; } $var = array(); if (C('APP_GROUP_LIST') && !isset($_GET[C('VAR_GROUP')])){ $var[C('VAR_GROUP')] = in_array(strtolower($paths[0]),explode(',',strtolower(C('APP_GROUP_LIST'))))? array_shift($paths) : ''; if(C('APP_GROUP_DENY') && in_array(strtolower($var[C('VAR_GROUP')]),explode(',',strtolower(C('APP_GROUP_DENY'))))) { exit; } } if(!isset($_GET[C('VAR_MODULE')])) { $var[C('VAR_MODULE')] = array_shift($paths); } $var[C('VAR_ACTION')] = array_shift($paths); preg_replace('@(\w+)\/([^\/]+)@e', '$var[\'\\1\']=strip_tags(\'\\2\');', implode('/',$paths)); $_GET = array_merge($var,$_GET); } define('__INFO__',$_SERVER['PATH_INFO']); } if (C('APP_GROUP_LIST')) { define('GROUP_NAME', self::getGroup(C('VAR_GROUP'))); } define('MODULE_NAME',self::getModule(C('VAR_MODULE'))); define('ACTION_NAME',self::getAction(C('VAR_ACTION'))); define('__SELF__',strip_tags($_SERVER['REQUEST_URI'])); define('__APP__',strip_tags(PHP_FILE)); $module = defined('P_MODULE_NAME')?P_MODULE_NAME:MODULE_NAME; if(defined('GROUP_NAME')) { define('__GROUP__',(!empty($domainGroup) || strtolower(GROUP_NAME) == strtolower(C('DEFAULT_GROUP')) )?__APP__ : __APP__.'/'.GROUP_NAME); define('__URL__',!empty($domainModule)?__GROUP__.$depr : __GROUP__.$depr.$module); }else{ define('__URL__',!empty($domainModule)?__APP__.'/' : __APP__.'/'.$module); } define('__ACTION__',__URL__.$depr.ACTION_NAME); $_REQUEST = array_merge($_POST,$_GET); } static public function routerCheck() { $return = false; tag('route_check',$return); return $return; } static private function getModule($var) { $module = (!empty($_GET[$var])? $_GET[$var]:C('DEFAULT_MODULE')); unset($_GET[$var]); if(C('URL_CASE_INSENSITIVE')) { define('P_MODULE_NAME',strtolower($module)); $module = ucfirst(parse_name(P_MODULE_NAME,1)); } return strip_tags($module); } static private function getAction($var) { $action = !empty($_POST[$var]) ? $_POST[$var] : (!empty($_GET[$var])?$_GET[$var]:C('DEFAULT_ACTION')); unset($_POST[$var],$_GET[$var]); define('P_ACTION_NAME',$action); return strip_tags(C('URL_CASE_INSENSITIVE')?strtolower($action):$action); } static private function getGroup($var) { $group = (!empty($_GET[$var])?$_GET[$var]:C('DEFAULT_GROUP')); unset($_GET[$var]); return strip_tags(C('URL_CASE_INSENSITIVE') ?ucfirst(strtolower($group)):$group); } } class App { static public function init() { load_ext_file(); Dispatcher::dispatch(); if (in_array(MODULE_NAME,array('Orders','LoadContainer','Instock'))) { C('DEFAULT_TIMEZONE',C('ORDERS_TIMEZONE')); }elseif (in_array(MODULE_NAME,array('SaleOrder','PreDelivery','Delivery','ReturnSaleOrder'))) { C('DEFAULT_TIMEZONE',C('SALE_TIMEZONE')); } date_default_timezone_set(C('DEFAULT_TIMEZONE')); define('NOW_TIME',$_SERVER['REQUEST_TIME']); define('IS_GET', $_SERVER['REQUEST_METHOD']=='GET' ? true : false); define('IS_POST', $_SERVER['REQUEST_METHOD']=='POST' ? true : false); define('IS_PUT', $_SERVER['REQUEST_METHOD']=='PUT' ? true : false); define('IS_DELETE', $_SERVER['REQUEST_METHOD']=='DELETE' ? true : false); define('IS_AJAX', ((isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH'] == 'xmlhttprequest')) || !empty($_POST[C('VAR_AJAX_SUBMIT')]) || !empty($_GET[C('VAR_AJAX_SUBMIT')])) ? true : false); if(defined('GROUP_NAME')) { if(is_file(CONF_PATH.GROUP_NAME.'/config.php')) C(include CONF_PATH.GROUP_NAME.'/config.php'); if(is_file(COMMON_PATH.GROUP_NAME.'/function.php')) include COMMON_PATH.GROUP_NAME.'/function.php'; } if(C('VAR_FILTERS')) { $filters = explode(',',C('VAR_FILTERS')); foreach($filters as $filter){ $_POST = array_map($filter,$_POST); $_GET = array_map($filter,$_GET); } } if (!MAGIC_QUOTES_GPC){ $_GET = addslashes_deep($_GET); $_POST = addslashes_deep($_POST); C('CFG_OPEN_ESCAPE', true); } $templateSet = C('DEFAULT_THEME'); if(C('TMPL_DETECT_THEME')) { $t = C('VAR_TEMPLATE'); if (isset($_GET[$t])){ $templateSet = $_GET[$t]; }elseif(cookie('think_template')){ $templateSet = cookie('think_template'); } if(!is_dir(TMPL_PATH.$templateSet)) $templateSet = C('DEFAULT_THEME'); cookie('think_template',$templateSet); } define('THEME_NAME', $templateSet); $group = defined('GROUP_NAME')?GROUP_NAME.'/':''; define('THEME_PATH', TMPL_PATH.$group.(THEME_NAME?THEME_NAME.'/':'')); define('APP_TMPL_PATH',__ROOT__.'/'.APP_NAME.(APP_NAME?'/':'').basename(TMPL_PATH).'/'.$group.(THEME_NAME?THEME_NAME.'/':'')); C('TEMPLATE_NAME',THEME_PATH.MODULE_NAME.(defined('GROUP_NAME')?C('TMPL_FILE_DEPR'):'/').ACTION_NAME.C('TMPL_TEMPLATE_SUFFIX')); C('CACHE_PATH',CACHE_PATH.$group); return ; } static public function exec() { if(!preg_match('/^[A-Za-z](\w)*$/',MODULE_NAME)){ $module = false; }else{ $group = defined('GROUP_NAME') ? GROUP_NAME.'/' : ''; $module = A($group.MODULE_NAME); } if(!$module) { if(function_exists('__hack_module')) { $module = __hack_module(); if(!is_object($module)) { return ; } }else{ $module = A('Empty'); if(!$module){ _404(L('_MODULE_NOT_EXIST_').':'.MODULE_NAME); } } } $action = ACTION_NAME; tag('action_name',$action); try{ if(!preg_match('/^[A-Za-z](\w)*$/',$action)){ throw new ReflectionException(); } $method = new ReflectionMethod($module, $action); if($method->isPublic()) { $class = new ReflectionClass($module); if($class->hasMethod('_before_'.$action)) { $before = $class->getMethod('_before_'.$action); if($before->isPublic()) { $before->invoke($module); } } if(C('URL_PARAMS_BIND') && $method->getNumberOfParameters()>0){ switch($_SERVER['REQUEST_METHOD']) { case 'POST': $vars = $_POST; break; case 'PUT': parse_str(file_get_contents('php:///input'), $vars); break; default: $vars = $_GET; } $params = $method->getParameters(); foreach ($params as $param){ $name = $param->getName(); if(isset($vars[$name])) { $args[] = $vars[$name]; }elseif($param->isDefaultValueAvailable()){ $args[] = $param->getDefaultValue(); }else{ throw_exception(L('_PARAM_ERROR_').':'.$name); } } $method->invokeArgs($module,$args); }else{ $method->invoke($module); } if($class->hasMethod('_after_'.$action)) { $after = $class->getMethod('_after_'.$action); if($after->isPublic()) { $after->invoke($module); } } }else{ throw new ReflectionException(); } } catch (ReflectionException $e) { $method = new ReflectionMethod($module,'__call'); $method->invokeArgs($module,array($action,'')); } return ; } static public function run() { tag('app_init'); App::init(); tag('app_begin'); session(C('SESSION_OPTIONS')); G('initTime'); App::exec(); tag('app_end'); if(C('LOG_RECORD')) Log::save(); return ; } } abstract class Action { protected $view = null; private $name = ''; public $tplName = ''; public $_trans = false; public $_trans_commit = false; protected $add_log = false; public function __construct() { if (in_array(ACTION_NAME,C('TRANS_ACTION')) || MODULE_NAME == 'ProcessData') { $this->_trans = true; } $this->_trans == true && startTrans(); tag('action_begin'); $this->view = Think::instance('View'); if(method_exists($this,'_initialize')) $this->_initialize(); if(getUser('role_type')==C('SELLER_ROLE_TYPE')&&in_array(MODULE_NAME,C('BELONG_DATA_MODEL'))){ if(MODULE_NAME=='SaleOrder'){ $_POST['sale_order']['query']['sale_order.factory_id'] = intval(getUser('company_id')); }elseif(in_array(MODULE_NAME,array('EbayAccount','AmazonAccount'))){ $_POST['query']['factory_id'] = intval(getUser('company_id')); }else{ $_POST['query']['company_id'] = intval(getUser('company_id')); } } if(getUser('role_type')==C('WAREHOUSE_ROLE_TYPE')&&in_array(MODULE_NAME,C('WAREHOUSE_DATA_MODEL'))){ if(MODULE_NAME=='SaleOrder'){ $_POST['sale_order']['query']['sale_order.warehouse_id'] = intval(getUser('company_id')); }else{ $_POST['query']['warehouse_id'] = intval(getUser('company_id')); } } $this->checkRecordExistsByFactory(); } public function setName($name){ $this->name = $name; } protected function getActionName($suffix='') { if(empty($this->name)) { $this->name = MODULE_NAME; } return $this->name.$suffix; } protected function getModel($suffix=''){ $name = $this->getActionName($suffix); return $model = D($name); } protected function isAjax() { if(isset($_SERVER['HTTP_X_REQUESTED_WITH']) ) { if('xmlhttprequest' == strtolower($_SERVER['HTTP_X_REQUESTED_WITH'])) return true; } if(!empty($_POST[C('VAR_AJAX_SUBMIT')]) || !empty($_GET[C('VAR_AJAX_SUBMIT')])) return true; return false; } protected function display($templateFile='',$charset='',$contentType='',$strShow=false) { return $this->view->display($templateFile,$charset,$contentType,$strShow); } protected function show($content,$charset='',$contentType='') { if (empty($content)) { echo $this->fetch(); } return $this->view->show($content,$charset,$contentType); } protected function fetch($templateFile='') { return $this->view->fetch($templateFile); } protected function buildHtml($htmlfile='',$htmlpath='',$templateFile='') { $content = $this->fetch($templateFile); $htmlpath = !empty($htmlpath)?$htmlpath:HTML_PATH; $htmlfile = $htmlpath.$htmlfile.C('HTML_FILE_SUFFIX'); if(!is_dir(dirname($htmlfile))) mkdir(dirname($htmlfile),0777,true); if(false === file_put_contents($htmlfile,$content)) throw_exception(L('_CACHE_WRITE_ERROR_').':'.$htmlfile); return $content; } protected function assign($name,$value='') { $this->view->assign($name,$value); } public function __set($name,$value) { $this->view->assign($name,$value); } public function __get($name) { return $this->view->get($name); } public function __call($method,$args) { if( 0 === strcasecmp($method,ACTION_NAME)) { if(method_exists($this,'_empty')) { $this->_empty($method,$args); }elseif(file_exists_case(C('TEMPLATE_NAME')) || file_exists_case(str_replace(APP_PATH,THINK_PATH,C('TEMPLATE_NAME')))){ $this->display(); }elseif(function_exists('__hack_action')) { __hack_action(); }elseif (substr($method,0,5)=='alist'){ $this->_autoIndex($method,$args); }else{ _404(L('_ERROR_ACTION_').':'.ACTION_NAME); } }else{ switch(strtolower($method)) { case 'ispost': case 'isget': case 'ishead': case 'isdelete': case 'isput': return strtolower($_SERVER['REQUEST_METHOD']) == strtolower(substr($method,2)); case '_get': $input =& $_GET;break; case '_post':$input =& $_POST;break; case '_put': parse_str(file_get_contents('php:///input'), $input);break; case '_param': switch($_SERVER['REQUEST_METHOD']) { case 'POST': $input = $_POST; break; case 'PUT': parse_str(file_get_contents('php:///input'), $input); break; default: $input = $_GET; } if(C('VAR_URL_PARAMS')){ $params = $_GET[C('VAR_URL_PARAMS')]; $input = array_merge($input,$params); } break; case '_request': $input =& $_REQUEST;break; case '_session': $input =& $_SESSION;break; case '_cookie': $input =& $_COOKIE;break; case '_server': $input =& $_SERVER;break; case '_globals': $input =& $GLOBALS;break; default: throw_exception(__CLASS__.':'.$method.L('_METHOD_NOT_EXIST_')); } if(isset($input[$args[0]])) { $data = $input[$args[0]]; $filters = isset($args[1])?$args[1]:C('DEFAULT_FILTER'); if($filters) { $filters = explode(',',$filters); foreach($filters as $filter){ if(function_exists($filter)) { $data = is_array($data)?array_map($filter,$data):$filter($data); } } } }else{ $data = isset($args[2])?$args[2]:NULL; } return $data; } } protected function error($message,$status=0,$jumpUrl='',$ajax=false) { $this->dispatchJump($message,$status,$jumpUrl,$ajax); } protected function success($message,$jumpUrl='',$ajax=false) { if($this->_trans == true){ commit(); $this->_trans_commit = true; } if($_POST['submit_type']==1 || $_POST['submit_type']==5 || (in_array(ACTION_NAME, C('KEEP_PAGE_ACTION'))&& MODULE_NAME!='TrackOrder')){ $ajax['status'] = 1; $ajax['href'] = U(MODULE_NAME.'/index'); $ajax['title'] = title('index',MODULE_NAME); } $this->add_log = true; $this->dispatchJump($message,1,$jumpUrl,$ajax); } protected function ajaxReturn($data,$info='',$status=1,$type='') { $result = array(); $result['status'] = $status; $result['info'] = $info; $result['id'] = $this->id; isset($_POST['parent_id']) && $result['parent_id'] = $_POST['parent_id']; isset($_POST['country_name']) && $result['country_name'] = $_POST['country_name']; isset($_POST['district_name']) && $result['district_name'] = $_POST['district_name']; isset($_POST['out_stock_type']) && $result['out_stock_type'] = $_POST['out_stock_type']; $result['submit_type'] = $_POST['submit_type']; if ($_POST['submit_type'] == 4) { $result['barcode_src'] = BARCODE_PATH . MODULE_NAME . '/' . $this->id . '.' . C('BARCODE_PC_TYPE') . '?' . time(); } isset($_POST['comp_name']) && $result['comp_name'] = $_POST['comp_name']; isset($_POST['color_name']) && $result['color_name'] = $_POST['color_name']; isset($_POST['size_name']) && $result['size_name'] = $_POST['size_name']; isset($_POST['position_name']) && $result['position_name'] = $_POST['position_name']; isset($_POST['department_name']) && $result['department_name'] = $_POST['department_name']; isset($_POST['employee_name']) && $result['employee_name'] = $_POST['employee_name']; isset($_POST['product_no']) && $result['product_no'] = $_POST['product_no']; isset($_POST['factory_id']) && $result['factory_id'] = $_POST['factory_id']; isset($_POST['pay_class_name']) && $result['pay_class_name'] = $_POST['pay_class_name']; $result['data'] = $data; if(method_exists($this,'ajaxAssign')) $this->ajaxAssign($result); if(empty($type)) $type = C('DEFAULT_AJAX_RETURN'); if(strtoupper($type)=='JSON') { header('Content-Type:text/html; charset=utf-8'); exit(json_encode($result)); }elseif(strtoupper($type)=='XML'){ header('Content-Type:text/xml; charset=utf-8'); exit(xml_encode($result)); }elseif(strtoupper($type)=='EVAL'){ header('Content-Type:text/html; charset=utf-8'); exit($data); }else{ } } protected function redirect($url,$params=array(),$delay=0,$msg='') { $url = U($url,$params); redirect($url,$delay,$msg); } private function dispatchJump($message,$status=1,$jumpUrl='',$ajax=false) { if($ajax || $this->isAjax()) $this->ajaxReturn($ajax,$message,$status); if(!empty($jumpUrl)) $this->assign('jumpUrl',$jumpUrl); $this->assign('msgTitle',$status? L('_OPERATION_SUCCESS_') : L('_OPERATION_FAIL_')); if($this->view->get('closeWin')) $this->assign('jumpUrl','javascript:window.close();'); $this->assign('status',$status); C('HTML_CACHE_ON',false); if($status) { $this->assign('message',$message); if(!$this->view->get('waitSecond')) $this->assign('waitSecond','1'); if(!$this->view->get('jumpUrl')) $this->assign("jumpUrl",$_SERVER["HTTP_REFERER"]); $this->display(C('TMPL_ACTION_SUCCESS')); }else{ $this->assign('error',$message); if(!$this->view->get('waitSecond')) $this->assign('waitSecond','3'); if(!$this->view->get('jumpUrl')) $this->assign('jumpUrl',"javascript:history.back(-1);"); $this->display(C('TMPL_ACTION_ERROR')); exit ; } } public function __destruct() { if($this->_trans == true && $this->_trans_commit == false){ rollback(); }else{ if(C('LOG_RECORD')) Log::save(); $ary = array(); if ($this->add_log===true) { $ary = array('id'=>$this->id); tag('action_end',$ary); } } } public function _autoMaxNo($step=1,$model=null){ if (C(strtoupper($this->_setauto_cache))==1){ if (ACTION_NAME=='add' || MODULE_NAME=='QuicklyOperate'){ if(MODULE_NAME=='QuicklyOperate') $name = ACTION_NAME; else $name = $this->getActionName(); $model = D($name); if ($this->_default_where){ $max_no = intval($model->where($this->_default_where)->order($this->_auto_no_name.' desc')->getField($this->_auto_no_name))+$step; }else{ $max_no = intval($model->order($this->_auto_no_name.' desc')->getField($this->_auto_no_name))+$step; } $leng = $this->_setauto_leng>0?$this->_setauto_leng:3; $max_no = str_pad($max_no,$leng,'0',STR_PAD_LEFT); $this->assign ( 'max_no',$max_no); } $is_auto_no_class = ' readonly class="spc_input disabled" '; $this->assign ( 'is_auto_no',$is_auto_no_class); } else { $is_auto_no_class = ' class="spc_input" '; $this->assign ( 'is_auto_no',$is_auto_no_class); } } public function displayIndex($temp_file=null) { if ($_POST['search_form']) { $temp_file = empty($this->tplName)?'list':$this->tplName; $this->display ($this->_Member.$temp_file); }else { $temp_file = empty($temp_file)?ACTION_NAME:$temp_file; $this->display($this->_Member.$temp_file); } } public function CheckRecordExistsByFactory(){ $needCheck = array( 'Product' => array('view', 'edit', 'delete', 'restore'), 'SellerStaff' => array('view', 'edit', 'delete', 'restore', 'setEnable'), 'Client' => array('view', 'edit', 'delete'), 'Instock' => array('view', 'edit', 'delete'), 'EbayAccount' => array('view', 'edit', 'delete', 'restore', 'getEbayToken'), 'SaleOrder' => array('view', 'edit', 'delete'), 'ReturnSaleOrder' => array('view', 'edit', 'delete'), 'AmazonAccount' => array('view', 'edit', 'delete', 'restore'), ); if (isset($needCheck[MODULE_NAME]) && in_array(ACTION_NAME, $needCheck[MODULE_NAME])) { $model = D(MODULE_NAME); $pk = $model->getPk(); $count = $model->where($pk . '=' . intval($_REQUEST[$pk]) . getBelongsWhere(!empty($this->belongsWhereFieldPrefix) ? $this->belongsWhereFieldPrefix : '', !empty($this->belongsWhereField) ? $this->belongsWhereField : 'factory_id'))->count(); if ($count == 0) { $this->error (L('_ERROR_')); } } } } class View { protected $tVar = array(); public function assign($name,$value=''){ if(is_array($name)) { $this->tVar = array_merge($this->tVar,$name); }elseif(is_object($name)){ foreach($name as $key =>$val) $this->tVar[$key] = $val; }else { $this->tVar[$name] = $value; } } public function get($name){ if(isset($this->tVar[$name])) return $this->tVar[$name]; else return false; } public function display($templateFile='',$charset='',$contentType='',$strShow=false) { G('viewStartTime'); tag('view_begin',$templateFile); $content = $this->fetch($templateFile); if ($strShow==true){ return $this->show($content,$charset,$contentType,$strShow); }else{ $this->show($content,$charset,$contentType,$strShow); tag('view_end'); } } public function show($content,$charset='',$contentType='',$strShow=false){ if(empty($charset)) $charset = C('DEFAULT_CHARSET'); if(empty($contentType)) $contentType = C('TMPL_CONTENT_TYPE'); header('Content-Type:'.$contentType.'; charset='.$charset); header('Cache-control: private'); header('X-Powered-By:ThinkPHP'); if ($strShow==true){ return $content; }else{ echo $content; } } public function fetch($templateFile='') { tag('view_template',$templateFile); $frame_templateFile = str_replace(APP_PATH,THINK_PATH,$templateFile); if(!is_file($templateFile) && !is_file($frame_templateFile)) return NULL; ob_start(); ob_implicit_flush(0); if('php' == strtolower(C('TMPL_ENGINE_TYPE'))) { extract($this->tVar, EXTR_OVERWRITE); include $templateFile; }else{ $this->tVar = array_merge($this->tVar,array('lang'=>L())); $params = array('var'=>$this->tVar,'file'=>$templateFile); tag('view_parse',$params); } $content = ob_get_clean(); tag('view_filter',$content); return $content; } } class RBAC { static public function authenticate($map,$model='') { if(empty($model)) $model = C('USER_AUTH_MODEL'); return M($model)->where($map)->find(); } static public function authip($strip){ $user_ip = get_client_ip(); $system_ip = explode(";",$strip); $allow = false; $user_ip_arr = explode ('.', $user_ip); for ($i = 0; $i<count($system_ip); $i++) { $cur_allow = true; $system_ip_arr = explode ('.',$system_ip[$i]); if (count($system_ip_arr) != 4) { continue; } foreach ($user_ip_arr as $val) { $value = array_shift($system_ip_arr); if ($value!='*' && $val != $value) { $cur_allow = false; break; } } if ($cur_allow) { $allow = true; break; } } return $allow; } static function saveAccessList($authId=null) { if(null===$authId) $authId = $_SESSION[C('USER_AUTH_KEY')]; if(C('USER_AUTH_TYPE') !=2 && !$_SESSION[C('ADMIN_AUTH_KEY')] ) $_SESSION['_ACCESS_LIST'] = RBAC::getAccessList($authId); return ; } static function getRecordAccessList($authId=null,$module='') { if(null===$authId) $authId = $_SESSION[C('USER_AUTH_KEY')]; if(empty($module)) $module = MODULE_NAME; $accessList = RBAC::getModuleAccessList($authId,$module); return $accessList; } static function checkAccess() { if( C('USER_AUTH_ON') ){ $_module = array(); $_action = array(); if("" != C('REQUIRE_AUTH_MODULE')) { $_module['yes'] = explode(',',strtoupper(C('REQUIRE_AUTH_MODULE'))); }else { $_module['no'] = explode(',',strtoupper(C('NOT_AUTH_MODULE'))); } if((!empty($_module['no']) && !in_array(strtoupper(MODULE_NAME),$_module['no'])) || (!empty($_module['yes']) && in_array(strtoupper(MODULE_NAME),$_module['yes']))) { if("" != C('REQUIRE_AUTH_ACTION')) { $_action['yes'] = explode(',',strtoupper(C('REQUIRE_AUTH_ACTION'))); }else { $_action['no'] = explode(',',strtoupper(C('NOT_AUTH_ACTION'))); } if((!empty($_action['no']) && !in_array(strtoupper(ACTION_NAME),$_action['no'])) || (!empty($_action['yes']) && in_array(strtoupper(ACTION_NAME),$_action['yes']))) { return true; }else { return false; } }else { return false; } } return false; } static public function AccessDecision($appName=APP_NAME) { if(RBAC::checkAccess()) { $accessGuid = md5($appName.MODULE_NAME.ACTION_NAME); if(empty($_SESSION[C('ADMIN_AUTH_KEY')])) { if(C('USER_AUTH_TYPE')==2) { $accessList = RBAC::getAccessList($_SESSION[C('USER_AUTH_KEY')]); }else { if( $_SESSION[$accessGuid]) { return true; } $accessList = $_SESSION['_ACCESS_LIST']; } if(!isset($accessList[strtoupper(MODULE_NAME)][strtoupper(ACTION_NAME)])) { $_SESSION[$accessGuid] = false; return false; } else { $_SESSION[$accessGuid] = true; } }else{ return true; } } return true; } static public function getAccessList($authId) { if (session('user_access_ary')) { return session('user_access_ary'); } $db = Db::getInstance(C('RBAC_DB_DSN')); $table = array('role'=>C('RBAC_ROLE_TABLE'),'user'=>C('RBAC_USER_TABLE'),'access'=>C('RBAC_ACCESS_TABLE'),'node'=>C('RBAC_NODE_TABLE')); $sql = "select node.id,node.module from ".$table['node']." as node,".$table['node']." as node2 where node.parent_id=node2.id and node.level=3 and node.status=1 and node2.module='Public'"; $rs = $db->query($sql); foreach ($rs as $a){ $publicAction[$a['module']] = $a['id']; } $access = array(); $sql = "select node.id,node.module from ". $table['role']." as role,". $table['user']." as user,". $table['access']." as access ,". $table['node']." as node ". "where user.id='{$authId}' and user.role_id=role.id and access.role_id=role.id and access.node_id=node.id and node.level=2 and node.status=1"; $modules = $db->query($sql); foreach($modules as $key=>$module) { if (empty($module['module']) || strtoupper($module['module'])=='PUBLIC') continue; $moduleId = $module['id']; $moduleName = $module['module']; $sql = "select node.id,node.module from ". $table['role']." as role,". $table['user']." as user,". $table['access']." as access ,". $table['node']." as node ". "where user.id='{$authId}' and user.role_id=role.id and access.role_id=role.id and access.node_id=node.id and node.level=3 and node.status=1 and node.parent_id={$moduleId}"; $rs = $db->query($sql); $action = array(); foreach ($rs as $a){ $action[$a['module']] = $a['id']; } $action ? $action += $publicAction : $action = $publicAction; $access[strtoupper($moduleName)] = array_change_key_case($action,CASE_UPPER); } if (C('access_type')!=1) { session('user_access_ary',$access); } return $access; } static public function AccessDataRights(){ if(empty($_SESSION[C('ADMIN_AUTH_KEY')])) { $_module['no'] = explode(',',strtoupper(C('NOT_AUTH_MODULE'))); if(in_array(strtoupper(MODULE_NAME),$_module['no'])){ return true; }else { $_action['no'] = explode(',',strtoupper(C('NOT_AUTH_ACTION'))); if (in_array(strtolower(ACTION_NAME),$_action['no'])) { return true; } $access = $_SESSION['_MODULE_ACCESS_']; $module = strtoupper(MODULE_NAME); switch (ACTION_NAME){ case 'delete': $action = 'DELETE'; break; case 'edit': $action = 'UPDATE'; break; default: return true; break; } $rs = $access[$module][$action]; if (empty($rs)) { return true; }else { $module_to_calss = array( 'REALSTORAGE' => 'StorageShow', ); if (isset($module_to_calss[$module])) { $dr_model = D($module_to_calss[$module]); }else { $dr_model = D(MODULE_NAME); } $fields = $dr_model->getDbFields(); if(!in_array('add_user', $fields)) {return true;} $count = 0; $data_rights = $rs['data_rights']; $where = ' and id='.$_REQUEST['id']; switch ($data_rights) { case 1: $count = 1; break; case 2: if ($_SESSION['LOGIN_USER']['department_id']) { $multi_user = $_SESSION['LOGIN_USER']['group_department_uid']; if ($multi_user) { $count = $dr_model->where('add_user in ('.$multi_user.')'.$where)->count(); } } break; case 3: $count = $dr_model->where('add_user='.USER_ID.$where)->count(); break; default: is_null($data_rights) && $count = 1; break; } if($count>=1) return true; else return false; } } }else { return true; } } static public function getModuleAccessList($authId,$module,$action=null) { $module = strtoupper($module); if (session('module_access_ary_'.$module)) { return session('module_access_ary_'.$module); } if(C('USER_AUTH_TYPE')!=2) { return $_SESSION['_ACCESS_LIST'][$module]; } $db = Db::getInstance(C('RBAC_DB_DSN')); $table = array('role'=>C('RBAC_ROLE_TABLE'),'user'=>C('RBAC_USER_TABLE'),'access'=>C('RBAC_ACCESS_TABLE'),'node'=>C('RBAC_NODE_TABLE')); $where = ''; if ($_SESSION[C('ADMIN_AUTH_KEY')]) { $sql = "select node.id,node.module,node.group_id from ".$table['node']." as node where node.module='{$module}' and node.status=1"; }else{ $where = "user.id='{$authId}' and user.role_id=role.id and access.role_id=role.id and access.node_id=node.id and node.status=1 and"; $sql = "select node.id,node.module,node.group_id from ". $table['role']." as role,". $table['user']." as user,". $table['access']." as access,". $table['node']." as node ". "where {$where} node.module='{$module}' "; } $rs = $db->query($sql); if(empty($rs)) return false; if ($_SESSION[C('ADMIN_AUTH_KEY')]) { $sql = "select node.id,node.module,node.group_id from ".$table['node']." as node where node.parent_id=".$rs[0]['id']; }else{ $sql = "select node.id,node.module,node.group_id,access.data_rights from ". $table['role']." as role,". $table['user']." as user,". $table['access']." as access,". $table['node']." as node ". "where {$where} node.parent_id=".$rs[0]['id']; } $rs2 = $db->query($sql); if(!empty($rs2)) $rs = array_merge($rs,$rs2); $action = array(); foreach ($rs as $value) { $action[strtoupper($value['module'])] = $value; } $access = array($module=>$action); if (C('access_type')!=1) { session('module_access_ary_'.$module,$access); } return $access; } static public function getUserMenu($authId,$type='0') { $db = Db::getInstance(C('RBAC_DB_DSN')); $table = array('role'=>C('RBAC_ROLE_TABLE'),'user'=>C('RBAC_USER_TABLE'),'access'=>C('RBAC_ACCESS_TABLE'),'node'=>C('RBAC_NODE_TABLE')); if ($_SESSION[C('ADMIN_AUTH_KEY')]){ $ext = getUser('role_type')!=C('SELLER_ROLE_TYPE')&&C('ADMIN_NOT_SHOW_MENU_ID') ? ' and node.id not in('.C('ADMIN_NOT_SHOW_MENU_ID').') ' : ''; $sql = "select node.* from ".$table['node']." as node ". "where ((node.group_id>0) or (node.group_id=0 and node.level=1)) and node.status=1 ".$ext." order by group_id asc,sort asc"; }else { $sql = "select node.* from ". $table['role']." as role,". $table['user']." as user,". $table['access']." as access,". $table['node']." as node ". "where user.id='{$authId}' and user.role_id=role.id and access.role_id=role.id and access.node_id=node.id and ((node.group_id>0) or (node.group_id=0 and node.level=1)) and node.status=1 order by group_id asc,sort asc"; } $list = $db->query($sql); foreach($list as $key=>$value) { $reset_list[$value['id']] = $value; } $access = array(); foreach($list as $key=>$value) { if ($value['group_id']>0) { $parent_id = $value['group_id']; if (isset($menu[$parent_id])) { $menu[$parent_id]['sub'][$value['id']] = $value; }else { foreach ($menu as $key1 => $value1) { if (isset($value1['sub'][$parent_id])) { if ($value['parent_link_id']>0) { if(!isset($menu[$key1]['sub'][$parent_id]['sub'][$value['parent_link_id']])){ $menu[$key1]['sub'][$parent_id]['sub'][$value['parent_link_id']] = $reset_list[$value['parent_link_id']]; } $menu[$key1]['sub'][$parent_id]['sub'][$value['parent_link_id']]['ico_link'] = $value; break; } if(!isset($menu[$key1]['sub'][$parent_id]['sub'][$value['id']])){ $menu[$key1]['sub'][$parent_id]['sub'][$value['id']] = $value; break; } } } } }else { $menu[$value['id']] = $value; } } $module_to_url = array( 'insert' => 'add', 'update' => 'edit', ); foreach ($menu as &$value1) { $value1['href'] = 'javascript:;'; foreach ($value1['sub'] as &$value2) { if ($value2['level']==3) { $temp = M($table['node'])->find($value2['parent_id']); $action = isset($module_to_url[$value2['module']]) ? $module_to_url[$value2['module']] : $value2['module']; $value2['href'] = $temp['module'].C('URL_PATHINFO_DEPR').$action; }else { $value2['module'] && $value2['href'] = $value2['module'].C('URL_PATHINFO_DEPR').'index'; } foreach ($value2['sub'] as &$value3) { if ($value3['level']==3) { $temp = M($table['node'])->find($value3['parent_id']); $action = isset($module_to_url[$value3['module']]) ? $module_to_url[$value3['module']] : $value3['module']; $value3['href'] = $temp['module'].C('URL_PATHINFO_DEPR').$action; }else { $value3['module'] && $value3['href'] = $value3['module'].C('URL_PATHINFO_DEPR').'index'; } if (empty($value2['href'])) { $value2['href'] = $value3['href']; } } } } if (C('access_type')==2) { session('user_menu_ary',$menu); } return $menu; } static function getRoleNode(){ $db = Db::getInstance(C('RBAC_DB_DSN')); $list = M(C('RBAC_NODE_TABLE'))->where('level=1 and is_user=1 and status=1 and group_id=0')->select(); $menu = array(); foreach($list as $key=>$value) { if (in_array($value['id'], array(2, 242))) { $list2 = M(C('RBAC_NODE_TABLE'))->where('is_user=1 and status=1 and group_id>0 and parent_id=' . $value['id'])->select(); foreach ($list2 as $value2) { $menu[$value2['id']] = $value2; $sql = 'select * from node where level=2 and status=1 and group_id>0 and parent_id =\''.$value2['id'].'\' order by sort asc'; $list3 = $db->query($sql); $menu[$value2['id']]['sub'] = $list3; } }else { $menu[$value['id']] = $value; $sql = 'select * from node where level=2 and status=1 and group_id>0 and (parent_id in (select id from node where parent_id=\''.$value['id'].'\') or parent_id=\''.$value['id'].'\') order by sort asc'; $list2 = $db->query($sql); $menu[$value['id']]['sub'] = $list2; } } if (C('rights_level')==3) { foreach ($menu as &$value2) { foreach ($value2['sub'] as &$value) { $rights = M(C('RBAC_NODE_TABLE'))->where('is_user=1 and status=1 and parent_id='.$value['id'])->select(); $value['rights'] = $rights; } } } return $menu; } } L(array ( 'login_title' => '系统登录', 'login_name' => '登录名', 'login_failed_error_epass' => 'USBKEY编号与用户绑定不符！', '_operation_wrong_' => '操作出现错误', '_operation_fail_' => '操作失败！', '_operation_success_' => '操作成功！', '_method_not_exist_' => '您所请求的方法不存在！', 'redirect_s' => '保存成功，1秒后页面将自动跳转！', 'service_noet' => '备注：系统疑问请联系客服专员，出现紧急情况请联系紧急联系人！', 'jj_contact' => '紧急联系人', 'service_contact' => '客服联系方式', 'contact_us' => '联系我们', 'ytt_adder' => '公司地址', 'zb_phone' => '值班电话', 'service_mobile' => '直线电话', 'service_phone' => '座机', 'service_name' => '客服专员', 'login_failed_no_epass' => '用户登录失败，UsbKey状态异常，请联系管理人员！', 'login_failed_insert_epass' => '用户登录失败，请插入UsbKey！', 'login_failed_state' => '用户登录失败，状态异常！', 'login_failed_ip' => '用户登录失败，IP错误！', 'login_failed_tip' => '用户登录失败，登录名：', 'login_failed' => '用户登录失败，E-mail或密码错误！', 'login_success' => '登录成功！', 'usbkey_ie' => '绑定UsbKey用户只支持IE浏览器访问！', '_module_not_exist_' => '无法加载模块', '_error_action_' => '无法获取相关记录，操作失败', '_language_not_load_' => '无法加载语言包', '_template_not_exist_' => '模板不存在', '_module_' => '模块', '_action_' => '操作', '_action_not_exist_' => '控制器不存在或者没有定义', '_model_not_exist_' => '模型不存在或者没有定义', '_valid_access_' => '没有权限', '_valid_data_access_' => '没有数据操作权限', '_xml_tag_error_' => 'XML标签语法错误', '_data_type_invalid_' => '非法数据对象！', '_not_load_db_' => '无法加载数据库', '_no_db_driver_' => '无法加载数据库驱动', '_not_support_db_' => '系统暂时不支持数据库', '_no_db_config_' => '没有定义数据库配置', '_not_suppert_' => '系统不支持', '_cache_type_invalid_' => '无法加载缓存类型', '_file_not_writeable_' => '目录（文件）不可写', '_class_not_exist_' => '实例化一个不存在的类！', '_class_conflict_' => '类名冲突', '_template_error_' => '模板引擎错误', '_cache_write_error_' => '缓存文件写入失败！', '_taglib_not_exist_' => '标签库未定义', '_select_not_exist_' => '记录不存在！', '_express_error_' => '表达式错误', '_token_error_' => '表单令牌错误，AJAX表单多次提交还在修改……', '_record_has_update_' => '记录已经被其他用户更新，请刷新列表', '_record_null_' => '该单据已被其他用户删除，请刷新列表', '_delete_null_' => '该单据已被其他用户删除，请刷新列表', '_not_allow_php_' => '模板禁用PHP代码', '_add_failed' => '新增失败', 'register_title' => '系统注册', 'register' => '注册', 'captcha' => '验证码', 'full_name' => '姓名', 'forgot_password' => '忘记密码？', 'captcha_empty' => '请输入验证码！', 'email_empty' => '请输入E-mail！', 'email_unregistered' => '重置密码失败，该E-mail还未注册过！', 'password_empty' => '请输入密码！', 'password_confirm_empty' => '请输入确认密码！', 'reset_password_success' => '重置密码成功！', 'email_send_success' => '请到%s 查阅来自本系统的邮件, 从邮件重设您的密码。', 'email_info_1' => '您的密码重设要求已经得到验证。请点击以下链接输入您新的密码：', 'email_info_2' => '如果你的email程序不支持链接点击，请将上面的地址拷贝至你的浏览器(例如IE)的地址栏并回车进行访问。', 'email_info_3' => '(这是一封自动产生的email，请勿回复。)', ));C(array ( 'app_status' => 'debug', 'app_file_case' => false, 'app_autoload_path' => '', 'app_tags_on' => true, 'app_sub_domain_deploy' => false, 'app_sub_domain_rules' => array ( ), 'app_sub_domain_deny' => array ( ), 'app_group_list' => '', 'cookie_expire' => 3600, 'cookie_domain' => '', 'cookie_path' => '/', 'cookie_prefix' => '', 'default_app' => '@', 'default_lang' => 'cn', 'default_theme' => '', 'default_group' => 'Home', 'default_module' => 'Index', 'default_action' => 'index', 'default_charset' => 'utf-8', 'default_timezone' => 'Europe/Berlin', 'orders_timezone' => 'Europe/Berlin', 'sale_timezone' => 'Europe/Berlin', 'default_ajax_return' => 'JSON', 'default_filter' => 'htmlspecialchars', 'db_type' => 'mysql', 'db_host' => 'localhost', 'db_name' => 'EDA_HTao', 'db_user' => 'root', 'db_pwd' => '123456', 'db_port' => '', 'db_prefix' => '', 'db_fieldtype_check' => false, 'db_fields_cache' => true, 'db_charset' => 'utf8', 'db_deploy_type' => 0, 'db_rw_separate' => false, 'db_master_num' => 1, 'db_slave_no' => '', 'db_sql_build_cache' => false, 'db_sql_build_queue' => 'file', 'db_sql_build_length' => 20, 'data_cache_time' => 0, 'data_cache_compress' => false, 'data_cache_check' => false, 'data_cache_type' => 'Memcache', 'data_cache_path' => './Runtime/Temp/', 'data_cache_subdir' => false, 'data_path_level' => 1, 'query_cache' => 1, 'dd_split_limit' => 5000, 'error_message' => '您浏览的页面暂时发生了错误！请稍后再试～', 'error_page' => '', 'show_error_msg' => false, 'show_page_trace' => true, 'log_record' => false, 'log_type' => 3, 'log_dest' => '', 'log_extra' => '', 'log_level' => 'EMERG,ALERT,CRIT,ERR', 'log_file_size' => 2097152, 'log_exception_record' => false, 'session_auto_start' => true, 'session_options' => array ( ), 'session_type' => '', 'session_prefix' => '', 'var_session_id' => 'session_id', 'tmpl_engine_type' => 'Smarty', 'tmpl_content_type' => 'text/html', 'tmpl_action_error' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Tpl/Public/dispatch_jump.tpl', 'tmpl_action_success' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Tpl/Public/dispatch_jump.tpl', 'tmpl_exception_file' => '/home/wsl/EDA_HTao/YttPHP/FrameWork/Tpl/Public/think_exception.tpl', 'tmpl_detect_theme' => false, 'tmpl_template_suffix' => '.tpl', 'tmpl_file_depr' => '/', 'tmpl_engine_config' => array ( 'template_dir' => 'TMPL_DIR', 'compile_dir' => './Runtime/Temp/', 'caching' => false, 'cache_dir' => './Runtime/Temp/', 'left_delimiter' => '{', 'right_delimiter' => '}', 'compile_check' => true, ), 'url_case_insensitive' => false, 'url_model' => 1, 'url_pathinfo_depr' => '/', 'url_pathinfo_fetch' => 'ORIG_PATH_INFO,REDIRECT_PATH_INFO,REDIRECT_URL', 'url_html_suffix' => '', 'url_param_bind' => true, 'var_page' => 'nextPage', 'var_group' => 'g', 'var_module' => 'm', 'var_action' => 'a', 'var_ajax_submit' => 'ajax', 'var_pathinfo' => 's', 'var_url_params' => '_URL_', 'var_template' => 't', 'var_filters' => '', 'token_on' => false, 'token_name' => '__hash__', 'token_type' => 'md5', 'token_reset' => true, 'lock_on' => true, 'lock_name' => 'lock_version', 'user_auth_on' => true, 'user_auth_type' => 2, 'user_auth_model' => 'User', 'auth_pwd_encoder' => 'md5', 'user_auth_gateway' => '/Public/login', 'admin_gateway' => '/Admin/index', 'not_auth_module' => 'Public,Index,Ajax,AutoComplete,AjaxExpand,AutoShow,QuicklyOperate,EmailList,EbaySeller,AmazonSeller,ProcessData,InstockBarcode', 'require_auth_module' => '', 'not_auth_action' => 'Public,editPsw,resetPasswd,setFormat,updateFormat,setOrderFinished,getUnloadOrder,deleteDetail,deleteBoxDetail,updateService,RatePlan,quicklyShowSaleType,edit,setting,updateSetting,setEnable,import,editStateUpdate,editConfirm', 'auto_delete_detail' => array ( 0 => 'Orders', 1 => 'LoadContainer', 2 => 'Instock', 3 => 'Adjust', 4 => 'InitStorage', 5 => 'SaleOrder', 6 => 'ReturnSaleOrder', 7 => 'Delivery', 8 => 'Transfer', 9 => 'Shipping', 10 => 'ReturnService', ), 'require_auth_action' => '', 'guest_auth_on' => false, 'guest_auth_id' => 0, 'db_like_fields' => 'title|remark', 'rbac_role_table' => 'role', 'rbac_user_table' => 'user', 'rbac_access_table' => 'access', 'rbac_node_table' => 'node', 'keep_page_action' => array ( 0 => 'delete', 1 => 'backShelves', ), 'default_basic_id' => 1, 'default_warehouse_id' => 1, 'trans_action' => array ( 0 => 'insert', 1 => 'update', 2 => 'delete', 3 => 'dealPicking', 4 => 'backShelves', ), 'user_auth_key' => 'warehousing16hrtj7835751962525dd1dddd57535s16a1wfg61g6', 'admin_auth_key' => 'warehousing16w16gf3vsv3355.04275ddddd061574532e61w6guyy', 'super_admin_auth_key' => 'warehousing11w6537837s5357v04ddddd344352816516919sd1ge', 'ebay_runame' => 'EZD-EZDe5bad9-07e6--gforybd', 'ebay_dayligh_savings' => false, 'ebay_entries_pre_page' => '100', 'ebay_variation' => false, 'ebay_variation_size' => '1', 'ebay_variation_color' => '2', 'amazon_country' => array ( 'United Kingdom' => array ( 'MarketplaceID' => 'A1F83G8C2ARO7P', 'URL' => 'www.amazon.co.uk', 'MWS_URL' => 'https://mws-eu.amazonservices.com', ), 'Germany' => array ( 'MarketplaceID' => 'A1PA6795UKMFR9', 'URL' => 'www.amazon.de', 'MWS_URL' => 'https://mws-eu.amazonservices.com', ), 'France' => array ( 'MarketplaceID' => 'A13V1IB3VIYZZH', 'URL' => 'www.amazon.fr', 'MWS_URL' => 'https://mws-eu.amazonservices.com', ), 'Italy' => array ( 'MarketplaceID' => 'APJ6JRA9NG5V4', 'URL' => 'www.amazon.it', 'MWS_URL' => 'https://mws-eu.amazonservices.com', ), 'Spain' => array ( 'MarketplaceID' => 'A1RKKUPIHCS9HS', 'URL' => 'www.amazon.es', 'MWS_URL' => 'https://mws-eu.amazonservices.com', ), 'Japan' => array ( 'MarketplaceID' => 'A1VC38T7YXB528', 'URL' => 'www.amazon.co.jp', 'MWS_URL' => 'https://mws.amazonservices.jp', ), 'China' => array ( 'MarketplaceID' => 'AAHKV2X7AFYLW', 'URL' => 'www.amazon.cn', 'MWS_URL' => 'https://mws.amazonservices.com.cn', ), 'Canada' => array ( 'MarketplaceID' => 'A2EUQ1WTGCTBG2', 'URL' => 'www.amazon.ca', 'MWS_URL' => 'https://mws.amazonservices.ca', ), 'United States' => array ( 'MarketplaceID' => 'ATVPDKIKX0DER', 'URL' => 'www.amazon.com', 'MWS_URL' => 'https://mws.amazonservices.com', ), 'India' => array ( 'MarketplaceID' => 'A21TJRUUN4KGV', 'URL' => 'www.amazon.in', 'MWS_URL' => 'https://mws.amazonservices.in', ), ), 'express_dhl_id' => '9', 'express_dpw_id' => '19', 'express_deutsche_post_id' => '10', 'express_fr_post_id' => '37', 'express_fr_post_express_id' => '61', 'express_brt_id' => '47', 'express_it-gls_id' => '43', 'express_fr-gls_id' => '38', 'express_yodel_id' => '135', 'express_fr-dpd_id' => '158', 'express_de-gls_id' => '16', 'express_uk-tnt_id' => '108', 'express_ups_id' => '33', 'express_dpd_id' => '32', 'express_uk-dpd_id' => '107', 'express_es-dhl_id' => '40', 'express_it-post_id' => '42', 'express_itfedex_id' => '166', 'express_it-ups_id' => '167', 'express_es-gls_id' => '41', 'express_es-asm_id' => '62', 'express_fr-ups_id' => '169', 'express_pl-dhl_id' => '170', 'express_myhemers_id' => '171', 'express_mondial_relay_id' => '172', 'express_virtual_tray_id' => '188', 'express_fr-gd-24_id' => '152', 'express_geodis_id' => '196', 'express_mrw_id' => '195', 'gls_api_express_id' => array ( 0 => 16, 1 => 41, ), 'express_it_virtual_tray_id' => '145', 'order_type_virtual_tray' => '11', 'order_type_tray_express' => '7', 'express_it-01_id' => '145', 'express_fr-01_id' => '1588', 'express_uk-p2_id' => '1544', 'express_uk-p1_id' => '155', 'express_pl-p1_id' => '154', 'express_pl-p2_id' => '1577', 'express_fr_registered_id' => '131,132,133', 'financial_manager_role_id' => '17', 'overseas_manager_role_id' => '14', 'warehouse_operations_overseas_role_id' => '16,22,23', 'gls_eu_countries' => array ( 0 => 'AT', 1 => 'BE', 2 => 'BG', 3 => 'CY', 4 => 'HR', 5 => 'CZ', 6 => 'DK', 7 => 'EE', 8 => 'FI', 9 => 'FR', 10 => 'DE', 11 => 'GR', 12 => 'HU', 13 => 'IE', 14 => 'IT', 15 => 'LV', 16 => 'LT', 17 => 'LU', 18 => 'MT', 19 => 'NL', 20 => 'PL', 21 => 'PT', 22 => 'RO', 23 => 'SK', 24 => 'SI', 25 => 'ES', 26 => 'SE', 27 => 'GB', ), 'gls_not_use_countries' => array ( 0 => '"CH"', 1 => '"GB"', 2 => '"NO"', 3 => '"NL"', ), 'express_fr-freight-1_id' => '138,140', 'express_fr-freight-2_id' => '139,141', 'express_es_correos_id' => '39', 'express_envielia_id' => '94', 'express_es_suer_id' => '161', 'express_de-kr_id' => '58', 'express_es-cd_id' => '67', 'mail_es_correos_id' => '67', 'express_it-nexive_id' => '68', 'express_pl-dpw_id' => '96', 'oneself_take' => '31', 'step_price_calculate' => array ( 0 => 16, 1 => 108, 2 => 61, 3 => 94, 4 => 47, 5 => 161, 6 => 38, 7 => 62, 8 => 138, ), 'shipping_it-brt-oversea_id' => '45', 'express_it_warehouse_id' => '4', 'express_de_warehouse_id' => '2', 'express_es_warehouse_id' => 3, 'express_pl_warehouse_id' => 11, 'express_royal_mail_id' => '106', 'uk-48' => '76', 'royal_mail' => array ( 71 => array ( 0 => 'STL2', 1 => 'L', ), 72 => array ( 0 => 'CRL2', 1 => 'F', ), 73 => array ( 0 => 'STL1', 1 => 'L', ), 74 => array ( 0 => 'CRL1', 1 => 'F', ), 75 => array ( 0 => 'CRL1', 1 => 'P', ), 76 => array ( 0 => 'TPS', ), 77 => array ( 0 => 'TPN', 1 => 'P', ), 78 => array ( 0 => 'SD1', 1 => 'N', ), 80 => array ( 0 => 'OLA', 1 => 'IL', ), 81 => array ( 0 => 'OLA', 1 => 'IF', ), 82 => array ( 0 => 'OLA', 1 => 'IP', ), ), 'it_country_id' => '78', 'de_country_id' => '57', 'fr_country_id' => '52', 'admin_not_show_menu_id' => '213,216,289,290', 'material_description' => 1, 'hs_code' => 2, 'declared_value' => 4, 'sale_price' => 5, 'sys_pay_class' => array ( 'deliveryFee' => 8, 'processFee' => 9, 'packageFee' => 10, 'deliveryCost' => 11, 'returnFee' => 30, 'returnAdditionalFee' => 31, 'outerPackFee' => 32, 'withinPackFee' => 33, 'returnProcessFee' => 41, 'returnPostageFee' => 42, 'insurePrice' => 49, ), 'question_sys_pay_class' => array ( 'proofDeliveryFee' => 34, 'compensationFee' => 35, ), 'warehouse_account_sys_pay_class' => array ( 'warehouseAccoutnFee' => 55, ), 'out_batch_sys_pay_class' => array ( 'domesticShippingFee' => 47, ), 'return_home' => 4, 'down_and_destory' => 3, 'back_to_domestic' => 4, 'picture' => 5, 'picture_general' => 13, 'picture_3c' => 15, 'old_format_return_sale_order_no_max_id' => 14852, 'local_dir' => '/home/www/Lucky_WMS/trunk/', 'cfg_url' => 'http://202.amoydream.com/Lucky_WMS/trunk/warehousing/', 'express_parcel_force_id' => '127', 'uk_country_id' => '61', 'gb_country_id' => '162', 'parcel_force_shipping' => array ( 97 => 'PF24', 98 => 'PF48', 99 => 'EPH', ), 'express_fedex_id' => '164', 'fedex_shipping' => array ( 125 => 'A', 126 => 'B', ), 'cainiao_test_url' => 'http://pac.partner.taobao.net/gateway/pac_message_receiver.do', 'cainiao_url' => 'http://pac.partner.taobao.com/gateway/pac_message_receiver.do', 'cainiao_factory_id' => 104, 'cainiao_sign_key' => 'AE1648952EDA', '4px_sign_key' => 'COEAE20150917', 'cainiao_no' => 'CAINIAO', 'cainiao_cp' => '5000000006772', 'trunk_code' => 'TRUNK_1648952', 'tran_store_code' => 'Tran_Store_1643484', 'cainiao_weight_unit' => 'g', 'cainiao_response_type' => 0, 'cainiao_response_reason' => 'S01', 'cainiao_response_desc' => 'test', 'coe_email' => '179861748@qq.com,1220397479@qq.com', 'cainiao_request_abnormal_send_email' => true, 'cainiao_request_abnormal_email' => '815576575@qq.com,179861748@qq.com', 'cainiao_request_abnormal_limit' => 20, 'dhl_sandbox' => true, 'dhl_config' => array ( 'WSDL_URL' => 'geschaeftskundenversand-api-1.0.wsdl', 'WSDL_CACHE_WSDL' => 'WSDL_CACHE_NONE', 'WSDL_TRACE' => true, 'WSDL_LOGIN' => 'App1_1', 'WSDL_PASSWD' => 'FwTYgI9AoE2Pfnc9Ri30ef9BM0qMJ3', '_USER' => 'edaug', '_SIGNATURE' => 'Hamburg123#', '_ACCOUNTNUMBER' => NULL, '_TYPE' => 0, '_VERSION' => array ( 'majorRelease' => 1, 'minorRelease' => 0, ), 'EKP' => '6278528109', 'PARTNER_ID' => array ( 'germany' => '02', 'england' => '02', 'other' => '02', ), 'PRODUCT_CODE' => array ( 'germany' => 'EPN', 'england' => 'BPI', 'other' => 'BPI', ), 'PACKAGE_TYPE' => 'PK', 'CREATE_LIMIT' => 50, 'DELETE_LIMIT' => 50, 'UPDATE_LIMIT' => 1, ), 'dhl_sandbox_config' => array ( 'WSDL_URL' => 'geschaeftskundenversand-api-1.0-sandbox.wsdl', 'WSDL_CACHE_WSDL' => 'WSDL_CACHE_NONE', 'WSDL_TRACE' => true, 'WSDL_LOGIN' => 'eda01', 'WSDL_PASSWD' => 'Hamburg123#', '_USER' => 'geschaeftskunden_api', '_SIGNATURE' => 'Dhl_ep_test1', '_ACCOUNTNUMBER' => NULL, '_TYPE' => 0, '_VERSION' => array ( 'majorRelease' => 1, 'minorRelease' => 0, ), 'EKP' => '5000000000', 'PARTNER_ID' => array ( 'germany' => '01', 'england' => '01', 'other' => '01', ), 'PRODUCT_CODE' => array ( 'germany' => 'EPN', 'england' => 'EPN', 'other' => 'EPN', ), 'PACKAGE_TYPE' => 'PK', 'CREATE_LIMIT' => 10, 'DELETE_LIMIT' => 120, 'UPDATE_LIMIT' => 1, ), 'dhl_sale_order_id_lower_limit' => 1, 'correos_sandbox' => true, 'correos_config' => array ( 'WSDL_URL' => 'correos.wsdl', 'WSDL_CACHE_WSDL' => 'WSDL_CACHE_NONE', 'WSDL_TRACE' => true, 'WSDL_LOGIN' => 'w0017261', 'WSDL_PASSWD' => 'sY7UWEjF#', '_Location' => 'https://preregistroenvios.correos.es/preregistroenvios', '_CodEtiquetador' => '28XG', 'CodProducto' => 'S0132', ), 'correos_sandbox_config' => array ( 'WSDL_URL' => 'correos.wsdl', 'WSDL_CACHE_WSDL' => 'WSDL_CACHE_NONE', 'WSDL_TRACE' => true, 'WSDL_LOGIN' => 'w0017261', 'WSDL_PASSWD' => 'fulIeLNv', '_Location' => 'https://preregistroenviospre.correos.es/preregistroenvios', '_CodEtiquetador' => 'XXX1', 'CodProducto' => 'S0132', ), 'correos_sale_order_id_lower_limit' => 0, 'setauto_warehouse_no' => '2', 'setauto_employee_no' => '1', 'setauto_client_no' => '1', 'setauto_factory_no' => '1', 'setauto_logistics_no' => '1', 'setauto_express_no' => '1', 'setauto_properties_no' => '1', 'setauto_propertiesvalue_no' => '1', 'setauto_product_no' => '2', 'how_assign_info' => '2', 'unpaid_arrearage_details' => '1', 'all_arrearage_detail' => '1', 'arrearage_details_afcloseout' => '1', 'set_rate_type' => '3', 'currency' => '2', 'show_many_basic' => '2', 'client_currency' => '1,2,4', 'factory_currency' => '1,2,4', 'company_currency' => '1,2,4', 'client_currency_count' => '3', 'factory_currency_count' => '3', 'logistics_currency_count' => '0', 'company_currency_count' => '3', 'dhl_shipper_name1' => 'test', 'dhl_shipper_name2' => '', 'dhl_shipper_streetname' => 'test', 'dhl_shipper_streetnumber' => '2', 'dhl_shipper_post_code' => '21000', 'dhl_shipper_city' => 'test', 'dhl_shipper_country_id' => '57', 'dhl_shipper_contact' => '', 'dhl_shipper_phone' => '', 'dhl_shipper_email' => '', 'dhl_shipper_fax' => '', 'dhl_shipper_mobile' => '', 'dhl_limit_day_start_hour' => '00', 'dhl_limit_day_start_minute' => '00', 'dhl_limit_day_end_hour' => '00', 'dhl_limit_day_end_minute' => '00', 'dhl_limit_week_start' => '0', 'dhl_limit_week_start_hour' => '00', 'dhl_limit_week_start_minute' => '00', 'dhl_limit_week_end' => '0', 'dhl_limit_week_end_hour' => '00', 'dhl_limit_week_end_minute' => '00', 'correos_shipper_name' => 'test', 'correos_shipper_city' => 'test', 'correos_shipper_post_code' => '21000', 'correos_shipper_streetname' => 'street', 'correos_shipper_streetnumber' => '', 'correos_shipper_province' => '', 'correos_shipper_contact' => '', 'correos_shipper_email' => '', 'correos_shipper_phone' => '', 'correos_shipper_mobile' => '', 'correos_limit_day_start_hour' => '00', 'correos_limit_day_start_minute' => '00', 'correos_limit_day_end_hour' => '00', 'correos_limit_day_end_minute' => '00', 'correos_limit_week_start' => '0', 'correos_limit_week_start_hour' => '00', 'correos_limit_week_start_minute' => '00', 'correos_limit_week_end' => '0', 'correos_limit_week_end_hour' => '00', 'correos_limit_week_end_minute' => '00', 'price_length' => '2', 'money_length' => '2', 'cube_length' => '2', 'storage_zero' => '0', 'barcode' => '0', 'multi_client' => '0', 'add_max_row' => '3', 'show_guide' => '0', 'line_number' => '20', 'picking_max_row' => '9999', 'email_adder' => '1127796577@qq.com', 'email_password' => 'lantianshunyong2', 'email_host' => 'smtp.qq.com', 'email_port' => '', 'email_title' => '', 'rights_level' => '2', 'show_data_right' => '2', 'access_type' => '1', 'gls_send_name1' => '', 'gls_send_name2' => '', 'gls_shipper_name3' => '', 'gls_shipper_address' => 'Am Fasanenhof 1	', 'gls_shipper_contact' => '', 'gls_package_no_start' => '10279269905', 'gls_package_no_end' => '102792619990', 'gls_user_account' => '99999', 'gls_receive_station_code' => 'DE 100', 'gls_contact_id' => '276aaaaaaa', 'gls_customer_id' => '2760000000', 'gls_shipper_name' => 'eda', 'gls_shipper_name2' => '', 'correos_shipper_country_code' => 'DE	', 'correos_shipper_postcode' => '19061', 'gls_shipper_city' => 'Schwerin', 'gls_shipper_country_code' => 'DE', 'gls_shipper_postcode' => '19061', 'gls_' => 'Array', 'gls_w_id_2' => '2', 'gls_ip_2' => '194.25.217.210', 'gls_port_2' => '3030', 'gls_user_account_2' => '99999', 'gls_receive_station_code_2' => 'DE 100', 'gls_contact_id_2' => '276aaaaaaa', 'gls_customer_id_2' => '2760000000', 'gls_shipper_name_2' => 'eda', 'gls_shipper_address_2' => 'Am Fasanenhof 1	', 'gls_shipper_country_code_2' => 'DE', 'gls_shipper_postcode_2' => '19061', 'gls_shipper_city_2' => 'Schwerin', 'gls_package_no_start_2' => '10279270601', 'gls_package_no_end_2' => '10279270700', 'gls_w_id_11' => '11', 'gls_ip_11' => '78.10.45.122', 'gls_port_11' => '3030', 'gls_user_account_11' => '99999', 'gls_receive_station_code_11' => 'DE 100', 'gls_contact_id_11' => '276aaaaaaa', 'gls_customer_id_11' => '2760000000', 'gls_shipper_name_11' => 'eda', 'gls_shipper_address_11' => 'Am Fasanenhof 1	', 'gls_shipper_country_code_11' => 'PL', 'gls_shipper_postcode_11' => '19061', 'gls_shipper_city_11' => 'cityroad', 'gls_package_no_start_11' => '10279270101', 'gls_package_no_end_11' => '10279270500', 'gls_w_id_3' => '3', 'gls_ip_3' => '78.10.45.122', 'gls_port_3' => '3030', 'gls_user_account_3' => '99999', 'gls_receive_station_code_3' => 'ES', 'gls_contact_id_3' => '276aaaaaaa', 'gls_customer_id_3' => 'ES', 'gls_shipper_name_3' => 'et', 'gls_shipper_address_3' => 'ES', 'gls_shipper_country_code_3' => 'ES', 'gls_shipper_postcode_3' => '21000', 'gls_shipper_city_3' => 'mariad', 'gls_package_no_start_3' => '10279270201', 'gls_package_no_end_3' => '10279270501', 'extends' => array ( 'Product&insert' => array ( 0 => 'ProductSku', ), 'Product&update' => array ( 0 => 'ProductSku', ), 'FundsClass&edit' => array ( 0 => 'FundsClass', ), 'FundsClass&delete' => array ( 0 => 'FundsClass', ), 'Orders&edit' => array ( 0 => 'Orders', ), 'Orders&update' => array ( 0 => 'Orders', ), 'Orders&deleteDetail' => array ( 0 => 'Orders', ), 'Orders&delete' => array ( 0 => 'Orders', ), 'LoadContainer&edit' => array ( 0 => 'LoadContainer', 1 => 'Funds', ), 'LoadContainer&delete' => array ( 0 => 'LoadContainer', ), 'LoadContainer^insert' => array ( 0 => 'Funds', ), 'LoadContainer^update' => array ( 0 => 'LoadContainer', 1 => 'Funds', ), 'Instock&edit' => array ( 0 => 'Instock', ), 'Instock&delete' => array ( 0 => 'Instock', ), 'Instock&deleteDetail' => array ( 0 => 'Instock', ), 'Instock&deleteBoxDetail' => array ( 0 => 'Instock', ), 'Instock^update' => array ( 0 => 'Instock', ), 'InstockImport&delete' => array ( 0 => 'InstockImport', 1 => 'CheckStorage', ), 'InstockImport^insert' => array ( 0 => 'InstockImport', ), 'InstockAbnormal&edit' => array ( 0 => 'InstockImport', ), 'Picking&delete' => array ( 0 => 'Picking', ), 'Picking&insert' => array ( ), 'PickingImport&delete' => array ( 0 => 'PickingImport', ), 'PickingImport&backShelves' => array ( 0 => 'PickingImport', ), 'PickingAbnormal&edit' => array ( 0 => 'PickingImport', ), 'PickingAbnormal^update' => array ( 0 => 'PickingImport', ), 'Shipping&delete' => array ( 0 => 'Shipping', ), 'Shipping&deleteDetail' => array ( 0 => 'Shipping', ), 'Cost&delete' => array ( 0 => 'Cost', ), 'Cost&deleteDetail' => array ( 0 => 'Cost', ), 'SaleOrder&outStock' => array ( 0 => 'SaleOrder', ), 'SaleOrder&delete' => array ( 0 => 'SaleOrder', ), 'SaleOrder&edit' => array ( 0 => 'SaleOrder', ), 'SaleOrder^insert' => array ( 0 => 'SaleOrder', 1 => 'CheckStorage', ), 'SaleOrder^update' => array ( 0 => 'CheckStorage', 1 => 'SaleOrder', 2 => 'ExpressApi', 3 => 'Gls', ), 'SaleOrder&deleteShipmentDD' => array ( 0 => 'ExpressApi', 1 => 'Gls', ), 'PreDelivery&delete' => array ( 0 => 'PreDelivery', ), 'PreDelivery&edit' => array ( 0 => 'PreDelivery', ), 'PreDelivery&update' => array ( 0 => 'PreDelivery', ), 'PreDelivery^insert' => array ( 0 => 'PreDelivery', ), 'Delivery&delete' => array ( 0 => 'CheckStockTake', 1 => 'Delivery', 2 => 'Funds', ), 'Delivery&edit' => array ( 0 => 'CheckStockTake', 1 => 'Delivery', 2 => 'Funds', ), 'Delivery^insert' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', 2 => 'Delivery', ), 'Delivery^update' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'ReturnSaleOrder&delete' => array ( 0 => 'ReturnSaleOrder', 1 => 'CheckStorage', 2 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrder&edit' => array ( 0 => 'ReturnSaleOrder', ), 'ReturnSaleOrder^insert' => array ( 0 => 'ReturnSaleOrder', ), 'ReturnSaleOrder^update' => array ( 0 => 'ReturnSaleOrder', ), 'ReturnSaleOrderStorage&delete' => array ( 0 => 'CheckStorage', 1 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage&edit' => array ( 0 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage&add' => array ( 0 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage^update' => array ( 0 => 'CheckStorage', 1 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage^insert' => array ( ), 'ReturnSaleOrderStorage&deal' => array ( 0 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage^updateDeal' => array ( 0 => 'CheckStorage', 1 => 'ReturnSaleOrderStorage', ), 'ReturnSaleOrderStorage&deleteDeal' => array ( 0 => 'ReturnSaleOrderStorage', ), 'ReturnService&delete' => array ( 0 => 'ReturnService', ), 'ReturnService&deleteDetail' => array ( 0 => 'ReturnService', ), 'PriceAdjust&delete' => array ( 0 => 'Funds', 1 => 'PriceAdjust', ), 'PriceAdjust^insert' => array ( 0 => 'Funds', ), 'Adjust&delete' => array ( 0 => 'CheckStorage', ), 'Adjust&deleteDetail' => array ( 0 => 'CheckStorage', ), 'Adjust^insert' => array ( 0 => 'CheckStorage', ), 'Adjust^update' => array ( 0 => 'CheckStorage', ), 'InstockImportAdjust&delete' => array ( 0 => 'CheckStorage', ), 'InstockImportAdjust&deleteDetail' => array ( 0 => 'CheckStorage', ), 'InstockImportAdjust^insert' => array ( 0 => 'CheckStorage', ), 'InstockImportAdjust^update' => array ( 0 => 'CheckStorage', ), 'InitStorage^insert' => array ( 0 => 'CheckStockTake', 1 => 'InitStorage', ), 'InitStorage&edit' => array ( 0 => 'CheckStockTake', ), 'InitStorage^update' => array ( 0 => 'CheckStockTake', 1 => 'InitStorage', 2 => 'CheckStorage', ), 'InitStorage&delete' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'InitStorage&deleteDetail' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'Transfer&edit' => array ( 0 => 'CheckStockTake', ), 'Transfer&delete' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'Transfer&deleteDetail' => array ( 0 => 'CheckStorage', ), 'Transfer^insert' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'Transfer^update' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'MoveWare&edit' => array ( 0 => 'CheckStockTake', 1 => 'MoveWare', ), 'MoveWare&delete' => array ( 0 => 'CheckStockTake', 1 => 'MoveWare', ), 'MoveWare^insert' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', ), 'MoveWare^update' => array ( 0 => 'CheckStockTake', 1 => 'CheckStorage', 2 => 'MoveWare', ), 'ClientOtherArrearages&delete' => array ( 0 => 'Funds', ), 'ClientOtherArrearages^insert' => array ( 0 => 'Funds', ), 'ClientIni&delete' => array ( 0 => 'Funds', ), 'ClientIni^insert' => array ( 0 => 'Funds', ), 'ClientFunds&delete' => array ( 0 => 'Funds', ), 'ClientFunds^insert' => array ( 0 => 'Funds', ), 'ClientCheckAccount&delete' => array ( 0 => 'Funds', ), 'ClientCheckAccount^insert' => array ( 0 => 'Funds', ), 'FactoryOtherArrearages&delete' => array ( 0 => 'Funds', ), 'FactoryOtherArrearages^insert' => array ( 0 => 'Funds', ), 'FactoryIni&delete' => array ( 0 => 'Funds', ), 'FactoryIni^insert' => array ( 0 => 'Funds', ), 'FactoryFunds&delete' => array ( 0 => 'Funds', ), 'FactoryFunds^insert' => array ( 0 => 'Funds', ), 'FactoryCheckAccount&delete' => array ( 0 => 'Funds', ), 'FactoryCheckAccount^insert' => array ( 0 => 'Funds', ), 'LogisticsOtherArrearages&delete' => array ( 0 => 'Funds', ), 'LogisticsOtherArrearages^insert' => array ( 0 => 'Funds', ), 'LogisticsIni&delete' => array ( 0 => 'Funds', ), 'LogisticsIni^insert' => array ( 0 => 'Funds', ), 'LogisticsFunds&delete' => array ( 0 => 'Funds', ), 'LogisticsFunds^insert' => array ( 0 => 'Funds', ), 'LogisticsCheckAccount&delete' => array ( 0 => 'Funds', ), 'LogisticsCheckAccount^insert' => array ( 0 => 'Funds', ), 'Stocktake&delete' => array ( 0 => 'Stocktake', ), 'Stocktake&edit' => array ( 0 => 'Stocktake', ), 'Profitandloss&add' => array ( 0 => 'Stocktake', ), 'InvoiceIn^insert' => array ( 0 => 'InvoiceIn', ), 'InvoiceIn^update' => array ( 0 => 'CheckInvoiceStorage', ), 'InvoiceIn&delete' => array ( 0 => 'CheckInvoiceStorage', ), 'InvoiceOut^insert' => array ( 0 => 'InvoiceOut', 1 => 'CheckInvoiceStorage', ), 'InvoiceOut^update' => array ( 0 => 'CheckInvoiceStorage', ), 'InvoiceOut&delete' => array ( 0 => 'CheckInvoiceStorage', ), 'InvoiceInitStorage^update' => array ( 0 => 'CheckInvoiceStorage', ), 'InvoiceInitStorage&delete' => array ( 0 => 'CheckInvoiceStorage', ), 'Profitandloss&rightExtra' => array ( 0 => 'Profitandloss', ), 'Profitandloss&delete' => array ( 0 => 'Profitandloss', ), 'Role&edit' => array ( 0 => 'Role', ), 'Role&delete' => array ( 0 => 'Role', ), 'Epass&edit' => array ( 0 => 'Epass', ), 'Epass&update' => array ( 0 => 'Epass', ), 'Epass&delete' => array ( 0 => 'Epass', ), 'Recharge&delete' => array ( 0 => 'Recharge', ), 'Recharge&confirm' => array ( 0 => 'Recharge', ), 'Recharge&editConfirm' => array ( 0 => 'Recharge', ), 'ClientRecharge&delete' => array ( 0 => 'Funds', ), 'ClientRecharge^insert' => array ( 0 => 'Funds', ), 'InstockStorage&delete' => array ( 0 => 'CheckStorage', ), 'InstockStorage&deleteDetail' => array ( 0 => 'CheckStorage', ), 'InstockStorage&add' => array ( 0 => 'InstockStorage', ), 'InstockStorage^insert' => array ( 0 => 'InstockStorage', 1 => 'CheckStorage', ), 'InstockStorage^update' => array ( 0 => 'InstockStorage', 1 => 'CheckStorage', ), 'TrackOrder&delete' => array ( 0 => 'TrackOrder', ), 'Warehouse^update' => array ( 0 => 'Warehouse', ), 'Warehouse&delete' => array ( 0 => 'Warehouse', ), 'DomesticWaybill&delete' => array ( 0 => 'CheckStorage', ), 'DomesticWaybill&deleteDetail' => array ( 0 => 'CheckStorage', ), 'DomesticWaybill^insert' => array ( 0 => 'CheckStorage', ), 'DomesticWaybill^update' => array ( 0 => 'CheckStorage', ), 'Factory^insert' => array ( 0 => 'Factory', ), 'Factory^update' => array ( 0 => 'Factory', ), 'Factory^updateSetting' => array ( 0 => 'Factory', ), 'ShiftWarehouse&delete' => array ( 0 => 'CheckStorage', ), 'ShiftWarehouse&deleteDetail' => array ( 0 => 'CheckStorage', ), 'ShiftWarehouse^insert' => array ( 0 => 'CheckStorage', ), 'ShiftWarehouse^update' => array ( 0 => 'CheckStorage', ), 'WarehouseFee^insert' => array ( 0 => 'WarehouseFee', ), 'WarehouseFee^update' => array ( 0 => 'WarehouseFee', ), 'WarehouseFee&delete' => array ( 0 => 'WarehouseFee', ), 'PackBox^insert' => array ( 0 => 'PackBox', ), 'PackBox^update' => array ( 0 => 'PackBox', ), 'PackBox&edit' => array ( 0 => 'PackBox', ), 'PackBox&delete' => array ( 0 => 'PackBox', ), 'PackBox&deleteDetail' => array ( 0 => 'PackBox', ), 'OutBatch&add' => array ( 0 => 'OutBatch', ), 'OutBatch&edit' => array ( 0 => 'OutBatch', ), 'OutBatch&deleteDetail' => array ( 0 => 'OutBatch', ), 'OutBatch&delete' => array ( 0 => 'OutBatch', ), 'OutBatch^insert' => array ( 0 => 'OutBatch', 1 => 'CheckStorage', ), 'OutBatch^update' => array ( 0 => 'OutBatch', 1 => 'CheckStorage', ), 'OrderType&delete' => array ( 0 => 'OrderType', ), 'Product' => array ( 0 => 'Product', ), 'rateinfo' => array ( 0 => 'RateInfo', ), 'Orders' => array ( 0 => 'Orders', 1 => 'EmailList', ), 'LoadContainer' => array ( 0 => 'LoadContainer', 1 => 'Storage', 2 => 'FactoryOnRoad', 3 => 'EmailList', ), 'Instock' => array ( 0 => 'Instock', 1 => 'EmailList', ), 'InstockImport' => array ( 0 => 'InstockImport', 1 => 'Storage', 2 => 'FiFo', ), 'InstockAbnormal' => array ( 0 => 'InstockImport', 1 => 'Storage', 2 => 'FiFo', ), 'Picking' => array ( 0 => 'FiFo', 1 => 'Picking', 2 => 'Storage', ), 'PickingImport' => array ( 0 => 'PickingImport', 1 => 'Storage', 2 => 'FiFo', ), 'PickingAbnormal' => array ( 0 => 'PickingImport', 1 => 'Storage', ), 'SaleOrder' => array ( 0 => 'SaleOrder', 1 => 'Storage', 2 => 'ClientSale', 3 => 'ExpressApi', 4 => 'Gls', ), 'PreDelivery' => array ( 0 => 'PreDelivery', ), 'Delivery' => array ( 0 => 'Delivery', 1 => 'DealDiff', 2 => 'Storage', 3 => 'ClientDelivery', 4 => 'EmailList', ), 'ReturnSaleOrder' => array ( 0 => 'ReturnSaleOrder', 1 => 'ReturnSaleOrderStorage', 2 => 'ClientReturnSaleStorage', 3 => 'CaiNiaoApi', ), 'ReturnSaleOrderStorage' => array ( 0 => 'ReturnSaleOrderStorage', 1 => 'ClientReturnSaleStorage', 2 => 'Storage', 3 => 'FiFo', 4 => 'CaiNiaoApi', ), 'PriceAdjust' => array ( 0 => 'ClientPriceAdjust', 1 => 'PriceAdjust', ), 'Adjust' => array ( 0 => 'Storage', 1 => 'FiFo', ), 'InstockImportAdjust' => array ( 0 => 'Storage', 1 => 'FiFo', ), 'Transfer' => array ( 0 => 'Storage', ), 'MoveWare' => array ( 0 => 'Storage', ), 'InitStorage' => array ( 0 => 'Storage', ), 'Profitandloss' => array ( 0 => 'Profitandloss', 1 => 'Storage', 2 => 'FiFo', ), 'InvoiceIn' => array ( 0 => 'InvoiceNo', 1 => 'InvoiceIn', ), 'InvoiceOut' => array ( 0 => 'InvoiceNo', 1 => 'InvoiceOut', ), 'Recharge' => array ( 0 => 'Recharge', ), 'DeclaredValue' => array ( 0 => 'ProductDeclaredValue', ), 'InstockStorage' => array ( 0 => 'InstockStorage', 1 => 'Storage', 2 => 'FiFo', 3 => 'EmailList', ), 'QuestionOrder' => array ( 0 => 'QuestionOrder', 1 => 'ClientQuestionOrder', ), 'DomesticWaybill' => array ( 0 => 'Storage', 1 => 'FiFo', ), 'ShiftWarehouse' => array ( 0 => 'Storage', 1 => 'FiFo', ), 'WarehouseAccount' => array ( 0 => 'ClientWarehouseAccount', ), 'PackBox' => array ( 0 => 'PackBox', 1 => 'CaiNiaoApi', ), 'OutBatch' => array ( 0 => 'OutBatch', 1 => 'ClientReturnSaleStorage', 2 => 'ClientOutBatch', 3 => 'Storage', 4 => 'FiFo', 5 => 'CaiNiaoApi', 6 => 'EmailList', ), 'app_init' => array ( ), 'app_begin' => array ( 0 => 'CheckLang', 1 => 'ReadHtmlCache', ), 'route_check' => array ( 0 => 'CheckRoute', ), 'app_end' => array ( ), 'path_info' => array ( ), 'action_begin' => array ( ), 'action_end' => array ( 0 => 'Log', ), 'view_begin' => array ( ), 'view_template' => array ( 0 => 'LocationTemplate', ), 'view_parse' => array ( 0 => 'ParseTemplate', ), 'view_filter' => array ( 0 => 'ContentReplace', 1 => 'TokenBuild', 2 => 'WriteHtmlCache', 3 => 'ShowRuntime', ), 'view_end' => array ( 0 => 'ShowPageTrace', ), ), ));G('loadTime');Think::Start();